{
	"id": "b629218954fe01f8aaae0bc809d432cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokenContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title KYC Token Contract\n * @dev ERC20 token with KYC functionality, dividend period, and role-based access control\n */\ncontract KYCToken is ERC20Capped, AccessControl, ReentrancyGuard {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant KYC_ROLE = keccak256(\"KYC_ROLE\");\n\n    uint8 private _decimals;\n    uint256 private _rate;\n    address payable private _owner;\n    address private _beneficiary;\n    \n    bool private _dividendPeriod;\n    \n    // KYC tracking\n    address[] private _kycUsers;\n    mapping(address => bool) private _isKYCed;\n    mapping(address => uint256) private _kycUserIndices;\n    \n    // Token ownership tracking\n    mapping(address => bool) private _ownsTokens;\n    \n    // Events\n    event KYCUserAdded(address indexed userAddress);\n    event KYCUserRemoved(address indexed userAddress);\n    \n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_,\n        uint256 cap_,\n        uint256 rate_,\n        address beneficiary_\n    ) ERC20(name_, symbol_) ERC20Capped(cap_) {\n        require(beneficiary_ != address(0), \"Invalid beneficiary address\");\n        \n        _decimals = decimals_;\n        _rate = rate_;\n        _beneficiary = beneficiary_;\n        _owner = payable(msg.sender);\n        \n        // Setup roles\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n        _grantRole(KYC_ROLE, msg.sender);\n        \n        // Set role admins\n        _setRoleAdmin(MINTER_ROLE, DEFAULT_ADMIN_ROLE);\n        _setRoleAdmin(KYC_ROLE, DEFAULT_ADMIN_ROLE);\n    }\n    \n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n    \n    function rate() public view returns (uint256) {\n        return _rate;\n    }\n    \n    function owner() public view returns (address payable) {\n        return _owner;\n    }\n    \n    function getBeneficiary() public view returns (address) {\n        return _beneficiary;\n    }\n    \n    receive() external payable {}\n    \n    modifier onlyOwner() {\n        require(msg.sender == _owner, \"Only the Owner can call this function\");\n        _;\n    }\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Invalid new owner address.\");\n        _owner = payable(newOwner);\n    }\n    \n    function addMinter(address newMinter) public onlyOwner nonReentrant {\n        _grantRole(MINTER_ROLE, newMinter);\n    }\n    \n    function sendTokens(address buyer, uint256 amount) public onlyRole(MINTER_ROLE) nonReentrant {\n        require(buyer != address(0), \"buyer is a zero address\");\n        require(amount > 0, \"weiAmount is 0\");\n        \n        uint256 tokenAmount = amount * _rate;\n        _mint(buyer, tokenAmount);\n    }\n    \n    /**\n     * @dev Override transfer function with KYC and dividend period checks\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        _validateTransfer(msg.sender, recipient);\n        bool success = super.transfer(recipient, amount);\n        _updateTokenOwnership(msg.sender, recipient);\n        return success;\n    }\n    \n    /**\n     * @dev Override transferFrom function with KYC and dividend period checks\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n        _validateTransfer(sender, recipient);\n        bool success = super.transferFrom(sender, recipient, amount);\n        _updateTokenOwnership(sender, recipient);\n        return success;\n    }\n    \n    /**\n     * @dev Internal function to validate transfer conditions\n     */\n    function _validateTransfer(address sender, address recipient) private view {\n        require(!_dividendPeriod, \"Dividend Period is ongoing, all transfers will resume after dividend period.\");\n        require(_isKYCed[sender], \"Sender is not KYCed\");\n        require(_isKYCed[recipient], \"Recipient is not KYCed\");\n    }\n    \n    /**\n     * @dev Internal function to update token ownership status\n     */\n    function _updateTokenOwnership(address sender, address recipient) private {\n        _ownsTokens[recipient] = true;\n        _ownsTokens[sender] = balanceOf(sender) > 0;\n    }\n    \n    function burnMyBalance(address _tokenOwner, uint256 _amount) public onlyRole(MINTER_ROLE) returns (bool) {\n        require(_tokenOwner != address(0), \"ERC20: burn from the zero address\");\n        \n        _burn(_tokenOwner, _amount);\n        \n        if (balanceOf(_tokenOwner) == 0) {\n            _ownsTokens[_tokenOwner] = false;\n        }\n        \n        return true;\n    }\n    \n    function updateDividendPeriodStatus(bool state) public onlyRole(MINTER_ROLE) nonReentrant {\n        _dividendPeriod = state;\n    }\n    \n    function getDividendPaymentPeriodState() public view returns (bool) {\n        return _dividendPeriod;\n    }\n    \n    function addKYCUser(address user) public onlyRole(KYC_ROLE) nonReentrant {\n        require(user != address(0), \"Invalid address\");\n        require(!_isKYCed[user], \"User is already KYCed\");\n        \n        _isKYCed[user] = true;\n        _kycUsers.push(user);\n        _kycUserIndices[user] = _kycUsers.length - 1;\n        _ownsTokens[user] = false;\n        \n        emit KYCUserAdded(user);\n    }\n    \n    function removeKYCUser(address user) public onlyRole(KYC_ROLE) nonReentrant {\n        require(_isKYCed[user], \"User is not KYCed\");\n        require(!_ownsTokens[user], \"User owns tokens, cannot remove from KYC list\");\n        \n        bool found = false;\n        if (_kycUserIndices[user] < _kycUsers.length) {\n            found = _kycUsers[_kycUserIndices[user]] == user;\n        }\n        require(found, \"User not found in KYC list\");\n        \n        uint256 lastIndex = _kycUsers.length - 1;\n        if (_kycUserIndices[user] != lastIndex) {\n            _kycUsers[_kycUserIndices[user]] = _kycUsers[lastIndex];\n            _kycUserIndices[_kycUsers[lastIndex]] = _kycUserIndices[user];\n        }\n        _kycUsers.pop();\n        \n        _isKYCed[user] = false;\n        _kycUserIndices[user] = 0;\n        \n        emit KYCUserRemoved(user);\n    }\n    \n    function isKYCed(address _stakeHolder) public view returns (bool) {\n        return _isKYCed[_stakeHolder];\n    }\n    \n    function getKYCList() public view returns (address[] memory) {\n        return _kycUsers;\n    }\n    \n    function kycUsersListLength() public view returns (uint256) {\n        return _kycUsers.length;\n    }\n    \n    function getOwnedTokens(address _stakeHolder) public view returns (bool) {\n        return _ownsTokens[_stakeHolder];\n    }\n    \n    function updateOwnsToken(address stakeHolder) public onlyRole(MINTER_ROLE) {\n        _ownsTokens[stakeHolder] = true;\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Total supply cap has been exceeded.\n     */\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev The supplied cap is not a valid cap.\n     */\n    error ERC20InvalidCap(uint256 cap);\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        if (cap_ == 0) {\n            revert ERC20InvalidCap(0);\n        }\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_update}.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n\n        if (from == address(0)) {\n            uint256 maxSupply = cap();\n            uint256 supply = totalSupply();\n            if (supply > maxSupply) {\n                revert ERC20ExceededCap(supply, maxSupply);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 603,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 609,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 611,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 613,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 615,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ERC20Capped": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"details": "Sets the value of the `cap`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084698c9feace630ff29919baad9df0721944eb2ecaf942ef807935bbbe41b5a\",\"dweb:/ipfs/Qmet4EQYqPLSKo7UPBNGaVw5NPATNkiLsqSCnCgg5kAPg4\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 603,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 609,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 611,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 613,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 615,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tokenContract.sol": {
				"KYCToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "cap_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rate_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "beneficiary_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "KYCUserAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "KYCUserRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "KYC_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "addKYCUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newMinter",
									"type": "address"
								}
							],
							"name": "addMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burnMyBalance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBeneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDividendPaymentPeriodState",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getKYCList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeHolder",
									"type": "address"
								}
							],
							"name": "getOwnedTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeHolder",
									"type": "address"
								}
							],
							"name": "isKYCed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kycUsersListLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "removeKYCUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sendTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "updateDividendPeriodStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakeHolder",
									"type": "address"
								}
							],
							"name": "updateOwnsToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "ERC20 token with KYC functionality, dividend period, and role-based access control",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Override transfer function with KYC and dividend period checks"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Override transferFrom function with KYC and dividend period checks"
							}
						},
						"title": "KYC Token Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokenContract.sol\":438:7092  contract KYCToken is ERC20Capped, AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/tokenContract.sol\":1186:1941  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tokenContract.sol\":1398:1402  cap_ */\n  dup3\n    /* \"contracts/tokenContract.sol\":1370:1375  name_ */\n  dup7\n    /* \"contracts/tokenContract.sol\":1377:1384  symbol_ */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":764:765  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:760  cap_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:765  cap_ == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":804:805  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":788:806  ERC20InvalidCap(0) */\n  mload(0x40)\n  0x392e1e2700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":833:837  cap_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":826:837  _cap = cap_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":716:844  constructor(uint256 cap_) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokenContract.sol\":1446:1447  0 */\n  0x00\n    /* \"contracts/tokenContract.sol\":1422:1448  beneficiary_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/tokenContract.sol\":1422:1434  beneficiary_ */\n  dup2\n    /* \"contracts/tokenContract.sol\":1422:1448  beneficiary_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/tokenContract.sol\":1414:1480  require(beneficiary_ != address(0), \"Invalid beneficiary address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/tokenContract.sol\":1511:1520  decimals_ */\n  dup4\n    /* \"contracts/tokenContract.sol\":1499:1508  _decimals */\n  0x07\n  0x00\n    /* \"contracts/tokenContract.sol\":1499:1520  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokenContract.sol\":1538:1543  rate_ */\n  dup2\n    /* \"contracts/tokenContract.sol\":1530:1535  _rate */\n  0x08\n    /* \"contracts/tokenContract.sol\":1530:1543  _rate = rate_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokenContract.sol\":1568:1580  beneficiary_ */\n  dup1\n    /* \"contracts/tokenContract.sol\":1553:1565  _beneficiary */\n  0x0a\n  0x00\n    /* \"contracts/tokenContract.sol\":1553:1580  _beneficiary = beneficiary_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokenContract.sol\":1607:1617  msg.sender */\n  caller\n    /* \"contracts/tokenContract.sol\":1590:1596  _owner */\n  0x09\n  0x00\n    /* \"contracts/tokenContract.sol\":1590:1618  _owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokenContract.sol\":1660:1702  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_21\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/tokenContract.sol\":1671:1689  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/tokenContract.sol\":1691:1701  msg.sender */\n  caller\n    /* \"contracts/tokenContract.sol\":1660:1670  _grantRole */\n  shl(0x20, tag_22)\n    /* \"contracts/tokenContract.sol\":1660:1702  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/tokenContract.sol\":1712:1747  _grantRole(MINTER_ROLE, msg.sender) */\n  tag_23\n    /* \"contracts/tokenContract.sol\":547:571  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/tokenContract.sol\":1736:1746  msg.sender */\n  caller\n    /* \"contracts/tokenContract.sol\":1712:1722  _grantRole */\n  shl(0x20, tag_22)\n    /* \"contracts/tokenContract.sol\":1712:1747  _grantRole(MINTER_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n  pop\n    /* \"contracts/tokenContract.sol\":1757:1789  _grantRole(KYC_ROLE, msg.sender) */\n  tag_24\n    /* \"contracts/tokenContract.sol\":612:633  keccak256(\"KYC_ROLE\") */\n  0xdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db7\n    /* \"contracts/tokenContract.sol\":1778:1788  msg.sender */\n  caller\n    /* \"contracts/tokenContract.sol\":1757:1767  _grantRole */\n  shl(0x20, tag_22)\n    /* \"contracts/tokenContract.sol\":1757:1789  _grantRole(KYC_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n  pop\n    /* \"contracts/tokenContract.sol\":1835:1881  _setRoleAdmin(MINTER_ROLE, DEFAULT_ADMIN_ROLE) */\n  tag_25\n    /* \"contracts/tokenContract.sol\":547:571  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/tokenContract.sol\":1862:1880  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/tokenContract.sol\":1835:1848  _setRoleAdmin */\n  shl(0x20, tag_26)\n    /* \"contracts/tokenContract.sol\":1835:1881  _setRoleAdmin(MINTER_ROLE, DEFAULT_ADMIN_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"contracts/tokenContract.sol\":1891:1934  _setRoleAdmin(KYC_ROLE, DEFAULT_ADMIN_ROLE) */\n  tag_27\n    /* \"contracts/tokenContract.sol\":612:633  keccak256(\"KYC_ROLE\") */\n  0xdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db7\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/tokenContract.sol\":1915:1933  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/tokenContract.sol\":1891:1904  _setRoleAdmin */\n  shl(0x20, tag_26)\n    /* \"contracts/tokenContract.sol\":1891:1934  _setRoleAdmin(KYC_ROLE, DEFAULT_ADMIN_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/tokenContract.sol\":1186:1941  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/tokenContract.sol\":438:7092  contract KYCToken is ERC20Capped, AccessControl, ReentrancyGuard {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_30\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_33\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_34)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_29:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5781:5806  bytes32 previousAdminRole */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5827  getRoleAdmin(role) */\n  tag_37\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5822:5826  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5821  getRoleAdmin */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5809:5827  getRoleAdmin(role) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5781:5827  bytes32 previousAdminRole = getRoleAdmin(role) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5862:5871  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5843  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5849  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5844:5848  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5849  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5859  _roles[role].adminRole */\n  0x01\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5837:5871  _roles[role].adminRole = adminRole */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5928:5937  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5909:5926  previousAdminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5903:5907  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5771:5945  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x01\n  add\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_42:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_43:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_44:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_45:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_46:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_47:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_48:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_49:\n    /* \"#utility.yul\":957:984   */\n  tag_98\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_47\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_100\n  tag_48\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1030:1118   */\ntag_99:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_50:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_102\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_103\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_49\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_51:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_106\n  tag_48\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1434:1490   */\ntag_105:\n    /* \"#utility.yul\":1508:1537   */\n  tag_107\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_47\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_52:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_53:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_110\n    /* \"#utility.yul\":1885:1934   */\n  tag_111\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_51\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1869:1935   */\n  tag_50\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_113\n  tag_46\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2010:2122   */\ntag_112:\n    /* \"#utility.yul\":2131:2183   */\n  tag_114\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_52\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_54:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_117\n  tag_45\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2292:2414   */\ntag_116:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_118\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_53\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2656   */\ntag_55:\n    /* \"#utility.yul\":2605:2612   */\n  0x00\n    /* \"#utility.yul\":2645:2649   */\n  0xff\n    /* \"#utility.yul\":2638:2643   */\n  dup3\n    /* \"#utility.yul\":2634:2650   */\n  and\n    /* \"#utility.yul\":2623:2650   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2656   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2662:2780   */\ntag_56:\n    /* \"#utility.yul\":2733:2755   */\n  tag_121\n    /* \"#utility.yul\":2749:2754   */\n  dup2\n    /* \"#utility.yul\":2733:2755   */\n  tag_55\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2726:2731   */\n  dup2\n    /* \"#utility.yul\":2723:2756   */\n  eq\n    /* \"#utility.yul\":2713:2774   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":2770:2771   */\n  0x00\n    /* \"#utility.yul\":2767:2768   */\n  dup1\n    /* \"#utility.yul\":2760:2772   */\n  revert\n    /* \"#utility.yul\":2713:2774   */\ntag_122:\n    /* \"#utility.yul\":2662:2780   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2786:2925   */\ntag_57:\n    /* \"#utility.yul\":2841:2846   */\n  0x00\n    /* \"#utility.yul\":2872:2878   */\n  dup2\n    /* \"#utility.yul\":2866:2879   */\n  mload\n    /* \"#utility.yul\":2857:2879   */\n  swap1\n  pop\n    /* \"#utility.yul\":2888:2919   */\n  tag_124\n    /* \"#utility.yul\":2913:2918   */\n  dup2\n    /* \"#utility.yul\":2888:2919   */\n  tag_56\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2786:2925   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2931:3008   */\ntag_58:\n    /* \"#utility.yul\":2968:2975   */\n  0x00\n    /* \"#utility.yul\":2997:3002   */\n  dup2\n    /* \"#utility.yul\":2986:3002   */\n  swap1\n  pop\n    /* \"#utility.yul\":2931:3008   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3014:3136   */\ntag_59:\n    /* \"#utility.yul\":3087:3111   */\n  tag_127\n    /* \"#utility.yul\":3105:3110   */\n  dup2\n    /* \"#utility.yul\":3087:3111   */\n  tag_58\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3080:3085   */\n  dup2\n    /* \"#utility.yul\":3077:3112   */\n  eq\n    /* \"#utility.yul\":3067:3130   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3126:3127   */\n  0x00\n    /* \"#utility.yul\":3123:3124   */\n  dup1\n    /* \"#utility.yul\":3116:3128   */\n  revert\n    /* \"#utility.yul\":3067:3130   */\ntag_128:\n    /* \"#utility.yul\":3014:3136   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3142:3285   */\ntag_60:\n    /* \"#utility.yul\":3199:3204   */\n  0x00\n    /* \"#utility.yul\":3230:3236   */\n  dup2\n    /* \"#utility.yul\":3224:3237   */\n  mload\n    /* \"#utility.yul\":3215:3237   */\n  swap1\n  pop\n    /* \"#utility.yul\":3246:3279   */\n  tag_130\n    /* \"#utility.yul\":3273:3278   */\n  dup2\n    /* \"#utility.yul\":3246:3279   */\n  tag_59\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3142:3285   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3291:3417   */\ntag_61:\n    /* \"#utility.yul\":3328:3335   */\n  0x00\n    /* \"#utility.yul\":3368:3410   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3361:3366   */\n  dup3\n    /* \"#utility.yul\":3357:3411   */\n  and\n    /* \"#utility.yul\":3346:3411   */\n  swap1\n  pop\n    /* \"#utility.yul\":3291:3417   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3423:3519   */\ntag_62:\n    /* \"#utility.yul\":3460:3467   */\n  0x00\n    /* \"#utility.yul\":3489:3513   */\n  tag_133\n    /* \"#utility.yul\":3507:3512   */\n  dup3\n    /* \"#utility.yul\":3489:3513   */\n  tag_61\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3478:3513   */\n  swap1\n  pop\n    /* \"#utility.yul\":3423:3519   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3525:3647   */\ntag_63:\n    /* \"#utility.yul\":3598:3622   */\n  tag_135\n    /* \"#utility.yul\":3616:3621   */\n  dup2\n    /* \"#utility.yul\":3598:3622   */\n  tag_62\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3591:3596   */\n  dup2\n    /* \"#utility.yul\":3588:3623   */\n  eq\n    /* \"#utility.yul\":3578:3641   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":3637:3638   */\n  0x00\n    /* \"#utility.yul\":3634:3635   */\n  dup1\n    /* \"#utility.yul\":3627:3639   */\n  revert\n    /* \"#utility.yul\":3578:3641   */\ntag_136:\n    /* \"#utility.yul\":3525:3647   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3653:3796   */\ntag_64:\n    /* \"#utility.yul\":3710:3715   */\n  0x00\n    /* \"#utility.yul\":3741:3747   */\n  dup2\n    /* \"#utility.yul\":3735:3748   */\n  mload\n    /* \"#utility.yul\":3726:3748   */\n  swap1\n  pop\n    /* \"#utility.yul\":3757:3790   */\n  tag_138\n    /* \"#utility.yul\":3784:3789   */\n  dup2\n    /* \"#utility.yul\":3757:3790   */\n  tag_63\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3653:3796   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3802:5278   */\ntag_3:\n    /* \"#utility.yul\":3935:3941   */\n  0x00\n    /* \"#utility.yul\":3943:3949   */\n  dup1\n    /* \"#utility.yul\":3951:3957   */\n  0x00\n    /* \"#utility.yul\":3959:3965   */\n  dup1\n    /* \"#utility.yul\":3967:3973   */\n  0x00\n    /* \"#utility.yul\":3975:3981   */\n  dup1\n    /* \"#utility.yul\":4024:4027   */\n  0xc0\n    /* \"#utility.yul\":4012:4021   */\n  dup8\n    /* \"#utility.yul\":4003:4010   */\n  dup10\n    /* \"#utility.yul\":3999:4022   */\n  sub\n    /* \"#utility.yul\":3995:4028   */\n  slt\n    /* \"#utility.yul\":3992:4112   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":4031:4110   */\n  tag_141\n  tag_43\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3992:4112   */\ntag_140:\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4161:4170   */\n  dup8\n    /* \"#utility.yul\":4157:4174   */\n  add\n    /* \"#utility.yul\":4151:4175   */\n  mload\n    /* \"#utility.yul\":4202:4220   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4194:4200   */\n  dup2\n    /* \"#utility.yul\":4191:4221   */\n  gt\n    /* \"#utility.yul\":4188:4305   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":4224:4303   */\n  tag_143\n  tag_44\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4188:4305   */\ntag_142:\n    /* \"#utility.yul\":4329:4403   */\n  tag_144\n    /* \"#utility.yul\":4395:4402   */\n  dup10\n    /* \"#utility.yul\":4386:4392   */\n  dup3\n    /* \"#utility.yul\":4375:4384   */\n  dup11\n    /* \"#utility.yul\":4371:4393   */\n  add\n    /* \"#utility.yul\":4329:4403   */\n  tag_54\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":4319:4403   */\n  swap7\n  pop\n    /* \"#utility.yul\":4122:4413   */\n  pop\n    /* \"#utility.yul\":4473:4475   */\n  0x20\n    /* \"#utility.yul\":4462:4471   */\n  dup8\n    /* \"#utility.yul\":4458:4476   */\n  add\n    /* \"#utility.yul\":4452:4477   */\n  mload\n    /* \"#utility.yul\":4504:4522   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4496:4502   */\n  dup2\n    /* \"#utility.yul\":4493:4523   */\n  gt\n    /* \"#utility.yul\":4490:4607   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":4526:4605   */\n  tag_146\n  tag_44\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4490:4607   */\ntag_145:\n    /* \"#utility.yul\":4631:4705   */\n  tag_147\n    /* \"#utility.yul\":4697:4704   */\n  dup10\n    /* \"#utility.yul\":4688:4694   */\n  dup3\n    /* \"#utility.yul\":4677:4686   */\n  dup11\n    /* \"#utility.yul\":4673:4695   */\n  add\n    /* \"#utility.yul\":4631:4705   */\n  tag_54\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4621:4705   */\n  swap6\n  pop\n    /* \"#utility.yul\":4423:4715   */\n  pop\n    /* \"#utility.yul\":4754:4756   */\n  0x40\n    /* \"#utility.yul\":4780:4842   */\n  tag_148\n    /* \"#utility.yul\":4834:4841   */\n  dup10\n    /* \"#utility.yul\":4825:4831   */\n  dup3\n    /* \"#utility.yul\":4814:4823   */\n  dup11\n    /* \"#utility.yul\":4810:4832   */\n  add\n    /* \"#utility.yul\":4780:4842   */\n  tag_57\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4770:4842   */\n  swap5\n  pop\n    /* \"#utility.yul\":4725:4852   */\n  pop\n    /* \"#utility.yul\":4891:4893   */\n  0x60\n    /* \"#utility.yul\":4917:4981   */\n  tag_149\n    /* \"#utility.yul\":4973:4980   */\n  dup10\n    /* \"#utility.yul\":4964:4970   */\n  dup3\n    /* \"#utility.yul\":4953:4962   */\n  dup11\n    /* \"#utility.yul\":4949:4971   */\n  add\n    /* \"#utility.yul\":4917:4981   */\n  tag_60\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4907:4981   */\n  swap4\n  pop\n    /* \"#utility.yul\":4862:4991   */\n  pop\n    /* \"#utility.yul\":5030:5033   */\n  0x80\n    /* \"#utility.yul\":5057:5121   */\n  tag_150\n    /* \"#utility.yul\":5113:5120   */\n  dup10\n    /* \"#utility.yul\":5104:5110   */\n  dup3\n    /* \"#utility.yul\":5093:5102   */\n  dup11\n    /* \"#utility.yul\":5089:5111   */\n  add\n    /* \"#utility.yul\":5057:5121   */\n  tag_60\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5047:5121   */\n  swap3\n  pop\n    /* \"#utility.yul\":5001:5131   */\n  pop\n    /* \"#utility.yul\":5170:5173   */\n  0xa0\n    /* \"#utility.yul\":5197:5261   */\n  tag_151\n    /* \"#utility.yul\":5253:5260   */\n  dup10\n    /* \"#utility.yul\":5244:5250   */\n  dup3\n    /* \"#utility.yul\":5233:5242   */\n  dup11\n    /* \"#utility.yul\":5229:5251   */\n  add\n    /* \"#utility.yul\":5197:5261   */\n  tag_64\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5187:5261   */\n  swap2\n  pop\n    /* \"#utility.yul\":5141:5271   */\n  pop\n    /* \"#utility.yul\":3802:5278   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":5284:5383   */\ntag_65:\n    /* \"#utility.yul\":5336:5342   */\n  0x00\n    /* \"#utility.yul\":5370:5375   */\n  dup2\n    /* \"#utility.yul\":5364:5376   */\n  mload\n    /* \"#utility.yul\":5354:5376   */\n  swap1\n  pop\n    /* \"#utility.yul\":5284:5383   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5389:5569   */\ntag_66:\n    /* \"#utility.yul\":5437:5514   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5434:5435   */\n  0x00\n    /* \"#utility.yul\":5427:5515   */\n  mstore\n    /* \"#utility.yul\":5534:5538   */\n  0x22\n    /* \"#utility.yul\":5531:5532   */\n  0x04\n    /* \"#utility.yul\":5524:5539   */\n  mstore\n    /* \"#utility.yul\":5558:5562   */\n  0x24\n    /* \"#utility.yul\":5555:5556   */\n  0x00\n    /* \"#utility.yul\":5548:5563   */\n  revert\n    /* \"#utility.yul\":5575:5895   */\ntag_67:\n    /* \"#utility.yul\":5619:5625   */\n  0x00\n    /* \"#utility.yul\":5656:5657   */\n  0x02\n    /* \"#utility.yul\":5650:5654   */\n  dup3\n    /* \"#utility.yul\":5646:5658   */\n  div\n    /* \"#utility.yul\":5636:5658   */\n  swap1\n  pop\n    /* \"#utility.yul\":5703:5704   */\n  0x01\n    /* \"#utility.yul\":5697:5701   */\n  dup3\n    /* \"#utility.yul\":5693:5705   */\n  and\n    /* \"#utility.yul\":5724:5742   */\n  dup1\n    /* \"#utility.yul\":5714:5795   */\n  tag_155\n  jumpi\n    /* \"#utility.yul\":5780:5784   */\n  0x7f\n    /* \"#utility.yul\":5772:5778   */\n  dup3\n    /* \"#utility.yul\":5768:5785   */\n  and\n    /* \"#utility.yul\":5758:5785   */\n  swap2\n  pop\n    /* \"#utility.yul\":5714:5795   */\ntag_155:\n    /* \"#utility.yul\":5842:5844   */\n  0x20\n    /* \"#utility.yul\":5834:5840   */\n  dup3\n    /* \"#utility.yul\":5831:5845   */\n  lt\n    /* \"#utility.yul\":5811:5829   */\n  dup2\n    /* \"#utility.yul\":5808:5846   */\n  sub\n    /* \"#utility.yul\":5805:5889   */\n  tag_156\n  jumpi\n    /* \"#utility.yul\":5861:5879   */\n  tag_157\n  tag_66\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5805:5889   */\ntag_156:\n    /* \"#utility.yul\":5626:5895   */\n  pop\n    /* \"#utility.yul\":5575:5895   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5901:6042   */\ntag_68:\n    /* \"#utility.yul\":5950:5954   */\n  0x00\n    /* \"#utility.yul\":5973:5976   */\n  dup2\n    /* \"#utility.yul\":5965:5976   */\n  swap1\n  pop\n    /* \"#utility.yul\":5996:5999   */\n  dup2\n    /* \"#utility.yul\":5993:5994   */\n  0x00\n    /* \"#utility.yul\":5986:6000   */\n  mstore\n    /* \"#utility.yul\":6030:6034   */\n  0x20\n    /* \"#utility.yul\":6027:6028   */\n  0x00\n    /* \"#utility.yul\":6017:6035   */\n  keccak256\n    /* \"#utility.yul\":6009:6035   */\n  swap1\n  pop\n    /* \"#utility.yul\":5901:6042   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6048:6141   */\ntag_69:\n    /* \"#utility.yul\":6085:6091   */\n  0x00\n    /* \"#utility.yul\":6132:6134   */\n  0x20\n    /* \"#utility.yul\":6127:6129   */\n  0x1f\n    /* \"#utility.yul\":6120:6125   */\n  dup4\n    /* \"#utility.yul\":6116:6130   */\n  add\n    /* \"#utility.yul\":6112:6135   */\n  div\n    /* \"#utility.yul\":6102:6135   */\n  swap1\n  pop\n    /* \"#utility.yul\":6048:6141   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6147:6254   */\ntag_70:\n    /* \"#utility.yul\":6191:6199   */\n  0x00\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6235:6239   */\n  dup3\n    /* \"#utility.yul\":6231:6247   */\n  shl\n    /* \"#utility.yul\":6210:6247   */\n  swap1\n  pop\n    /* \"#utility.yul\":6147:6254   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6260:6653   */\ntag_71:\n    /* \"#utility.yul\":6329:6335   */\n  0x00\n    /* \"#utility.yul\":6379:6380   */\n  0x08\n    /* \"#utility.yul\":6367:6377   */\n  dup4\n    /* \"#utility.yul\":6363:6381   */\n  mul\n    /* \"#utility.yul\":6402:6499   */\n  tag_162\n    /* \"#utility.yul\":6432:6498   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6421:6430   */\n  dup3\n    /* \"#utility.yul\":6402:6499   */\n  tag_70\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6520:6559   */\n  tag_163\n    /* \"#utility.yul\":6550:6558   */\n  dup7\n    /* \"#utility.yul\":6539:6548   */\n  dup4\n    /* \"#utility.yul\":6520:6559   */\n  tag_70\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6508:6559   */\n  swap6\n  pop\n    /* \"#utility.yul\":6592:6596   */\n  dup1\n    /* \"#utility.yul\":6588:6597   */\n  not\n    /* \"#utility.yul\":6581:6586   */\n  dup5\n    /* \"#utility.yul\":6577:6598   */\n  and\n    /* \"#utility.yul\":6568:6598   */\n  swap4\n  pop\n    /* \"#utility.yul\":6641:6645   */\n  dup1\n    /* \"#utility.yul\":6631:6639   */\n  dup7\n    /* \"#utility.yul\":6627:6646   */\n  and\n    /* \"#utility.yul\":6620:6625   */\n  dup5\n    /* \"#utility.yul\":6617:6647   */\n  or\n    /* \"#utility.yul\":6607:6647   */\n  swap3\n  pop\n    /* \"#utility.yul\":6336:6653   */\n  pop\n  pop\n    /* \"#utility.yul\":6260:6653   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6659:6719   */\ntag_72:\n    /* \"#utility.yul\":6687:6690   */\n  0x00\n    /* \"#utility.yul\":6708:6713   */\n  dup2\n    /* \"#utility.yul\":6701:6713   */\n  swap1\n  pop\n    /* \"#utility.yul\":6659:6719   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6725:6867   */\ntag_73:\n    /* \"#utility.yul\":6775:6784   */\n  0x00\n    /* \"#utility.yul\":6808:6861   */\n  tag_166\n    /* \"#utility.yul\":6826:6860   */\n  tag_167\n    /* \"#utility.yul\":6835:6859   */\n  tag_168\n    /* \"#utility.yul\":6853:6858   */\n  dup5\n    /* \"#utility.yul\":6835:6859   */\n  tag_58\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6826:6860   */\n  tag_72\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6808:6861   */\n  tag_58\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6795:6861   */\n  swap1\n  pop\n    /* \"#utility.yul\":6725:6867   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6873:6948   */\ntag_74:\n    /* \"#utility.yul\":6916:6919   */\n  0x00\n    /* \"#utility.yul\":6937:6942   */\n  dup2\n    /* \"#utility.yul\":6930:6942   */\n  swap1\n  pop\n    /* \"#utility.yul\":6873:6948   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6954:7223   */\ntag_75:\n    /* \"#utility.yul\":7064:7103   */\n  tag_171\n    /* \"#utility.yul\":7095:7102   */\n  dup4\n    /* \"#utility.yul\":7064:7103   */\n  tag_73\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7125:7216   */\n  tag_172\n    /* \"#utility.yul\":7174:7215   */\n  tag_173\n    /* \"#utility.yul\":7198:7214   */\n  dup3\n    /* \"#utility.yul\":7174:7215   */\n  tag_74\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7166:7172   */\n  dup5\n    /* \"#utility.yul\":7159:7163   */\n  dup5\n    /* \"#utility.yul\":7153:7164   */\n  sload\n    /* \"#utility.yul\":7125:7216   */\n  tag_71\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7119:7123   */\n  dup3\n    /* \"#utility.yul\":7112:7217   */\n  sstore\n    /* \"#utility.yul\":7030:7223   */\n  pop\n    /* \"#utility.yul\":6954:7223   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7229:7302   */\ntag_76:\n    /* \"#utility.yul\":7274:7277   */\n  0x00\n    /* \"#utility.yul\":7229:7302   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7308:7497   */\ntag_77:\n    /* \"#utility.yul\":7385:7417   */\n  tag_176\n  tag_76\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7426:7491   */\n  tag_177\n    /* \"#utility.yul\":7484:7490   */\n  dup2\n    /* \"#utility.yul\":7476:7482   */\n  dup5\n    /* \"#utility.yul\":7470:7474   */\n  dup5\n    /* \"#utility.yul\":7426:7491   */\n  tag_75\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7361:7497   */\n  pop\n    /* \"#utility.yul\":7308:7497   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7503:7689   */\ntag_78:\n    /* \"#utility.yul\":7563:7683   */\ntag_179:\n    /* \"#utility.yul\":7580:7583   */\n  dup2\n    /* \"#utility.yul\":7573:7578   */\n  dup2\n    /* \"#utility.yul\":7570:7584   */\n  lt\n    /* \"#utility.yul\":7563:7683   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":7634:7673   */\n  tag_182\n    /* \"#utility.yul\":7671:7672   */\n  0x00\n    /* \"#utility.yul\":7664:7669   */\n  dup3\n    /* \"#utility.yul\":7634:7673   */\n  tag_77\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7607:7608   */\n  0x01\n    /* \"#utility.yul\":7600:7605   */\n  dup2\n    /* \"#utility.yul\":7596:7609   */\n  add\n    /* \"#utility.yul\":7587:7609   */\n  swap1\n  pop\n    /* \"#utility.yul\":7563:7683   */\n  jump(tag_179)\ntag_181:\n    /* \"#utility.yul\":7503:7689   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7695:8238   */\ntag_79:\n    /* \"#utility.yul\":7796:7798   */\n  0x1f\n    /* \"#utility.yul\":7791:7794   */\n  dup3\n    /* \"#utility.yul\":7788:7799   */\n  gt\n    /* \"#utility.yul\":7785:8231   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":7830:7868   */\n  tag_185\n    /* \"#utility.yul\":7862:7867   */\n  dup2\n    /* \"#utility.yul\":7830:7868   */\n  tag_68\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7914:7943   */\n  tag_186\n    /* \"#utility.yul\":7932:7942   */\n  dup5\n    /* \"#utility.yul\":7914:7943   */\n  tag_69\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7904:7912   */\n  dup2\n    /* \"#utility.yul\":7900:7944   */\n  add\n    /* \"#utility.yul\":8097:8099   */\n  0x20\n    /* \"#utility.yul\":8085:8095   */\n  dup6\n    /* \"#utility.yul\":8082:8100   */\n  lt\n    /* \"#utility.yul\":8079:8128   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":8118:8126   */\n  dup2\n    /* \"#utility.yul\":8103:8126   */\n  swap1\n  pop\n    /* \"#utility.yul\":8079:8128   */\ntag_187:\n    /* \"#utility.yul\":8141:8221   */\n  tag_188\n    /* \"#utility.yul\":8197:8219   */\n  tag_189\n    /* \"#utility.yul\":8215:8218   */\n  dup6\n    /* \"#utility.yul\":8197:8219   */\n  tag_69\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8187:8195   */\n  dup4\n    /* \"#utility.yul\":8183:8220   */\n  add\n    /* \"#utility.yul\":8170:8181   */\n  dup3\n    /* \"#utility.yul\":8141:8221   */\n  tag_78\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":7800:8231   */\n  pop\n  pop\n    /* \"#utility.yul\":7785:8231   */\ntag_184:\n    /* \"#utility.yul\":7695:8238   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8244:8361   */\ntag_80:\n    /* \"#utility.yul\":8298:8306   */\n  0x00\n    /* \"#utility.yul\":8348:8353   */\n  dup3\n    /* \"#utility.yul\":8342:8346   */\n  dup3\n    /* \"#utility.yul\":8338:8354   */\n  shr\n    /* \"#utility.yul\":8317:8354   */\n  swap1\n  pop\n    /* \"#utility.yul\":8244:8361   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8367:8536   */\ntag_81:\n    /* \"#utility.yul\":8411:8417   */\n  0x00\n    /* \"#utility.yul\":8444:8495   */\n  tag_192\n    /* \"#utility.yul\":8492:8493   */\n  0x00\n    /* \"#utility.yul\":8488:8494   */\n  not\n    /* \"#utility.yul\":8480:8485   */\n  dup5\n    /* \"#utility.yul\":8477:8478   */\n  0x08\n    /* \"#utility.yul\":8473:8486   */\n  mul\n    /* \"#utility.yul\":8444:8495   */\n  tag_80\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8440:8496   */\n  not\n    /* \"#utility.yul\":8525:8529   */\n  dup1\n    /* \"#utility.yul\":8519:8523   */\n  dup4\n    /* \"#utility.yul\":8515:8530   */\n  and\n    /* \"#utility.yul\":8505:8530   */\n  swap2\n  pop\n    /* \"#utility.yul\":8418:8536   */\n  pop\n    /* \"#utility.yul\":8367:8536   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8541:8836   */\ntag_82:\n    /* \"#utility.yul\":8617:8621   */\n  0x00\n    /* \"#utility.yul\":8763:8792   */\n  tag_194\n    /* \"#utility.yul\":8788:8791   */\n  dup4\n    /* \"#utility.yul\":8782:8786   */\n  dup4\n    /* \"#utility.yul\":8763:8792   */\n  tag_81\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8755:8792   */\n  swap2\n  pop\n    /* \"#utility.yul\":8825:8828   */\n  dup3\n    /* \"#utility.yul\":8822:8823   */\n  0x02\n    /* \"#utility.yul\":8818:8829   */\n  mul\n    /* \"#utility.yul\":8812:8816   */\n  dup3\n    /* \"#utility.yul\":8809:8830   */\n  or\n    /* \"#utility.yul\":8801:8830   */\n  swap1\n  pop\n    /* \"#utility.yul\":8541:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8841:10236   */\ntag_10:\n    /* \"#utility.yul\":8958:8995   */\n  tag_196\n    /* \"#utility.yul\":8991:8994   */\n  dup3\n    /* \"#utility.yul\":8958:8995   */\n  tag_65\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9060:9078   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":9052:9058   */\n  dup2\n    /* \"#utility.yul\":9049:9079   */\n  gt\n    /* \"#utility.yul\":9046:9102   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":9082:9100   */\n  tag_198\n  tag_48\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9046:9102   */\ntag_197:\n    /* \"#utility.yul\":9126:9164   */\n  tag_199\n    /* \"#utility.yul\":9158:9162   */\n  dup3\n    /* \"#utility.yul\":9152:9163   */\n  sload\n    /* \"#utility.yul\":9126:9164   */\n  tag_67\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9211:9278   */\n  tag_200\n    /* \"#utility.yul\":9271:9277   */\n  dup3\n    /* \"#utility.yul\":9263:9269   */\n  dup3\n    /* \"#utility.yul\":9257:9261   */\n  dup6\n    /* \"#utility.yul\":9211:9278   */\n  tag_79\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9305:9306   */\n  0x00\n    /* \"#utility.yul\":9329:9333   */\n  0x20\n    /* \"#utility.yul\":9316:9333   */\n  swap1\n  pop\n    /* \"#utility.yul\":9361:9363   */\n  0x1f\n    /* \"#utility.yul\":9353:9359   */\n  dup4\n    /* \"#utility.yul\":9350:9364   */\n  gt\n    /* \"#utility.yul\":9378:9379   */\n  0x01\n    /* \"#utility.yul\":9373:9991   */\n  dup2\n  eq\n  tag_202\n  jumpi\n    /* \"#utility.yul\":10035:10036   */\n  0x00\n    /* \"#utility.yul\":10052:10058   */\n  dup5\n    /* \"#utility.yul\":10049:10126   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":10101:10110   */\n  dup3\n    /* \"#utility.yul\":10096:10099   */\n  dup8\n    /* \"#utility.yul\":10092:10111   */\n  add\n    /* \"#utility.yul\":10086:10112   */\n  mload\n    /* \"#utility.yul\":10077:10112   */\n  swap1\n  pop\n    /* \"#utility.yul\":10049:10126   */\ntag_203:\n    /* \"#utility.yul\":10152:10219   */\n  tag_204\n    /* \"#utility.yul\":10212:10218   */\n  dup6\n    /* \"#utility.yul\":10205:10210   */\n  dup3\n    /* \"#utility.yul\":10152:10219   */\n  tag_82\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10146:10150   */\n  dup7\n    /* \"#utility.yul\":10139:10220   */\n  sstore\n    /* \"#utility.yul\":10008:10230   */\n  pop\n    /* \"#utility.yul\":9343:10230   */\n  jump(tag_201)\n    /* \"#utility.yul\":9373:9991   */\ntag_202:\n    /* \"#utility.yul\":9425:9429   */\n  0x1f\n    /* \"#utility.yul\":9421:9430   */\n  not\n    /* \"#utility.yul\":9413:9419   */\n  dup5\n    /* \"#utility.yul\":9409:9431   */\n  and\n    /* \"#utility.yul\":9459:9496   */\n  tag_205\n    /* \"#utility.yul\":9491:9495   */\n  dup7\n    /* \"#utility.yul\":9459:9496   */\n  tag_68\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9518:9519   */\n  0x00\n    /* \"#utility.yul\":9532:9740   */\ntag_206:\n    /* \"#utility.yul\":9546:9553   */\n  dup3\n    /* \"#utility.yul\":9543:9544   */\n  dup2\n    /* \"#utility.yul\":9540:9554   */\n  lt\n    /* \"#utility.yul\":9532:9740   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":9625:9634   */\n  dup5\n    /* \"#utility.yul\":9620:9623   */\n  dup10\n    /* \"#utility.yul\":9616:9635   */\n  add\n    /* \"#utility.yul\":9610:9636   */\n  mload\n    /* \"#utility.yul\":9602:9608   */\n  dup3\n    /* \"#utility.yul\":9595:9637   */\n  sstore\n    /* \"#utility.yul\":9676:9677   */\n  0x01\n    /* \"#utility.yul\":9668:9674   */\n  dup3\n    /* \"#utility.yul\":9664:9678   */\n  add\n    /* \"#utility.yul\":9654:9678   */\n  swap2\n  pop\n    /* \"#utility.yul\":9723:9725   */\n  0x20\n    /* \"#utility.yul\":9712:9721   */\n  dup6\n    /* \"#utility.yul\":9708:9726   */\n  add\n    /* \"#utility.yul\":9695:9726   */\n  swap5\n  pop\n    /* \"#utility.yul\":9569:9573   */\n  0x20\n    /* \"#utility.yul\":9566:9567   */\n  dup2\n    /* \"#utility.yul\":9562:9574   */\n  add\n    /* \"#utility.yul\":9557:9574   */\n  swap1\n  pop\n    /* \"#utility.yul\":9532:9740   */\n  jump(tag_206)\ntag_208:\n    /* \"#utility.yul\":9768:9774   */\n  dup7\n    /* \"#utility.yul\":9759:9766   */\n  dup4\n    /* \"#utility.yul\":9756:9775   */\n  lt\n    /* \"#utility.yul\":9753:9932   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":9826:9835   */\n  dup5\n    /* \"#utility.yul\":9821:9824   */\n  dup10\n    /* \"#utility.yul\":9817:9836   */\n  add\n    /* \"#utility.yul\":9811:9837   */\n  mload\n    /* \"#utility.yul\":9869:9917   */\n  tag_210\n    /* \"#utility.yul\":9911:9915   */\n  0x1f\n    /* \"#utility.yul\":9903:9909   */\n  dup10\n    /* \"#utility.yul\":9899:9916   */\n  and\n    /* \"#utility.yul\":9888:9897   */\n  dup3\n    /* \"#utility.yul\":9869:9917   */\n  tag_81\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9861:9867   */\n  dup4\n    /* \"#utility.yul\":9854:9918   */\n  sstore\n    /* \"#utility.yul\":9776:9932   */\n  pop\n    /* \"#utility.yul\":9753:9932   */\ntag_209:\n    /* \"#utility.yul\":9978:9979   */\n  0x01\n    /* \"#utility.yul\":9974:9975   */\n  0x02\n    /* \"#utility.yul\":9966:9972   */\n  dup9\n    /* \"#utility.yul\":9962:9976   */\n  mul\n    /* \"#utility.yul\":9958:9980   */\n  add\n    /* \"#utility.yul\":9952:9956   */\n  dup9\n    /* \"#utility.yul\":9945:9981   */\n  sstore\n    /* \"#utility.yul\":9380:9991   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9343:10230   */\ntag_201:\n  pop\n    /* \"#utility.yul\":8933:10236   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8841:10236   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10242:10327   */\ntag_83:\n    /* \"#utility.yul\":10287:10294   */\n  0x00\n    /* \"#utility.yul\":10316:10321   */\n  dup2\n    /* \"#utility.yul\":10305:10321   */\n  swap1\n  pop\n    /* \"#utility.yul\":10242:10327   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10333:10491   */\ntag_84:\n    /* \"#utility.yul\":10391:10400   */\n  0x00\n    /* \"#utility.yul\":10424:10485   */\n  tag_213\n    /* \"#utility.yul\":10442:10484   */\n  tag_214\n    /* \"#utility.yul\":10451:10483   */\n  tag_215\n    /* \"#utility.yul\":10477:10482   */\n  dup5\n    /* \"#utility.yul\":10451:10483   */\n  tag_83\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10442:10484   */\n  tag_72\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10424:10485   */\n  tag_58\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":10411:10485   */\n  swap1\n  pop\n    /* \"#utility.yul\":10333:10491   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10497:10644   */\ntag_85:\n    /* \"#utility.yul\":10592:10637   */\n  tag_217\n    /* \"#utility.yul\":10631:10636   */\n  dup2\n    /* \"#utility.yul\":10592:10637   */\n  tag_84\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10587:10590   */\n  dup3\n    /* \"#utility.yul\":10580:10638   */\n  mstore\n    /* \"#utility.yul\":10497:10644   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10650:10888   */\ntag_15:\n    /* \"#utility.yul\":10751:10755   */\n  0x00\n    /* \"#utility.yul\":10789:10791   */\n  0x20\n    /* \"#utility.yul\":10778:10787   */\n  dup3\n    /* \"#utility.yul\":10774:10792   */\n  add\n    /* \"#utility.yul\":10766:10792   */\n  swap1\n  pop\n    /* \"#utility.yul\":10802:10881   */\n  tag_219\n    /* \"#utility.yul\":10878:10879   */\n  0x00\n    /* \"#utility.yul\":10867:10876   */\n  dup4\n    /* \"#utility.yul\":10863:10880   */\n  add\n    /* \"#utility.yul\":10854:10860   */\n  dup5\n    /* \"#utility.yul\":10802:10881   */\n  tag_85\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10650:10888   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10894:11063   */\ntag_86:\n    /* \"#utility.yul\":10978:10989   */\n  0x00\n    /* \"#utility.yul\":11012:11018   */\n  dup3\n    /* \"#utility.yul\":11007:11010   */\n  dup3\n    /* \"#utility.yul\":11000:11019   */\n  mstore\n    /* \"#utility.yul\":11052:11056   */\n  0x20\n    /* \"#utility.yul\":11047:11050   */\n  dup3\n    /* \"#utility.yul\":11043:11057   */\n  add\n    /* \"#utility.yul\":11028:11057   */\n  swap1\n  pop\n    /* \"#utility.yul\":10894:11063   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11069:11246   */\ntag_87:\n    /* \"#utility.yul\":11209:11238   */\n  0x496e76616c69642062656e656669636961727920616464726573730000000000\n    /* \"#utility.yul\":11205:11206   */\n  0x00\n    /* \"#utility.yul\":11197:11203   */\n  dup3\n    /* \"#utility.yul\":11193:11207   */\n  add\n    /* \"#utility.yul\":11186:11239   */\n  mstore\n    /* \"#utility.yul\":11069:11246   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11252:11618   */\ntag_88:\n    /* \"#utility.yul\":11394:11397   */\n  0x00\n    /* \"#utility.yul\":11415:11482   */\n  tag_223\n    /* \"#utility.yul\":11479:11481   */\n  0x1b\n    /* \"#utility.yul\":11474:11477   */\n  dup4\n    /* \"#utility.yul\":11415:11482   */\n  tag_86\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11408:11482   */\n  swap2\n  pop\n    /* \"#utility.yul\":11491:11584   */\n  tag_224\n    /* \"#utility.yul\":11580:11583   */\n  dup3\n    /* \"#utility.yul\":11491:11584   */\n  tag_87\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":11609:11611   */\n  0x20\n    /* \"#utility.yul\":11604:11607   */\n  dup3\n    /* \"#utility.yul\":11600:11612   */\n  add\n    /* \"#utility.yul\":11593:11612   */\n  swap1\n  pop\n    /* \"#utility.yul\":11252:11618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11624:12043   */\ntag_20:\n    /* \"#utility.yul\":11790:11794   */\n  0x00\n    /* \"#utility.yul\":11828:11830   */\n  0x20\n    /* \"#utility.yul\":11817:11826   */\n  dup3\n    /* \"#utility.yul\":11813:11831   */\n  add\n    /* \"#utility.yul\":11805:11831   */\n  swap1\n  pop\n    /* \"#utility.yul\":11877:11886   */\n  dup2\n    /* \"#utility.yul\":11871:11875   */\n  dup2\n    /* \"#utility.yul\":11867:11887   */\n  sub\n    /* \"#utility.yul\":11863:11864   */\n  0x00\n    /* \"#utility.yul\":11852:11861   */\n  dup4\n    /* \"#utility.yul\":11848:11865   */\n  add\n    /* \"#utility.yul\":11841:11888   */\n  mstore\n    /* \"#utility.yul\":11905:12036   */\n  tag_226\n    /* \"#utility.yul\":12031:12035   */\n  dup2\n    /* \"#utility.yul\":11905:12036   */\n  tag_88\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":11897:12036   */\n  swap1\n  pop\n    /* \"#utility.yul\":11624:12043   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/tokenContract.sol\":438:7092  contract KYCToken is ERC20Capped, AccessControl, ReentrancyGuard {... */\ntag_28:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xef0ada6a95823a4880a6367b472055002c2c186b47e43e76ee0a3262e7bbe618\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokenContract.sol\":438:7092  contract KYCToken is ERC20Capped, AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd5dd4c02\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xed831fa4\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xed831fa4\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2f2a8ef\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf9c8dec3\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xfb4900fc\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0xd5dd4c02\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd8326a18\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd9d61655\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0xa9059cbb\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9eb3f99\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb4c7f1ed\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x983b2d56\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2c4e722e\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x565a2e2c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x629044d2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x2c4e722e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x18160ddd\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x263719c1\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05ab421d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":2824:3126  function sendTokens(address buyer, uint256 amount) public onlyRole(MINTER_ROLE) nonReentrant {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":3609:3910  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":4589:4966  function burnMyBalance(address _tokenOwner, uint256 _amount) public onlyRole(MINTER_ROLE) returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":2059:2134  function rate() public view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/tokenContract.sol\":1951:2049  function decimals() public view virtual override returns (uint8) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/tokenContract.sol\":2239:2331  function getBeneficiary() public view returns (address) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":6725:6825  function kycUsersListLength() public view returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":2144:2229  function owner() public view returns (address payable) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":2695:2814  function addMinter(address newMinter) public onlyOwner nonReentrant {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":3227:3504  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":6967:7090  function updateOwnsToken(address stakeHolder) public onlyRole(MINTER_ROLE) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      stop\n        /* \"contracts/tokenContract.sol\":6499:6611  function isKYCed(address _stakeHolder) public view returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":509:571  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n    tag_170:\n      stop\n        /* \"contracts/tokenContract.sol\":4976:5106  function updateDividendPeriodStatus(bool state) public onlyRole(MINTER_ROLE) nonReentrant {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_174\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      tag_177\n      jump\t// in\n    tag_174:\n      stop\n        /* \"contracts/tokenContract.sol\":5116:5223  function getDividendPaymentPeriodState() public view returns (bool) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":6835:6957  function getOwnedTokens(address _stakeHolder) public view returns (bool) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_183\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_184:\n      tag_185\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      tag_188\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      tag_191\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":5639:6489  function removeKYCUser(address user) public onlyRole(KYC_ROLE) nonReentrant {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      tag_194\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_195:\n      tag_196\n      jump\t// in\n    tag_194:\n      stop\n        /* \"contracts/tokenContract.sol\":6621:6715  function getKYCList() public view returns (address[] memory) {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":2509:2685  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      tag_203\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_204\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_204:\n      tag_205\n      jump\t// in\n    tag_203:\n      stop\n        /* \"contracts/tokenContract.sol\":577:633  bytes32 public constant KYC_ROLE = keccak256(\"KYC_ROLE\") */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      tag_209\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokenContract.sol\":5233:5629  function addKYCUser(address user) public onlyRole(KYC_ROLE) nonReentrant {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      tag_211\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_212:\n      tag_213\n      jump\t// in\n    tag_211:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_215\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_216\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_217\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":2824:3126  function sendTokens(address buyer, uint256 amount) public onlyRole(MINTER_ROLE) nonReentrant {... */\n    tag_58:\n        /* \"contracts/tokenContract.sol\":547:571  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_222\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_223\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/tokenContract.sol\":2952:2953  0 */\n      0x00\n        /* \"contracts/tokenContract.sol\":2935:2954  buyer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":2935:2940  buyer */\n      dup4\n        /* \"contracts/tokenContract.sol\":2935:2954  buyer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/tokenContract.sol\":2927:2982  require(buyer != address(0), \"buyer is a zero address\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/tokenContract.sol\":3009:3010  0 */\n      0x00\n        /* \"contracts/tokenContract.sol\":3000:3006  amount */\n      dup3\n        /* \"contracts/tokenContract.sol\":3000:3010  amount > 0 */\n      gt\n        /* \"contracts/tokenContract.sol\":2992:3029  require(amount > 0, \"weiAmount is 0\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/tokenContract.sol\":3048:3067  uint256 tokenAmount */\n      0x00\n        /* \"contracts/tokenContract.sol\":3079:3084  _rate */\n      sload(0x08)\n        /* \"contracts/tokenContract.sol\":3070:3076  amount */\n      dup4\n        /* \"contracts/tokenContract.sol\":3070:3084  amount * _rate */\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"contracts/tokenContract.sol\":3048:3084  uint256 tokenAmount = amount * _rate */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":3094:3119  _mint(buyer, tokenAmount) */\n      tag_233\n        /* \"contracts/tokenContract.sol\":3100:3105  buyer */\n      dup5\n        /* \"contracts/tokenContract.sol\":3107:3118  tokenAmount */\n      dup3\n        /* \"contracts/tokenContract.sol\":3094:3099  _mint */\n      tag_234\n        /* \"contracts/tokenContract.sol\":3094:3119  _mint(buyer, tokenAmount) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/tokenContract.sol\":2917:3126  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_235\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_236\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/tokenContract.sol\":2824:3126  function sendTokens(address buyer, uint256 amount) public onlyRole(MINTER_ROLE) nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_240\n      swap1\n      tag_239\n      jump\t// in\n    tag_240:\n      dup1\n      iszero\n      tag_241\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_242\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_241)\n    tag_242:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_243:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_243\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":3609:3910  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_78:\n        /* \"contracts/tokenContract.sol\":3707:3711  bool */\n      0x00\n        /* \"contracts/tokenContract.sol\":3723:3759  _validateTransfer(sender, recipient) */\n      tag_251\n        /* \"contracts/tokenContract.sol\":3741:3747  sender */\n      dup5\n        /* \"contracts/tokenContract.sol\":3749:3758  recipient */\n      dup5\n        /* \"contracts/tokenContract.sol\":3723:3740  _validateTransfer */\n      tag_252\n        /* \"contracts/tokenContract.sol\":3723:3759  _validateTransfer(sender, recipient) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/tokenContract.sol\":3769:3781  bool success */\n      0x00\n        /* \"contracts/tokenContract.sol\":3784:3829  super.transferFrom(sender, recipient, amount) */\n      tag_253\n        /* \"contracts/tokenContract.sol\":3803:3809  sender */\n      dup6\n        /* \"contracts/tokenContract.sol\":3811:3820  recipient */\n      dup6\n        /* \"contracts/tokenContract.sol\":3822:3828  amount */\n      dup6\n        /* \"contracts/tokenContract.sol\":3784:3802  super.transferFrom */\n      tag_254\n        /* \"contracts/tokenContract.sol\":3784:3829  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_253:\n        /* \"contracts/tokenContract.sol\":3769:3829  bool success = super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":3839:3879  _updateTokenOwnership(sender, recipient) */\n      tag_255\n        /* \"contracts/tokenContract.sol\":3861:3867  sender */\n      dup6\n        /* \"contracts/tokenContract.sol\":3869:3878  recipient */\n      dup6\n        /* \"contracts/tokenContract.sol\":3839:3860  _updateTokenOwnership */\n      tag_256\n        /* \"contracts/tokenContract.sol\":3839:3879  _updateTokenOwnership(sender, recipient) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/tokenContract.sol\":3896:3903  success */\n      dup1\n        /* \"contracts/tokenContract.sol\":3889:3903  return success */\n      swap2\n      pop\n      pop\n        /* \"contracts/tokenContract.sol\":3609:3910  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":4589:4966  function burnMyBalance(address _tokenOwner, uint256 _amount) public onlyRole(MINTER_ROLE) returns (bool) {... */\n    tag_90:\n        /* \"contracts/tokenContract.sol\":4688:4692  bool */\n      0x00\n        /* \"contracts/tokenContract.sol\":547:571  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/tokenContract.sol\":4735:4736  0 */\n      0x00\n        /* \"contracts/tokenContract.sol\":4712:4737  _tokenOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":4712:4723  _tokenOwner */\n      dup5\n        /* \"contracts/tokenContract.sol\":4712:4737  _tokenOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/tokenContract.sol\":4704:4775  require(_tokenOwner != address(0), \"ERC20: burn from the zero address\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"contracts/tokenContract.sol\":4794:4821  _burn(_tokenOwner, _amount) */\n      tag_264\n        /* \"contracts/tokenContract.sol\":4800:4811  _tokenOwner */\n      dup5\n        /* \"contracts/tokenContract.sol\":4813:4820  _amount */\n      dup5\n        /* \"contracts/tokenContract.sol\":4794:4799  _burn */\n      tag_265\n        /* \"contracts/tokenContract.sol\":4794:4821  _burn(_tokenOwner, _amount) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/tokenContract.sol\":4870:4871  0 */\n      0x00\n        /* \"contracts/tokenContract.sol\":4844:4866  balanceOf(_tokenOwner) */\n      tag_266\n        /* \"contracts/tokenContract.sol\":4854:4865  _tokenOwner */\n      dup6\n        /* \"contracts/tokenContract.sol\":4844:4853  balanceOf */\n      tag_127\n        /* \"contracts/tokenContract.sol\":4844:4866  balanceOf(_tokenOwner) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/tokenContract.sol\":4844:4871  balanceOf(_tokenOwner) == 0 */\n      sub\n        /* \"contracts/tokenContract.sol\":4840:4930  if (balanceOf(_tokenOwner) == 0) {... */\n      tag_267\n      jumpi\n        /* \"contracts/tokenContract.sol\":4914:4919  false */\n      0x00\n        /* \"contracts/tokenContract.sol\":4887:4898  _ownsTokens */\n      0x0e\n        /* \"contracts/tokenContract.sol\":4887:4911  _ownsTokens[_tokenOwner] */\n      0x00\n        /* \"contracts/tokenContract.sol\":4899:4910  _tokenOwner */\n      dup7\n        /* \"contracts/tokenContract.sol\":4887:4911  _ownsTokens[_tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/tokenContract.sol\":4887:4919  _ownsTokens[_tokenOwner] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":4840:4930  if (balanceOf(_tokenOwner) == 0) {... */\n    tag_267:\n        /* \"contracts/tokenContract.sol\":4955:4959  true */\n      0x01\n        /* \"contracts/tokenContract.sol\":4948:4959  return true */\n      swap2\n      pop\n        /* \"contracts/tokenContract.sol\":4589:4966  function burnMyBalance(address _tokenOwner, uint256 _amount) public onlyRole(MINTER_ROLE) returns (bool) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":2059:2134  function rate() public view returns (uint256) {... */\n    tag_94:\n        /* \"contracts/tokenContract.sol\":2096:2103  uint256 */\n      0x00\n        /* \"contracts/tokenContract.sol\":2122:2127  _rate */\n      sload(0x08)\n        /* \"contracts/tokenContract.sol\":2115:2127  return _rate */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":2059:2134  function rate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_269\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_271\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_273\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_274\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_273:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":1951:2049  function decimals() public view virtual override returns (uint8) {... */\n    tag_103:\n        /* \"contracts/tokenContract.sol\":2009:2014  uint8 */\n      0x00\n        /* \"contracts/tokenContract.sol\":2033:2042  _decimals */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":2026:2042  return _decimals */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":1951:2049  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n      immutable(\"0xef0ada6a95823a4880a6367b472055002c2c186b47e43e76ee0a3262e7bbe618\")\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_280\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_281\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_280:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":2239:2331  function getBeneficiary() public view returns (address) {... */\n    tag_116:\n        /* \"contracts/tokenContract.sol\":2286:2293  address */\n      0x00\n        /* \"contracts/tokenContract.sol\":2312:2324  _beneficiary */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":2305:2324  return _beneficiary */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":2239:2331  function getBeneficiary() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":6725:6825  function kycUsersListLength() public view returns (uint256) {... */\n    tag_121:\n        /* \"contracts/tokenContract.sol\":6776:6783  uint256 */\n      0x00\n        /* \"contracts/tokenContract.sol\":6802:6811  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":6802:6818  _kycUsers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":6795:6818  return _kycUsers.length */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":6725:6825  function kycUsersListLength() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":2144:2229  function owner() public view returns (address payable) {... */\n    tag_131:\n        /* \"contracts/tokenContract.sol\":2182:2197  address payable */\n      0x00\n        /* \"contracts/tokenContract.sol\":2216:2222  _owner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":2209:2222  return _owner */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":2144:2229  function owner() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_288\n      swap1\n      tag_239\n      jump\t// in\n    tag_288:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_289\n      swap1\n      tag_239\n      jump\t// in\n    tag_289:\n      dup1\n      iszero\n      tag_290\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_291\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_290)\n    tag_291:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_292:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_292\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_290:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":2695:2814  function addMinter(address newMinter) public onlyOwner nonReentrant {... */\n    tag_146:\n        /* \"contracts/tokenContract.sol\":2433:2439  _owner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":2419:2439  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":2419:2429  msg.sender */\n      caller\n        /* \"contracts/tokenContract.sol\":2419:2439  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokenContract.sol\":2411:2481  require(msg.sender == _owner, \"Only the Owner can call this function\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_298\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_223\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_298:\n        /* \"contracts/tokenContract.sol\":2773:2807  _grantRole(MINTER_ROLE, newMinter) */\n      tag_300\n        /* \"contracts/tokenContract.sol\":547:571  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/tokenContract.sol\":2797:2806  newMinter */\n      dup3\n        /* \"contracts/tokenContract.sol\":2773:2783  _grantRole */\n      tag_274\n        /* \"contracts/tokenContract.sol\":2773:2807  _grantRole(MINTER_ROLE, newMinter) */\n      jump\t// in\n    tag_300:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_301\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_236\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_301:\n        /* \"contracts/tokenContract.sol\":2695:2814  function addMinter(address newMinter) public onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":3227:3504  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_154:\n        /* \"contracts/tokenContract.sol\":3305:3309  bool */\n      0x00\n        /* \"contracts/tokenContract.sol\":3321:3361  _validateTransfer(msg.sender, recipient) */\n      tag_303\n        /* \"contracts/tokenContract.sol\":3339:3349  msg.sender */\n      caller\n        /* \"contracts/tokenContract.sol\":3351:3360  recipient */\n      dup5\n        /* \"contracts/tokenContract.sol\":3321:3338  _validateTransfer */\n      tag_252\n        /* \"contracts/tokenContract.sol\":3321:3361  _validateTransfer(msg.sender, recipient) */\n      jump\t// in\n    tag_303:\n        /* \"contracts/tokenContract.sol\":3371:3383  bool success */\n      0x00\n        /* \"contracts/tokenContract.sol\":3386:3419  super.transfer(recipient, amount) */\n      tag_304\n        /* \"contracts/tokenContract.sol\":3401:3410  recipient */\n      dup5\n        /* \"contracts/tokenContract.sol\":3412:3418  amount */\n      dup5\n        /* \"contracts/tokenContract.sol\":3386:3400  super.transfer */\n      tag_305\n        /* \"contracts/tokenContract.sol\":3386:3419  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/tokenContract.sol\":3371:3419  bool success = super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":3429:3473  _updateTokenOwnership(msg.sender, recipient) */\n      tag_306\n        /* \"contracts/tokenContract.sol\":3451:3461  msg.sender */\n      caller\n        /* \"contracts/tokenContract.sol\":3463:3472  recipient */\n      dup6\n        /* \"contracts/tokenContract.sol\":3429:3450  _updateTokenOwnership */\n      tag_256\n        /* \"contracts/tokenContract.sol\":3429:3473  _updateTokenOwnership(msg.sender, recipient) */\n      jump\t// in\n    tag_306:\n        /* \"contracts/tokenContract.sol\":3490:3497  success */\n      dup1\n        /* \"contracts/tokenContract.sol\":3483:3497  return success */\n      swap2\n      pop\n      pop\n        /* \"contracts/tokenContract.sol\":3227:3504  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":6967:7090  function updateOwnsToken(address stakeHolder) public onlyRole(MINTER_ROLE) {... */\n    tag_159:\n        /* \"contracts/tokenContract.sol\":547:571  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_308\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/tokenContract.sol\":7079:7083  true */\n      0x01\n        /* \"contracts/tokenContract.sol\":7052:7063  _ownsTokens */\n      0x0e\n        /* \"contracts/tokenContract.sol\":7052:7076  _ownsTokens[stakeHolder] */\n      0x00\n        /* \"contracts/tokenContract.sol\":7064:7075  stakeHolder */\n      dup5\n        /* \"contracts/tokenContract.sol\":7052:7076  _ownsTokens[stakeHolder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/tokenContract.sol\":7052:7083  _ownsTokens[stakeHolder] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":6967:7090  function updateOwnsToken(address stakeHolder) public onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":6499:6611  function isKYCed(address _stakeHolder) public view returns (bool) {... */\n    tag_163:\n        /* \"contracts/tokenContract.sol\":6559:6563  bool */\n      0x00\n        /* \"contracts/tokenContract.sol\":6582:6590  _isKYCed */\n      0x0c\n        /* \"contracts/tokenContract.sol\":6582:6604  _isKYCed[_stakeHolder] */\n      0x00\n        /* \"contracts/tokenContract.sol\":6591:6603  _stakeHolder */\n      dup4\n        /* \"contracts/tokenContract.sol\":6582:6604  _isKYCed[_stakeHolder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":6575:6604  return _isKYCed[_stakeHolder] */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":6499:6611  function isKYCed(address _stakeHolder) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":509:571  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_167:\n        /* \"contracts/tokenContract.sol\":547:571  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/tokenContract.sol\":509:571  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_311\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_313\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_315\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_281\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_315:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":4976:5106  function updateDividendPeriodStatus(bool state) public onlyRole(MINTER_ROLE) nonReentrant {... */\n    tag_177:\n        /* \"contracts/tokenContract.sol\":547:571  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_317\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_319\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_223\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_319:\n        /* \"contracts/tokenContract.sol\":5094:5099  state */\n      dup2\n        /* \"contracts/tokenContract.sol\":5076:5091  _dividendPeriod */\n      0x0a\n      0x14\n        /* \"contracts/tokenContract.sol\":5076:5099  _dividendPeriod = state */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_321\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_236\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_321:\n        /* \"contracts/tokenContract.sol\":4976:5106  function updateDividendPeriodStatus(bool state) public onlyRole(MINTER_ROLE) nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":5116:5223  function getDividendPaymentPeriodState() public view returns (bool) {... */\n    tag_180:\n        /* \"contracts/tokenContract.sol\":5178:5182  bool */\n      0x00\n        /* \"contracts/tokenContract.sol\":5201:5216  _dividendPeriod */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":5194:5216  return _dividendPeriod */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":5116:5223  function getDividendPaymentPeriodState() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":6835:6957  function getOwnedTokens(address _stakeHolder) public view returns (bool) {... */\n    tag_185:\n        /* \"contracts/tokenContract.sol\":6902:6906  bool */\n      0x00\n        /* \"contracts/tokenContract.sol\":6925:6936  _ownsTokens */\n      0x0e\n        /* \"contracts/tokenContract.sol\":6925:6950  _ownsTokens[_stakeHolder] */\n      0x00\n        /* \"contracts/tokenContract.sol\":6937:6949  _stakeHolder */\n      dup4\n        /* \"contracts/tokenContract.sol\":6925:6950  _ownsTokens[_stakeHolder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":6918:6950  return _ownsTokens[_stakeHolder] */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":6835:6957  function getOwnedTokens(address _stakeHolder) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":5639:6489  function removeKYCUser(address user) public onlyRole(KYC_ROLE) nonReentrant {... */\n    tag_196:\n        /* \"contracts/tokenContract.sol\":612:633  keccak256(\"KYC_ROLE\") */\n      0xdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db7\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_326\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_328\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_223\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_328:\n        /* \"contracts/tokenContract.sol\":5733:5741  _isKYCed */\n      0x0c\n        /* \"contracts/tokenContract.sol\":5733:5747  _isKYCed[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":5742:5746  user */\n      dup4\n        /* \"contracts/tokenContract.sol\":5733:5747  _isKYCed[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":5725:5769  require(_isKYCed[user], \"User is not KYCed\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap1\n      tag_332\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_330:\n        /* \"contracts/tokenContract.sol\":5788:5799  _ownsTokens */\n      0x0e\n        /* \"contracts/tokenContract.sol\":5788:5805  _ownsTokens[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":5800:5804  user */\n      dup4\n        /* \"contracts/tokenContract.sol\":5788:5805  _ownsTokens[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":5787:5805  !_ownsTokens[user] */\n      iszero\n        /* \"contracts/tokenContract.sol\":5779:5855  require(!_ownsTokens[user], \"User owns tokens, cannot remove from KYC list\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_333:\n        /* \"contracts/tokenContract.sol\":5874:5884  bool found */\n      0x00\n        /* \"contracts/tokenContract.sol\":5930:5939  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":5930:5946  _kycUsers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":5906:5921  _kycUserIndices */\n      0x0d\n        /* \"contracts/tokenContract.sol\":5906:5927  _kycUserIndices[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":5922:5926  user */\n      dup6\n        /* \"contracts/tokenContract.sol\":5906:5927  _kycUserIndices[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/tokenContract.sol\":5906:5946  _kycUserIndices[user] < _kycUsers.length */\n      lt\n        /* \"contracts/tokenContract.sol\":5902:6021  if (_kycUserIndices[user] < _kycUsers.length) {... */\n      iszero\n      tag_336\n      jumpi\n        /* \"contracts/tokenContract.sol\":6006:6010  user */\n      dup3\n        /* \"contracts/tokenContract.sol\":5970:6010  _kycUsers[_kycUserIndices[user]] == user */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":5970:5979  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":5980:5995  _kycUserIndices */\n      0x0d\n        /* \"contracts/tokenContract.sol\":5980:6001  _kycUserIndices[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":5996:6000  user */\n      dup7\n        /* \"contracts/tokenContract.sol\":5980:6001  _kycUserIndices[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/tokenContract.sol\":5970:6002  _kycUsers[_kycUserIndices[user]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_337\n      jumpi\n      tag_338\n      tag_339\n      jump\t// in\n    tag_338:\n    tag_337:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":5970:6010  _kycUsers[_kycUserIndices[user]] == user */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokenContract.sol\":5962:6010  found = _kycUsers[_kycUserIndices[user]] == user */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":5902:6021  if (_kycUserIndices[user] < _kycUsers.length) {... */\n    tag_336:\n        /* \"contracts/tokenContract.sol\":6038:6043  found */\n      dup1\n        /* \"contracts/tokenContract.sol\":6030:6074  require(found, \"User not found in KYC list\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap1\n      tag_343\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_341:\n        /* \"contracts/tokenContract.sol\":6093:6110  uint256 lastIndex */\n      0x00\n        /* \"contracts/tokenContract.sol\":6132:6133  1 */\n      0x01\n        /* \"contracts/tokenContract.sol\":6113:6122  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":6113:6129  _kycUsers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":6113:6133  _kycUsers.length - 1 */\n      tag_344\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"contracts/tokenContract.sol\":6093:6133  uint256 lastIndex = _kycUsers.length - 1 */\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":6172:6181  lastIndex */\n      dup1\n        /* \"contracts/tokenContract.sol\":6147:6162  _kycUserIndices */\n      0x0d\n        /* \"contracts/tokenContract.sol\":6147:6168  _kycUserIndices[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":6163:6167  user */\n      dup7\n        /* \"contracts/tokenContract.sol\":6147:6168  _kycUserIndices[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/tokenContract.sol\":6147:6181  _kycUserIndices[user] != lastIndex */\n      eq\n        /* \"contracts/tokenContract.sol\":6143:6338  if (_kycUserIndices[user] != lastIndex) {... */\n      tag_346\n      jumpi\n        /* \"contracts/tokenContract.sol\":6232:6241  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":6242:6251  lastIndex */\n      dup2\n        /* \"contracts/tokenContract.sol\":6232:6252  _kycUsers[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_347\n      jumpi\n      tag_348\n      tag_339\n      jump\t// in\n    tag_348:\n    tag_347:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":6197:6206  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":6207:6222  _kycUserIndices */\n      0x0d\n        /* \"contracts/tokenContract.sol\":6207:6228  _kycUserIndices[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":6223:6227  user */\n      dup8\n        /* \"contracts/tokenContract.sol\":6207:6228  _kycUserIndices[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/tokenContract.sol\":6197:6229  _kycUsers[_kycUserIndices[user]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_350\n      jumpi\n      tag_351\n      tag_339\n      jump\t// in\n    tag_351:\n    tag_350:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/tokenContract.sol\":6197:6252  _kycUsers[_kycUserIndices[user]] = _kycUsers[lastIndex] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":6306:6321  _kycUserIndices */\n      0x0d\n        /* \"contracts/tokenContract.sol\":6306:6327  _kycUserIndices[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":6322:6326  user */\n      dup6\n        /* \"contracts/tokenContract.sol\":6306:6327  _kycUserIndices[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/tokenContract.sol\":6266:6281  _kycUserIndices */\n      0x0d\n        /* \"contracts/tokenContract.sol\":6266:6303  _kycUserIndices[_kycUsers[lastIndex]] */\n      0x00\n        /* \"contracts/tokenContract.sol\":6282:6291  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":6292:6301  lastIndex */\n      dup5\n        /* \"contracts/tokenContract.sol\":6282:6302  _kycUsers[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_353\n      jumpi\n      tag_354\n      tag_339\n      jump\t// in\n    tag_354:\n    tag_353:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":6266:6303  _kycUserIndices[_kycUsers[lastIndex]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokenContract.sol\":6266:6327  _kycUserIndices[_kycUsers[lastIndex]] = _kycUserIndices[user] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":6143:6338  if (_kycUserIndices[user] != lastIndex) {... */\n    tag_346:\n        /* \"contracts/tokenContract.sol\":6347:6356  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":6347:6362  _kycUsers.pop() */\n      dup1\n      sload\n      dup1\n      tag_356\n      jumpi\n      tag_357\n      tag_358\n      jump\t// in\n    tag_357:\n    tag_356:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/tokenContract.sol\":6398:6403  false */\n      0x00\n        /* \"contracts/tokenContract.sol\":6381:6389  _isKYCed */\n      0x0c\n        /* \"contracts/tokenContract.sol\":6381:6395  _isKYCed[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":6390:6394  user */\n      dup7\n        /* \"contracts/tokenContract.sol\":6381:6395  _isKYCed[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/tokenContract.sol\":6381:6403  _isKYCed[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":6437:6438  0 */\n      0x00\n        /* \"contracts/tokenContract.sol\":6413:6428  _kycUserIndices */\n      0x0d\n        /* \"contracts/tokenContract.sol\":6413:6434  _kycUserIndices[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":6429:6433  user */\n      dup7\n        /* \"contracts/tokenContract.sol\":6413:6434  _kycUserIndices[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokenContract.sol\":6413:6438  _kycUserIndices[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":6477:6481  user */\n      dup4\n        /* \"contracts/tokenContract.sol\":6462:6482  KYCUserRemoved(user) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8ce60ec723c7fcc3c3f6b1ffaa7b814b03df348c312bb6e41929417162565664\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/tokenContract.sol\":5715:6489  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_360\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_236\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_360:\n        /* \"contracts/tokenContract.sol\":5639:6489  function removeKYCUser(address user) public onlyRole(KYC_ROLE) nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":6621:6715  function getKYCList() public view returns (address[] memory) {... */\n    tag_199:\n        /* \"contracts/tokenContract.sol\":6664:6680  address[] memory */\n      0x60\n        /* \"contracts/tokenContract.sol\":6699:6708  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":6692:6708  return _kycUsers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_362\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_363:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_363\n      jumpi\n    tag_362:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":6621:6715  function getKYCList() public view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":2509:2685  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_205:\n        /* \"contracts/tokenContract.sol\":2433:2439  _owner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":2419:2439  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":2419:2429  msg.sender */\n      caller\n        /* \"contracts/tokenContract.sol\":2419:2439  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokenContract.sol\":2411:2481  require(msg.sender == _owner, \"Only the Owner can call this function\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_366\n      swap1\n      tag_296\n      jump\t// in\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_365:\n        /* \"contracts/tokenContract.sol\":2609:2610  0 */\n      0x00\n        /* \"contracts/tokenContract.sol\":2589:2611  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":2589:2597  newOwner */\n      dup2\n        /* \"contracts/tokenContract.sol\":2589:2611  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/tokenContract.sol\":2581:2642  require(newOwner != address(0), \"Invalid new owner address.\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_368:\n        /* \"contracts/tokenContract.sol\":2669:2677  newOwner */\n      dup1\n        /* \"contracts/tokenContract.sol\":2652:2658  _owner */\n      0x09\n      0x00\n        /* \"contracts/tokenContract.sol\":2652:2678  _owner = payable(newOwner) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":2509:2685  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":577:633  bytes32 public constant KYC_ROLE = keccak256(\"KYC_ROLE\") */\n    tag_208:\n        /* \"contracts/tokenContract.sol\":612:633  keccak256(\"KYC_ROLE\") */\n      0xdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db7\n        /* \"contracts/tokenContract.sol\":577:633  bytes32 public constant KYC_ROLE = keccak256(\"KYC_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":5233:5629  function addKYCUser(address user) public onlyRole(KYC_ROLE) nonReentrant {... */\n    tag_213:\n        /* \"contracts/tokenContract.sol\":612:633  keccak256(\"KYC_ROLE\") */\n      0xdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db7\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_372\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_374\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_223\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_374:\n        /* \"contracts/tokenContract.sol\":5340:5341  0 */\n      0x00\n        /* \"contracts/tokenContract.sol\":5324:5342  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokenContract.sol\":5324:5328  user */\n      dup3\n        /* \"contracts/tokenContract.sol\":5324:5342  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/tokenContract.sol\":5316:5362  require(user != address(0), \"Invalid address\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_377\n      swap1\n      tag_378\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_376:\n        /* \"contracts/tokenContract.sol\":5381:5389  _isKYCed */\n      0x0c\n        /* \"contracts/tokenContract.sol\":5381:5395  _isKYCed[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":5390:5394  user */\n      dup4\n        /* \"contracts/tokenContract.sol\":5381:5395  _isKYCed[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":5380:5395  !_isKYCed[user] */\n      iszero\n        /* \"contracts/tokenContract.sol\":5372:5421  require(!_isKYCed[user], \"User is already KYCed\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_380\n      swap1\n      tag_381\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_379:\n        /* \"contracts/tokenContract.sol\":5457:5461  true */\n      0x01\n        /* \"contracts/tokenContract.sol\":5440:5448  _isKYCed */\n      0x0c\n        /* \"contracts/tokenContract.sol\":5440:5454  _isKYCed[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":5449:5453  user */\n      dup5\n        /* \"contracts/tokenContract.sol\":5440:5454  _isKYCed[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/tokenContract.sol\":5440:5461  _isKYCed[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":5471:5480  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":5486:5490  user */\n      dup3\n        /* \"contracts/tokenContract.sol\":5471:5491  _kycUsers.push(user) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":5544:5545  1 */\n      0x01\n        /* \"contracts/tokenContract.sol\":5525:5534  _kycUsers */\n      0x0b\n        /* \"contracts/tokenContract.sol\":5525:5541  _kycUsers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokenContract.sol\":5525:5545  _kycUsers.length - 1 */\n      tag_383\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_383:\n        /* \"contracts/tokenContract.sol\":5501:5516  _kycUserIndices */\n      0x0d\n        /* \"contracts/tokenContract.sol\":5501:5522  _kycUserIndices[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":5517:5521  user */\n      dup5\n        /* \"contracts/tokenContract.sol\":5501:5522  _kycUserIndices[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/tokenContract.sol\":5501:5545  _kycUserIndices[user] = _kycUsers.length - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":5575:5580  false */\n      0x00\n        /* \"contracts/tokenContract.sol\":5555:5566  _ownsTokens */\n      0x0e\n        /* \"contracts/tokenContract.sol\":5555:5572  _ownsTokens[user] */\n      0x00\n        /* \"contracts/tokenContract.sol\":5567:5571  user */\n      dup5\n        /* \"contracts/tokenContract.sol\":5555:5572  _ownsTokens[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/tokenContract.sol\":5555:5580  _ownsTokens[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":5617:5621  user */\n      dup2\n        /* \"contracts/tokenContract.sol\":5604:5622  KYCUserAdded(user) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe82acf77c2686315e6aeaa43ccec710936b819cb5d01a31fadb2bf2a928c9342\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_384\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_236\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_384:\n        /* \"contracts/tokenContract.sol\":5233:5629  function addKYCUser(address user) public onlyRole(KYC_ROLE) nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_387\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_388\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_389\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_392\n      swap1\n      tag_393\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_391:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_397\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_402\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_403\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":3998:4317  function _validateTransfer(address sender, address recipient) private view {... */\n    tag_252:\n        /* \"contracts/tokenContract.sol\":4092:4107  _dividendPeriod */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":4091:4107  !_dividendPeriod */\n      iszero\n        /* \"contracts/tokenContract.sol\":4083:4188  require(!_dividendPeriod, \"Dividend Period is ongoing, all transfers will resume after dividend period.\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap1\n      tag_407\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_405:\n        /* \"contracts/tokenContract.sol\":4206:4214  _isKYCed */\n      0x0c\n        /* \"contracts/tokenContract.sol\":4206:4222  _isKYCed[sender] */\n      0x00\n        /* \"contracts/tokenContract.sol\":4215:4221  sender */\n      dup4\n        /* \"contracts/tokenContract.sol\":4206:4222  _isKYCed[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":4198:4246  require(_isKYCed[sender], \"Sender is not KYCed\") */\n      tag_408\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_409\n      swap1\n      tag_410\n      jump\t// in\n    tag_409:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_408:\n        /* \"contracts/tokenContract.sol\":4264:4272  _isKYCed */\n      0x0c\n        /* \"contracts/tokenContract.sol\":4264:4283  _isKYCed[recipient] */\n      0x00\n        /* \"contracts/tokenContract.sol\":4273:4282  recipient */\n      dup3\n        /* \"contracts/tokenContract.sol\":4264:4283  _isKYCed[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokenContract.sol\":4256:4310  require(_isKYCed[recipient], \"Recipient is not KYCed\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_412\n      swap1\n      tag_413\n      jump\t// in\n    tag_412:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_411:\n        /* \"contracts/tokenContract.sol\":3998:4317  function _validateTransfer(address sender, address recipient) private view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_415\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_416\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_417\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_416:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_418\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokenContract.sol\":4406:4579  function _updateTokenOwnership(address sender, address recipient) private {... */\n    tag_256:\n        /* \"contracts/tokenContract.sol\":4515:4519  true */\n      0x01\n        /* \"contracts/tokenContract.sol\":4490:4501  _ownsTokens */\n      0x0e\n        /* \"contracts/tokenContract.sol\":4490:4512  _ownsTokens[recipient] */\n      0x00\n        /* \"contracts/tokenContract.sol\":4502:4511  recipient */\n      dup4\n        /* \"contracts/tokenContract.sol\":4490:4512  _ownsTokens[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/tokenContract.sol\":4490:4519  _ownsTokens[recipient] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":4571:4572  0 */\n      0x00\n        /* \"contracts/tokenContract.sol\":4551:4568  balanceOf(sender) */\n      tag_421\n        /* \"contracts/tokenContract.sol\":4561:4567  sender */\n      dup4\n        /* \"contracts/tokenContract.sol\":4551:4560  balanceOf */\n      tag_127\n        /* \"contracts/tokenContract.sol\":4551:4568  balanceOf(sender) */\n      jump\t// in\n    tag_421:\n        /* \"contracts/tokenContract.sol\":4551:4572  balanceOf(sender) > 0 */\n      gt\n        /* \"contracts/tokenContract.sol\":4529:4540  _ownsTokens */\n      0x0e\n        /* \"contracts/tokenContract.sol\":4529:4548  _ownsTokens[sender] */\n      0x00\n        /* \"contracts/tokenContract.sol\":4541:4547  sender */\n      dup5\n        /* \"contracts/tokenContract.sol\":4529:4548  _ownsTokens[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/tokenContract.sol\":4529:4572  _ownsTokens[sender] = balanceOf(sender) > 0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokenContract.sol\":4406:4579  function _updateTokenOwnership(address sender, address recipient) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_423\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_424\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_425\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_425:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_427\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_428\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_429\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_429:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_426)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_426:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      tag_432\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6838:6842  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6851  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6837  hasRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      jump\t// in\n    tag_432:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_433\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6874  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6875:6879  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6888  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6896  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      tag_434\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6961  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      jump\t// in\n    tag_434:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6942:6949  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6936:6940  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      swap1\n      pop\n      jump(tag_431)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n    tag_433:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7027:7032  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7020:7032  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_431:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_437\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_437:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_438\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_440\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_440:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_442\n      swap3\n      swap2\n      swap1\n      tag_443\n      jump\t// in\n    tag_442:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_441:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n    tag_398:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n      tag_445\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1167:1171  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1173:1175  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1177:1182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1166  super._update */\n      tag_446\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n      jump\t// in\n    tag_445:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1214:1215  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1202  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n      tag_447\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1249  uint256 maxSupply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n      tag_448\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1255  cap */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n      jump\t// in\n    tag_448:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1257  uint256 maxSupply = cap() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1285  uint256 supply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n      tag_449\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1299  totalSupply */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1301  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1328:1337  maxSupply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1325  supply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1337  supply > maxSupply */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n      iszero\n      tag_450\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1381:1387  supply */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1389:1398  maxSupply */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1364:1399  ERC20ExceededCap(supply, maxSupply) */\n      mload(0x40)\n      0x9e79f85400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_451\n      swap3\n      swap2\n      swap1\n      tag_452\n      jump\t// in\n    tag_451:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n    tag_450:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1218:1424  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n    tag_447:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_455\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_455:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_454:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_456\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_457\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_457:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_456:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_458\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_459\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_459:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_458:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_461\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_461:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_462\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_463\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_464\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_465\n      jump\t// in\n    tag_464:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_463:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_466\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_403\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_466:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_462:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_468\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_469\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_469:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_468:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_470\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_471\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_471:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_470:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_472\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_472:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_446:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_474\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_475\n      swap2\n      swap1\n      tag_476\n      jump\t// in\n    tag_475:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_477)\n    tag_474:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_478\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_479\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_465\n      jump\t// in\n    tag_479:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_478:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_477:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_481)\n    tag_480:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_481:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_482\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_482:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_484:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_486:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_487:\n        /* \"#utility.yul\":561:584   */\n      tag_558\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_486\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_559:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_488:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_561\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_487\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_50:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_564\n      tag_484\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":833:952   */\n    tag_563:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_565\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_488\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_489:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_490:\n        /* \"#utility.yul\":1268:1289   */\n      tag_568\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_489\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_53:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_570\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_490\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_491:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_492:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_573\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_491\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_493:\n        /* \"#utility.yul\":1825:1849   */\n      tag_575\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_492\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_576:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_494:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_578\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_493\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2102   */\n    tag_495:\n        /* \"#utility.yul\":2062:2069   */\n      0x00\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2080:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_496:\n        /* \"#utility.yul\":2181:2205   */\n      tag_581\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_495\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      dup1\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_582:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_497:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_584\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_496\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2855   */\n    tag_57:\n        /* \"#utility.yul\":2449:2455   */\n      0x00\n        /* \"#utility.yul\":2457:2463   */\n      dup1\n        /* \"#utility.yul\":2506:2508   */\n      0x40\n        /* \"#utility.yul\":2494:2503   */\n      dup4\n        /* \"#utility.yul\":2485:2492   */\n      dup6\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2593   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":2512:2591   */\n      tag_587\n      tag_484\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":2474:2593   */\n    tag_586:\n        /* \"#utility.yul\":2632:2633   */\n      0x00\n        /* \"#utility.yul\":2657:2710   */\n      tag_588\n        /* \"#utility.yul\":2702:2709   */\n      dup6\n        /* \"#utility.yul\":2693:2699   */\n      dup3\n        /* \"#utility.yul\":2682:2691   */\n      dup7\n        /* \"#utility.yul\":2678:2700   */\n      add\n        /* \"#utility.yul\":2657:2710   */\n      tag_494\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":2647:2710   */\n      swap3\n      pop\n        /* \"#utility.yul\":2603:2720   */\n      pop\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2785:2838   */\n      tag_589\n        /* \"#utility.yul\":2830:2837   */\n      dup6\n        /* \"#utility.yul\":2821:2827   */\n      dup3\n        /* \"#utility.yul\":2810:2819   */\n      dup7\n        /* \"#utility.yul\":2806:2828   */\n      add\n        /* \"#utility.yul\":2785:2838   */\n      tag_497\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":2775:2838   */\n      swap2\n      pop\n        /* \"#utility.yul\":2730:2848   */\n      pop\n        /* \"#utility.yul\":2381:2855   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:2960   */\n    tag_498:\n        /* \"#utility.yul\":2913:2919   */\n      0x00\n        /* \"#utility.yul\":2947:2952   */\n      dup2\n        /* \"#utility.yul\":2941:2953   */\n      mload\n        /* \"#utility.yul\":2931:2953   */\n      swap1\n      pop\n        /* \"#utility.yul\":2861:2960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2966:3135   */\n    tag_499:\n        /* \"#utility.yul\":3050:3061   */\n      0x00\n        /* \"#utility.yul\":3084:3090   */\n      dup3\n        /* \"#utility.yul\":3079:3082   */\n      dup3\n        /* \"#utility.yul\":3072:3091   */\n      mstore\n        /* \"#utility.yul\":3124:3128   */\n      0x20\n        /* \"#utility.yul\":3119:3122   */\n      dup3\n        /* \"#utility.yul\":3115:3129   */\n      add\n        /* \"#utility.yul\":3100:3129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2966:3135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3141:3280   */\n    tag_500:\n        /* \"#utility.yul\":3230:3236   */\n      dup3\n        /* \"#utility.yul\":3225:3228   */\n      dup2\n        /* \"#utility.yul\":3220:3223   */\n      dup4\n        /* \"#utility.yul\":3214:3237   */\n      mcopy\n        /* \"#utility.yul\":3271:3272   */\n      0x00\n        /* \"#utility.yul\":3262:3268   */\n      dup4\n        /* \"#utility.yul\":3257:3260   */\n      dup4\n        /* \"#utility.yul\":3253:3269   */\n      add\n        /* \"#utility.yul\":3246:3273   */\n      mstore\n        /* \"#utility.yul\":3141:3280   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3388   */\n    tag_501:\n        /* \"#utility.yul\":3327:3333   */\n      0x00\n        /* \"#utility.yul\":3378:3380   */\n      0x1f\n        /* \"#utility.yul\":3374:3381   */\n      not\n        /* \"#utility.yul\":3369:3371   */\n      0x1f\n        /* \"#utility.yul\":3362:3367   */\n      dup4\n        /* \"#utility.yul\":3358:3372   */\n      add\n        /* \"#utility.yul\":3354:3382   */\n      and\n        /* \"#utility.yul\":3344:3382   */\n      swap1\n      pop\n        /* \"#utility.yul\":3286:3388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3394:3771   */\n    tag_502:\n        /* \"#utility.yul\":3482:3485   */\n      0x00\n        /* \"#utility.yul\":3510:3549   */\n      tag_595\n        /* \"#utility.yul\":3543:3548   */\n      dup3\n        /* \"#utility.yul\":3510:3549   */\n      tag_498\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":3565:3636   */\n      tag_596\n        /* \"#utility.yul\":3629:3635   */\n      dup2\n        /* \"#utility.yul\":3624:3627   */\n      dup6\n        /* \"#utility.yul\":3565:3636   */\n      tag_499\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":3558:3636   */\n      swap4\n      pop\n        /* \"#utility.yul\":3645:3710   */\n      tag_597\n        /* \"#utility.yul\":3703:3709   */\n      dup2\n        /* \"#utility.yul\":3698:3701   */\n      dup6\n        /* \"#utility.yul\":3691:3695   */\n      0x20\n        /* \"#utility.yul\":3684:3689   */\n      dup7\n        /* \"#utility.yul\":3680:3696   */\n      add\n        /* \"#utility.yul\":3645:3710   */\n      tag_500\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":3735:3764   */\n      tag_598\n        /* \"#utility.yul\":3757:3763   */\n      dup2\n        /* \"#utility.yul\":3735:3764   */\n      tag_501\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":3730:3733   */\n      dup5\n        /* \"#utility.yul\":3726:3765   */\n      add\n        /* \"#utility.yul\":3719:3765   */\n      swap2\n      pop\n        /* \"#utility.yul\":3486:3771   */\n      pop\n        /* \"#utility.yul\":3394:3771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3777:4090   */\n    tag_63:\n        /* \"#utility.yul\":3890:3894   */\n      0x00\n        /* \"#utility.yul\":3928:3930   */\n      0x20\n        /* \"#utility.yul\":3917:3926   */\n      dup3\n        /* \"#utility.yul\":3913:3931   */\n      add\n        /* \"#utility.yul\":3905:3931   */\n      swap1\n      pop\n        /* \"#utility.yul\":3977:3986   */\n      dup2\n        /* \"#utility.yul\":3971:3975   */\n      dup2\n        /* \"#utility.yul\":3967:3987   */\n      sub\n        /* \"#utility.yul\":3963:3964   */\n      0x00\n        /* \"#utility.yul\":3952:3961   */\n      dup4\n        /* \"#utility.yul\":3948:3965   */\n      add\n        /* \"#utility.yul\":3941:3988   */\n      mstore\n        /* \"#utility.yul\":4005:4083   */\n      tag_600\n        /* \"#utility.yul\":4078:4082   */\n      dup2\n        /* \"#utility.yul\":4069:4075   */\n      dup5\n        /* \"#utility.yul\":4005:4083   */\n      tag_502\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":3997:4083   */\n      swap1\n      pop\n        /* \"#utility.yul\":3777:4090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_503:\n        /* \"#utility.yul\":4183:4207   */\n      tag_602\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_495\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_73:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_604\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_503\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_77:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      dup1\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_607\n      tag_484\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":4558:4677   */\n    tag_606:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_608\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_494\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_609\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_494\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_610\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_497\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_504:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_505:\n        /* \"#utility.yul\":5229:5253   */\n      tag_613\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_504\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_614\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      dup1\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_614:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_506:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_616\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_505\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_83:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_619\n      tag_484\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":5505:5624   */\n    tag_618:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_620\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_506\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_507:\n        /* \"#utility.yul\":5851:5875   */\n      tag_622\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_504\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_86:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_624\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_507\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6590   */\n    tag_99:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6192:6198   */\n      dup1\n        /* \"#utility.yul\":6241:6243   */\n      0x40\n        /* \"#utility.yul\":6229:6238   */\n      dup4\n        /* \"#utility.yul\":6220:6227   */\n      dup6\n        /* \"#utility.yul\":6216:6239   */\n      sub\n        /* \"#utility.yul\":6212:6244   */\n      slt\n        /* \"#utility.yul\":6209:6328   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":6247:6326   */\n      tag_627\n      tag_484\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":6209:6328   */\n    tag_626:\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6392:6445   */\n      tag_628\n        /* \"#utility.yul\":6437:6444   */\n      dup6\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6417:6426   */\n      dup7\n        /* \"#utility.yul\":6413:6435   */\n      add\n        /* \"#utility.yul\":6392:6445   */\n      tag_506\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":6382:6445   */\n      swap3\n      pop\n        /* \"#utility.yul\":6338:6455   */\n      pop\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6520:6573   */\n      tag_629\n        /* \"#utility.yul\":6565:6572   */\n      dup6\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup7\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6520:6573   */\n      tag_494\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":6510:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6465:6583   */\n      pop\n        /* \"#utility.yul\":6116:6590   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6682   */\n    tag_508:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6675   */\n      0xff\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6676   */\n      and\n        /* \"#utility.yul\":6649:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6800   */\n    tag_509:\n        /* \"#utility.yul\":6771:6793   */\n      tag_632\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6771:6793   */\n      tag_508\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6794   */\n      mstore\n        /* \"#utility.yul\":6688:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7020   */\n    tag_105:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7013   */\n      tag_634\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7012   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7013   */\n      tag_509\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":6806:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7144   */\n    tag_510:\n        /* \"#utility.yul\":7113:7137   */\n      tag_636\n        /* \"#utility.yul\":7131:7136   */\n      dup2\n        /* \"#utility.yul\":7113:7137   */\n      tag_492\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":7108:7111   */\n      dup3\n        /* \"#utility.yul\":7101:7138   */\n      mstore\n        /* \"#utility.yul\":7026:7144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7150:7372   */\n    tag_118:\n        /* \"#utility.yul\":7243:7247   */\n      0x00\n        /* \"#utility.yul\":7281:7283   */\n      0x20\n        /* \"#utility.yul\":7270:7279   */\n      dup3\n        /* \"#utility.yul\":7266:7284   */\n      add\n        /* \"#utility.yul\":7258:7284   */\n      swap1\n      pop\n        /* \"#utility.yul\":7294:7365   */\n      tag_638\n        /* \"#utility.yul\":7362:7363   */\n      0x00\n        /* \"#utility.yul\":7351:7360   */\n      dup4\n        /* \"#utility.yul\":7347:7364   */\n      add\n        /* \"#utility.yul\":7338:7344   */\n      dup5\n        /* \"#utility.yul\":7294:7365   */\n      tag_510\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":7150:7372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7378:7707   */\n    tag_126:\n        /* \"#utility.yul\":7437:7443   */\n      0x00\n        /* \"#utility.yul\":7486:7488   */\n      0x20\n        /* \"#utility.yul\":7474:7483   */\n      dup3\n        /* \"#utility.yul\":7465:7472   */\n      dup5\n        /* \"#utility.yul\":7461:7484   */\n      sub\n        /* \"#utility.yul\":7457:7489   */\n      slt\n        /* \"#utility.yul\":7454:7573   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":7492:7571   */\n      tag_641\n      tag_484\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":7454:7573   */\n    tag_640:\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7637:7690   */\n      tag_642\n        /* \"#utility.yul\":7682:7689   */\n      dup5\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7662:7671   */\n      dup6\n        /* \"#utility.yul\":7658:7680   */\n      add\n        /* \"#utility.yul\":7637:7690   */\n      tag_494\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":7627:7690   */\n      swap2\n      pop\n        /* \"#utility.yul\":7583:7700   */\n      pop\n        /* \"#utility.yul\":7378:7707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:7817   */\n    tag_511:\n        /* \"#utility.yul\":7758:7765   */\n      0x00\n        /* \"#utility.yul\":7787:7811   */\n      tag_644\n        /* \"#utility.yul\":7805:7810   */\n      dup3\n        /* \"#utility.yul\":7787:7811   */\n      tag_491\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":7776:7811   */\n      swap1\n      pop\n        /* \"#utility.yul\":7713:7817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7823:7965   */\n    tag_512:\n        /* \"#utility.yul\":7926:7958   */\n      tag_646\n        /* \"#utility.yul\":7952:7957   */\n      dup2\n        /* \"#utility.yul\":7926:7958   */\n      tag_511\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":7921:7924   */\n      dup3\n        /* \"#utility.yul\":7914:7959   */\n      mstore\n        /* \"#utility.yul\":7823:7965   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7971:8225   */\n    tag_133:\n        /* \"#utility.yul\":8080:8084   */\n      0x00\n        /* \"#utility.yul\":8118:8120   */\n      0x20\n        /* \"#utility.yul\":8107:8116   */\n      dup3\n        /* \"#utility.yul\":8103:8121   */\n      add\n        /* \"#utility.yul\":8095:8121   */\n      swap1\n      pop\n        /* \"#utility.yul\":8131:8218   */\n      tag_648\n        /* \"#utility.yul\":8215:8216   */\n      0x00\n        /* \"#utility.yul\":8204:8213   */\n      dup4\n        /* \"#utility.yul\":8200:8217   */\n      add\n        /* \"#utility.yul\":8191:8197   */\n      dup5\n        /* \"#utility.yul\":8131:8218   */\n      tag_512\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":7971:8225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8231:8347   */\n    tag_513:\n        /* \"#utility.yul\":8301:8322   */\n      tag_650\n        /* \"#utility.yul\":8316:8321   */\n      dup2\n        /* \"#utility.yul\":8301:8322   */\n      tag_489\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":8294:8299   */\n      dup2\n        /* \"#utility.yul\":8291:8323   */\n      eq\n        /* \"#utility.yul\":8281:8341   */\n      tag_651\n      jumpi\n        /* \"#utility.yul\":8337:8338   */\n      0x00\n        /* \"#utility.yul\":8334:8335   */\n      dup1\n        /* \"#utility.yul\":8327:8339   */\n      revert\n        /* \"#utility.yul\":8281:8341   */\n    tag_651:\n        /* \"#utility.yul\":8231:8347   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8486   */\n    tag_514:\n        /* \"#utility.yul\":8396:8401   */\n      0x00\n        /* \"#utility.yul\":8434:8440   */\n      dup2\n        /* \"#utility.yul\":8421:8441   */\n      calldataload\n        /* \"#utility.yul\":8412:8441   */\n      swap1\n      pop\n        /* \"#utility.yul\":8450:8480   */\n      tag_653\n        /* \"#utility.yul\":8474:8479   */\n      dup2\n        /* \"#utility.yul\":8450:8480   */\n      tag_513\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":8353:8486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8492:8815   */\n    tag_176:\n        /* \"#utility.yul\":8548:8554   */\n      0x00\n        /* \"#utility.yul\":8597:8599   */\n      0x20\n        /* \"#utility.yul\":8585:8594   */\n      dup3\n        /* \"#utility.yul\":8576:8583   */\n      dup5\n        /* \"#utility.yul\":8572:8595   */\n      sub\n        /* \"#utility.yul\":8568:8600   */\n      slt\n        /* \"#utility.yul\":8565:8684   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":8603:8682   */\n      tag_656\n      tag_484\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":8565:8684   */\n    tag_655:\n        /* \"#utility.yul\":8723:8724   */\n      0x00\n        /* \"#utility.yul\":8748:8798   */\n      tag_657\n        /* \"#utility.yul\":8790:8797   */\n      dup5\n        /* \"#utility.yul\":8781:8787   */\n      dup3\n        /* \"#utility.yul\":8770:8779   */\n      dup6\n        /* \"#utility.yul\":8766:8788   */\n      add\n        /* \"#utility.yul\":8748:8798   */\n      tag_514\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":8738:8798   */\n      swap2\n      pop\n        /* \"#utility.yul\":8694:8808   */\n      pop\n        /* \"#utility.yul\":8492:8815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8821:9295   */\n    tag_190:\n        /* \"#utility.yul\":8889:8895   */\n      0x00\n        /* \"#utility.yul\":8897:8903   */\n      dup1\n        /* \"#utility.yul\":8946:8948   */\n      0x40\n        /* \"#utility.yul\":8934:8943   */\n      dup4\n        /* \"#utility.yul\":8925:8932   */\n      dup6\n        /* \"#utility.yul\":8921:8944   */\n      sub\n        /* \"#utility.yul\":8917:8949   */\n      slt\n        /* \"#utility.yul\":8914:9033   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":8952:9031   */\n      tag_660\n      tag_484\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":8914:9033   */\n    tag_659:\n        /* \"#utility.yul\":9072:9073   */\n      0x00\n        /* \"#utility.yul\":9097:9150   */\n      tag_661\n        /* \"#utility.yul\":9142:9149   */\n      dup6\n        /* \"#utility.yul\":9133:9139   */\n      dup3\n        /* \"#utility.yul\":9122:9131   */\n      dup7\n        /* \"#utility.yul\":9118:9140   */\n      add\n        /* \"#utility.yul\":9097:9150   */\n      tag_494\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":9087:9150   */\n      swap3\n      pop\n        /* \"#utility.yul\":9043:9160   */\n      pop\n        /* \"#utility.yul\":9199:9201   */\n      0x20\n        /* \"#utility.yul\":9225:9278   */\n      tag_662\n        /* \"#utility.yul\":9270:9277   */\n      dup6\n        /* \"#utility.yul\":9261:9267   */\n      dup3\n        /* \"#utility.yul\":9250:9259   */\n      dup7\n        /* \"#utility.yul\":9246:9268   */\n      add\n        /* \"#utility.yul\":9225:9278   */\n      tag_494\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":9215:9278   */\n      swap2\n      pop\n        /* \"#utility.yul\":9170:9288   */\n      pop\n        /* \"#utility.yul\":8821:9295   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9301:9415   */\n    tag_515:\n        /* \"#utility.yul\":9368:9374   */\n      0x00\n        /* \"#utility.yul\":9402:9407   */\n      dup2\n        /* \"#utility.yul\":9396:9408   */\n      mload\n        /* \"#utility.yul\":9386:9408   */\n      swap1\n      pop\n        /* \"#utility.yul\":9301:9415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9421:9605   */\n    tag_516:\n        /* \"#utility.yul\":9520:9531   */\n      0x00\n        /* \"#utility.yul\":9554:9560   */\n      dup3\n        /* \"#utility.yul\":9549:9552   */\n      dup3\n        /* \"#utility.yul\":9542:9561   */\n      mstore\n        /* \"#utility.yul\":9594:9598   */\n      0x20\n        /* \"#utility.yul\":9589:9592   */\n      dup3\n        /* \"#utility.yul\":9585:9599   */\n      add\n        /* \"#utility.yul\":9570:9599   */\n      swap1\n      pop\n        /* \"#utility.yul\":9421:9605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9611:9743   */\n    tag_517:\n        /* \"#utility.yul\":9678:9682   */\n      0x00\n        /* \"#utility.yul\":9701:9704   */\n      dup2\n        /* \"#utility.yul\":9693:9704   */\n      swap1\n      pop\n        /* \"#utility.yul\":9731:9735   */\n      0x20\n        /* \"#utility.yul\":9726:9729   */\n      dup3\n        /* \"#utility.yul\":9722:9736   */\n      add\n        /* \"#utility.yul\":9714:9736   */\n      swap1\n      pop\n        /* \"#utility.yul\":9611:9743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9749:9857   */\n    tag_518:\n        /* \"#utility.yul\":9826:9850   */\n      tag_667\n        /* \"#utility.yul\":9844:9849   */\n      dup2\n        /* \"#utility.yul\":9826:9850   */\n      tag_492\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":9821:9824   */\n      dup3\n        /* \"#utility.yul\":9814:9851   */\n      mstore\n        /* \"#utility.yul\":9749:9857   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9863:10042   */\n    tag_519:\n        /* \"#utility.yul\":9932:9942   */\n      0x00\n        /* \"#utility.yul\":9953:9999   */\n      tag_669\n        /* \"#utility.yul\":9995:9998   */\n      dup4\n        /* \"#utility.yul\":9987:9993   */\n      dup4\n        /* \"#utility.yul\":9953:9999   */\n      tag_518\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":10031:10035   */\n      0x20\n        /* \"#utility.yul\":10026:10029   */\n      dup4\n        /* \"#utility.yul\":10022:10036   */\n      add\n        /* \"#utility.yul\":10008:10036   */\n      swap1\n      pop\n        /* \"#utility.yul\":9863:10042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10048:10161   */\n    tag_520:\n        /* \"#utility.yul\":10118:10122   */\n      0x00\n        /* \"#utility.yul\":10150:10154   */\n      0x20\n        /* \"#utility.yul\":10145:10148   */\n      dup3\n        /* \"#utility.yul\":10141:10155   */\n      add\n        /* \"#utility.yul\":10133:10155   */\n      swap1\n      pop\n        /* \"#utility.yul\":10048:10161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10197:10929   */\n    tag_521:\n        /* \"#utility.yul\":10316:10319   */\n      0x00\n        /* \"#utility.yul\":10345:10399   */\n      tag_672\n        /* \"#utility.yul\":10393:10398   */\n      dup3\n        /* \"#utility.yul\":10345:10399   */\n      tag_515\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":10415:10501   */\n      tag_673\n        /* \"#utility.yul\":10494:10500   */\n      dup2\n        /* \"#utility.yul\":10489:10492   */\n      dup6\n        /* \"#utility.yul\":10415:10501   */\n      tag_516\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":10408:10501   */\n      swap4\n      pop\n        /* \"#utility.yul\":10525:10581   */\n      tag_674\n        /* \"#utility.yul\":10575:10580   */\n      dup4\n        /* \"#utility.yul\":10525:10581   */\n      tag_517\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":10604:10611   */\n      dup1\n        /* \"#utility.yul\":10635:10636   */\n      0x00\n        /* \"#utility.yul\":10620:10904   */\n    tag_675:\n        /* \"#utility.yul\":10645:10651   */\n      dup4\n        /* \"#utility.yul\":10642:10643   */\n      dup2\n        /* \"#utility.yul\":10639:10652   */\n      lt\n        /* \"#utility.yul\":10620:10904   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":10721:10727   */\n      dup2\n        /* \"#utility.yul\":10715:10728   */\n      mload\n        /* \"#utility.yul\":10748:10811   */\n      tag_678\n        /* \"#utility.yul\":10807:10810   */\n      dup9\n        /* \"#utility.yul\":10792:10805   */\n      dup3\n        /* \"#utility.yul\":10748:10811   */\n      tag_519\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":10741:10811   */\n      swap8\n      pop\n        /* \"#utility.yul\":10834:10894   */\n      tag_679\n        /* \"#utility.yul\":10887:10893   */\n      dup4\n        /* \"#utility.yul\":10834:10894   */\n      tag_520\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":10824:10894   */\n      swap3\n      pop\n        /* \"#utility.yul\":10680:10904   */\n      pop\n        /* \"#utility.yul\":10667:10668   */\n      0x01\n        /* \"#utility.yul\":10664:10665   */\n      dup2\n        /* \"#utility.yul\":10660:10669   */\n      add\n        /* \"#utility.yul\":10655:10669   */\n      swap1\n      pop\n        /* \"#utility.yul\":10620:10904   */\n      jump(tag_675)\n    tag_677:\n        /* \"#utility.yul\":10624:10638   */\n      pop\n        /* \"#utility.yul\":10920:10923   */\n      dup6\n        /* \"#utility.yul\":10913:10923   */\n      swap4\n      pop\n        /* \"#utility.yul\":10321:10929   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10197:10929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10935:11308   */\n    tag_201:\n        /* \"#utility.yul\":11078:11082   */\n      0x00\n        /* \"#utility.yul\":11116:11118   */\n      0x20\n        /* \"#utility.yul\":11105:11114   */\n      dup3\n        /* \"#utility.yul\":11101:11119   */\n      add\n        /* \"#utility.yul\":11093:11119   */\n      swap1\n      pop\n        /* \"#utility.yul\":11165:11174   */\n      dup2\n        /* \"#utility.yul\":11159:11163   */\n      dup2\n        /* \"#utility.yul\":11155:11175   */\n      sub\n        /* \"#utility.yul\":11151:11152   */\n      0x00\n        /* \"#utility.yul\":11140:11149   */\n      dup4\n        /* \"#utility.yul\":11136:11153   */\n      add\n        /* \"#utility.yul\":11129:11176   */\n      mstore\n        /* \"#utility.yul\":11193:11301   */\n      tag_681\n        /* \"#utility.yul\":11296:11300   */\n      dup2\n        /* \"#utility.yul\":11287:11293   */\n      dup5\n        /* \"#utility.yul\":11193:11301   */\n      tag_521\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":11185:11301   */\n      swap1\n      pop\n        /* \"#utility.yul\":10935:11308   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11314:11487   */\n    tag_522:\n        /* \"#utility.yul\":11454:11479   */\n      0x62757965722069732061207a65726f2061646472657373000000000000000000\n        /* \"#utility.yul\":11450:11451   */\n      0x00\n        /* \"#utility.yul\":11442:11448   */\n      dup3\n        /* \"#utility.yul\":11438:11452   */\n      add\n        /* \"#utility.yul\":11431:11480   */\n      mstore\n        /* \"#utility.yul\":11314:11487   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11493:11859   */\n    tag_523:\n        /* \"#utility.yul\":11635:11638   */\n      0x00\n        /* \"#utility.yul\":11656:11723   */\n      tag_684\n        /* \"#utility.yul\":11720:11722   */\n      0x17\n        /* \"#utility.yul\":11715:11718   */\n      dup4\n        /* \"#utility.yul\":11656:11723   */\n      tag_499\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":11649:11723   */\n      swap2\n      pop\n        /* \"#utility.yul\":11732:11825   */\n      tag_685\n        /* \"#utility.yul\":11821:11824   */\n      dup3\n        /* \"#utility.yul\":11732:11825   */\n      tag_522\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":11850:11852   */\n      0x20\n        /* \"#utility.yul\":11845:11848   */\n      dup3\n        /* \"#utility.yul\":11841:11853   */\n      add\n        /* \"#utility.yul\":11834:11853   */\n      swap1\n      pop\n        /* \"#utility.yul\":11493:11859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11865:12284   */\n    tag_227:\n        /* \"#utility.yul\":12031:12035   */\n      0x00\n        /* \"#utility.yul\":12069:12071   */\n      0x20\n        /* \"#utility.yul\":12058:12067   */\n      dup3\n        /* \"#utility.yul\":12054:12072   */\n      add\n        /* \"#utility.yul\":12046:12072   */\n      swap1\n      pop\n        /* \"#utility.yul\":12118:12127   */\n      dup2\n        /* \"#utility.yul\":12112:12116   */\n      dup2\n        /* \"#utility.yul\":12108:12128   */\n      sub\n        /* \"#utility.yul\":12104:12105   */\n      0x00\n        /* \"#utility.yul\":12093:12102   */\n      dup4\n        /* \"#utility.yul\":12089:12106   */\n      add\n        /* \"#utility.yul\":12082:12129   */\n      mstore\n        /* \"#utility.yul\":12146:12277   */\n      tag_687\n        /* \"#utility.yul\":12272:12276   */\n      dup2\n        /* \"#utility.yul\":12146:12277   */\n      tag_523\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":12138:12277   */\n      swap1\n      pop\n        /* \"#utility.yul\":11865:12284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12290:12454   */\n    tag_524:\n        /* \"#utility.yul\":12430:12446   */\n      0x776569416d6f756e742069732030000000000000000000000000000000000000\n        /* \"#utility.yul\":12426:12427   */\n      0x00\n        /* \"#utility.yul\":12418:12424   */\n      dup3\n        /* \"#utility.yul\":12414:12428   */\n      add\n        /* \"#utility.yul\":12407:12447   */\n      mstore\n        /* \"#utility.yul\":12290:12454   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12460:12826   */\n    tag_525:\n        /* \"#utility.yul\":12602:12605   */\n      0x00\n        /* \"#utility.yul\":12623:12690   */\n      tag_690\n        /* \"#utility.yul\":12687:12689   */\n      0x0e\n        /* \"#utility.yul\":12682:12685   */\n      dup4\n        /* \"#utility.yul\":12623:12690   */\n      tag_499\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":12616:12690   */\n      swap2\n      pop\n        /* \"#utility.yul\":12699:12792   */\n      tag_691\n        /* \"#utility.yul\":12788:12791   */\n      dup3\n        /* \"#utility.yul\":12699:12792   */\n      tag_524\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":12817:12819   */\n      0x20\n        /* \"#utility.yul\":12812:12815   */\n      dup3\n        /* \"#utility.yul\":12808:12820   */\n      add\n        /* \"#utility.yul\":12801:12820   */\n      swap1\n      pop\n        /* \"#utility.yul\":12460:12826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12832:13251   */\n    tag_230:\n        /* \"#utility.yul\":12998:13002   */\n      0x00\n        /* \"#utility.yul\":13036:13038   */\n      0x20\n        /* \"#utility.yul\":13025:13034   */\n      dup3\n        /* \"#utility.yul\":13021:13039   */\n      add\n        /* \"#utility.yul\":13013:13039   */\n      swap1\n      pop\n        /* \"#utility.yul\":13085:13094   */\n      dup2\n        /* \"#utility.yul\":13079:13083   */\n      dup2\n        /* \"#utility.yul\":13075:13095   */\n      sub\n        /* \"#utility.yul\":13071:13072   */\n      0x00\n        /* \"#utility.yul\":13060:13069   */\n      dup4\n        /* \"#utility.yul\":13056:13073   */\n      add\n        /* \"#utility.yul\":13049:13096   */\n      mstore\n        /* \"#utility.yul\":13113:13244   */\n      tag_693\n        /* \"#utility.yul\":13239:13243   */\n      dup2\n        /* \"#utility.yul\":13113:13244   */\n      tag_525\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":13105:13244   */\n      swap1\n      pop\n        /* \"#utility.yul\":12832:13251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13257:13437   */\n    tag_526:\n        /* \"#utility.yul\":13305:13382   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13302:13303   */\n      0x00\n        /* \"#utility.yul\":13295:13383   */\n      mstore\n        /* \"#utility.yul\":13402:13406   */\n      0x11\n        /* \"#utility.yul\":13399:13400   */\n      0x04\n        /* \"#utility.yul\":13392:13407   */\n      mstore\n        /* \"#utility.yul\":13426:13430   */\n      0x24\n        /* \"#utility.yul\":13423:13424   */\n      0x00\n        /* \"#utility.yul\":13416:13431   */\n      revert\n        /* \"#utility.yul\":13443:13853   */\n    tag_232:\n        /* \"#utility.yul\":13483:13490   */\n      0x00\n        /* \"#utility.yul\":13506:13526   */\n      tag_696\n        /* \"#utility.yul\":13524:13525   */\n      dup3\n        /* \"#utility.yul\":13506:13526   */\n      tag_495\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":13501:13526   */\n      swap2\n      pop\n        /* \"#utility.yul\":13540:13560   */\n      tag_697\n        /* \"#utility.yul\":13558:13559   */\n      dup4\n        /* \"#utility.yul\":13540:13560   */\n      tag_495\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":13535:13560   */\n      swap3\n      pop\n        /* \"#utility.yul\":13595:13596   */\n      dup3\n        /* \"#utility.yul\":13592:13593   */\n      dup3\n        /* \"#utility.yul\":13588:13597   */\n      mul\n        /* \"#utility.yul\":13617:13647   */\n      tag_698\n        /* \"#utility.yul\":13635:13646   */\n      dup2\n        /* \"#utility.yul\":13617:13647   */\n      tag_495\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":13606:13647   */\n      swap2\n      pop\n        /* \"#utility.yul\":13796:13797   */\n      dup3\n        /* \"#utility.yul\":13787:13794   */\n      dup3\n        /* \"#utility.yul\":13783:13798   */\n      div\n        /* \"#utility.yul\":13780:13781   */\n      dup5\n        /* \"#utility.yul\":13777:13799   */\n      eq\n        /* \"#utility.yul\":13757:13758   */\n      dup4\n        /* \"#utility.yul\":13750:13759   */\n      iszero\n        /* \"#utility.yul\":13730:13813   */\n      or\n        /* \"#utility.yul\":13707:13846   */\n      tag_699\n      jumpi\n        /* \"#utility.yul\":13826:13844   */\n      tag_700\n      tag_526\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":13707:13846   */\n    tag_699:\n        /* \"#utility.yul\":13491:13853   */\n      pop\n        /* \"#utility.yul\":13443:13853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13859:14039   */\n    tag_527:\n        /* \"#utility.yul\":13907:13984   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13904:13905   */\n      0x00\n        /* \"#utility.yul\":13897:13985   */\n      mstore\n        /* \"#utility.yul\":14004:14008   */\n      0x22\n        /* \"#utility.yul\":14001:14002   */\n      0x04\n        /* \"#utility.yul\":13994:14009   */\n      mstore\n        /* \"#utility.yul\":14028:14032   */\n      0x24\n        /* \"#utility.yul\":14025:14026   */\n      0x00\n        /* \"#utility.yul\":14018:14033   */\n      revert\n        /* \"#utility.yul\":14045:14365   */\n    tag_239:\n        /* \"#utility.yul\":14089:14095   */\n      0x00\n        /* \"#utility.yul\":14126:14127   */\n      0x02\n        /* \"#utility.yul\":14120:14124   */\n      dup3\n        /* \"#utility.yul\":14116:14128   */\n      div\n        /* \"#utility.yul\":14106:14128   */\n      swap1\n      pop\n        /* \"#utility.yul\":14173:14174   */\n      0x01\n        /* \"#utility.yul\":14167:14171   */\n      dup3\n        /* \"#utility.yul\":14163:14175   */\n      and\n        /* \"#utility.yul\":14194:14212   */\n      dup1\n        /* \"#utility.yul\":14184:14265   */\n      tag_703\n      jumpi\n        /* \"#utility.yul\":14250:14254   */\n      0x7f\n        /* \"#utility.yul\":14242:14248   */\n      dup3\n        /* \"#utility.yul\":14238:14255   */\n      and\n        /* \"#utility.yul\":14228:14255   */\n      swap2\n      pop\n        /* \"#utility.yul\":14184:14265   */\n    tag_703:\n        /* \"#utility.yul\":14312:14314   */\n      0x20\n        /* \"#utility.yul\":14304:14310   */\n      dup3\n        /* \"#utility.yul\":14301:14315   */\n      lt\n        /* \"#utility.yul\":14281:14299   */\n      dup2\n        /* \"#utility.yul\":14278:14316   */\n      sub\n        /* \"#utility.yul\":14275:14359   */\n      tag_704\n      jumpi\n        /* \"#utility.yul\":14331:14349   */\n      tag_705\n      tag_527\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":14275:14359   */\n    tag_704:\n        /* \"#utility.yul\":14096:14365   */\n      pop\n        /* \"#utility.yul\":14045:14365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14371:14591   */\n    tag_528:\n        /* \"#utility.yul\":14511:14545   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":14507:14508   */\n      0x00\n        /* \"#utility.yul\":14499:14505   */\n      dup3\n        /* \"#utility.yul\":14495:14509   */\n      add\n        /* \"#utility.yul\":14488:14546   */\n      mstore\n        /* \"#utility.yul\":14580:14583   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14575:14577   */\n      0x20\n        /* \"#utility.yul\":14567:14573   */\n      dup3\n        /* \"#utility.yul\":14563:14578   */\n      add\n        /* \"#utility.yul\":14556:14584   */\n      mstore\n        /* \"#utility.yul\":14371:14591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14597:14963   */\n    tag_529:\n        /* \"#utility.yul\":14739:14742   */\n      0x00\n        /* \"#utility.yul\":14760:14827   */\n      tag_708\n        /* \"#utility.yul\":14824:14826   */\n      0x21\n        /* \"#utility.yul\":14819:14822   */\n      dup4\n        /* \"#utility.yul\":14760:14827   */\n      tag_499\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":14753:14827   */\n      swap2\n      pop\n        /* \"#utility.yul\":14836:14929   */\n      tag_709\n        /* \"#utility.yul\":14925:14928   */\n      dup3\n        /* \"#utility.yul\":14836:14929   */\n      tag_528\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":14954:14956   */\n      0x40\n        /* \"#utility.yul\":14949:14952   */\n      dup3\n        /* \"#utility.yul\":14945:14957   */\n      add\n        /* \"#utility.yul\":14938:14957   */\n      swap1\n      pop\n        /* \"#utility.yul\":14597:14963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14969:15388   */\n    tag_263:\n        /* \"#utility.yul\":15135:15139   */\n      0x00\n        /* \"#utility.yul\":15173:15175   */\n      0x20\n        /* \"#utility.yul\":15162:15171   */\n      dup3\n        /* \"#utility.yul\":15158:15176   */\n      add\n        /* \"#utility.yul\":15150:15176   */\n      swap1\n      pop\n        /* \"#utility.yul\":15222:15231   */\n      dup2\n        /* \"#utility.yul\":15216:15220   */\n      dup2\n        /* \"#utility.yul\":15212:15232   */\n      sub\n        /* \"#utility.yul\":15208:15209   */\n      0x00\n        /* \"#utility.yul\":15197:15206   */\n      dup4\n        /* \"#utility.yul\":15193:15210   */\n      add\n        /* \"#utility.yul\":15186:15233   */\n      mstore\n        /* \"#utility.yul\":15250:15381   */\n      tag_711\n        /* \"#utility.yul\":15376:15380   */\n      dup2\n        /* \"#utility.yul\":15250:15381   */\n      tag_529\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":15242:15381   */\n      swap1\n      pop\n        /* \"#utility.yul\":14969:15388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15394:15618   */\n    tag_530:\n        /* \"#utility.yul\":15534:15568   */\n      0x4f6e6c7920746865204f776e65722063616e2063616c6c20746869732066756e\n        /* \"#utility.yul\":15530:15531   */\n      0x00\n        /* \"#utility.yul\":15522:15528   */\n      dup3\n        /* \"#utility.yul\":15518:15532   */\n      add\n        /* \"#utility.yul\":15511:15569   */\n      mstore\n        /* \"#utility.yul\":15603:15610   */\n      0x6374696f6e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15598:15600   */\n      0x20\n        /* \"#utility.yul\":15590:15596   */\n      dup3\n        /* \"#utility.yul\":15586:15601   */\n      add\n        /* \"#utility.yul\":15579:15611   */\n      mstore\n        /* \"#utility.yul\":15394:15618   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15624:15990   */\n    tag_531:\n        /* \"#utility.yul\":15766:15769   */\n      0x00\n        /* \"#utility.yul\":15787:15854   */\n      tag_714\n        /* \"#utility.yul\":15851:15853   */\n      0x25\n        /* \"#utility.yul\":15846:15849   */\n      dup4\n        /* \"#utility.yul\":15787:15854   */\n      tag_499\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":15780:15854   */\n      swap2\n      pop\n        /* \"#utility.yul\":15863:15956   */\n      tag_715\n        /* \"#utility.yul\":15952:15955   */\n      dup3\n        /* \"#utility.yul\":15863:15956   */\n      tag_530\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":15981:15983   */\n      0x40\n        /* \"#utility.yul\":15976:15979   */\n      dup3\n        /* \"#utility.yul\":15972:15984   */\n      add\n        /* \"#utility.yul\":15965:15984   */\n      swap1\n      pop\n        /* \"#utility.yul\":15624:15990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15996:16415   */\n    tag_296:\n        /* \"#utility.yul\":16162:16166   */\n      0x00\n        /* \"#utility.yul\":16200:16202   */\n      0x20\n        /* \"#utility.yul\":16189:16198   */\n      dup3\n        /* \"#utility.yul\":16185:16203   */\n      add\n        /* \"#utility.yul\":16177:16203   */\n      swap1\n      pop\n        /* \"#utility.yul\":16249:16258   */\n      dup2\n        /* \"#utility.yul\":16243:16247   */\n      dup2\n        /* \"#utility.yul\":16239:16259   */\n      sub\n        /* \"#utility.yul\":16235:16236   */\n      0x00\n        /* \"#utility.yul\":16224:16233   */\n      dup4\n        /* \"#utility.yul\":16220:16237   */\n      add\n        /* \"#utility.yul\":16213:16260   */\n      mstore\n        /* \"#utility.yul\":16277:16408   */\n      tag_717\n        /* \"#utility.yul\":16403:16407   */\n      dup2\n        /* \"#utility.yul\":16277:16408   */\n      tag_531\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":16269:16408   */\n      swap1\n      pop\n        /* \"#utility.yul\":15996:16415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16421:16588   */\n    tag_532:\n        /* \"#utility.yul\":16561:16580   */\n      0x55736572206973206e6f74204b59436564000000000000000000000000000000\n        /* \"#utility.yul\":16557:16558   */\n      0x00\n        /* \"#utility.yul\":16549:16555   */\n      dup3\n        /* \"#utility.yul\":16545:16559   */\n      add\n        /* \"#utility.yul\":16538:16581   */\n      mstore\n        /* \"#utility.yul\":16421:16588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16594:16960   */\n    tag_533:\n        /* \"#utility.yul\":16736:16739   */\n      0x00\n        /* \"#utility.yul\":16757:16824   */\n      tag_720\n        /* \"#utility.yul\":16821:16823   */\n      0x11\n        /* \"#utility.yul\":16816:16819   */\n      dup4\n        /* \"#utility.yul\":16757:16824   */\n      tag_499\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":16750:16824   */\n      swap2\n      pop\n        /* \"#utility.yul\":16833:16926   */\n      tag_721\n        /* \"#utility.yul\":16922:16925   */\n      dup3\n        /* \"#utility.yul\":16833:16926   */\n      tag_532\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":16951:16953   */\n      0x20\n        /* \"#utility.yul\":16946:16949   */\n      dup3\n        /* \"#utility.yul\":16942:16954   */\n      add\n        /* \"#utility.yul\":16935:16954   */\n      swap1\n      pop\n        /* \"#utility.yul\":16594:16960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16966:17385   */\n    tag_332:\n        /* \"#utility.yul\":17132:17136   */\n      0x00\n        /* \"#utility.yul\":17170:17172   */\n      0x20\n        /* \"#utility.yul\":17159:17168   */\n      dup3\n        /* \"#utility.yul\":17155:17173   */\n      add\n        /* \"#utility.yul\":17147:17173   */\n      swap1\n      pop\n        /* \"#utility.yul\":17219:17228   */\n      dup2\n        /* \"#utility.yul\":17213:17217   */\n      dup2\n        /* \"#utility.yul\":17209:17229   */\n      sub\n        /* \"#utility.yul\":17205:17206   */\n      0x00\n        /* \"#utility.yul\":17194:17203   */\n      dup4\n        /* \"#utility.yul\":17190:17207   */\n      add\n        /* \"#utility.yul\":17183:17230   */\n      mstore\n        /* \"#utility.yul\":17247:17378   */\n      tag_723\n        /* \"#utility.yul\":17373:17377   */\n      dup2\n        /* \"#utility.yul\":17247:17378   */\n      tag_533\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":17239:17378   */\n      swap1\n      pop\n        /* \"#utility.yul\":16966:17385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17391:17623   */\n    tag_534:\n        /* \"#utility.yul\":17531:17565   */\n      0x55736572206f776e7320746f6b656e732c2063616e6e6f742072656d6f766520\n        /* \"#utility.yul\":17527:17528   */\n      0x00\n        /* \"#utility.yul\":17519:17525   */\n      dup3\n        /* \"#utility.yul\":17515:17529   */\n      add\n        /* \"#utility.yul\":17508:17566   */\n      mstore\n        /* \"#utility.yul\":17600:17615   */\n      0x66726f6d204b5943206c69737400000000000000000000000000000000000000\n        /* \"#utility.yul\":17595:17597   */\n      0x20\n        /* \"#utility.yul\":17587:17593   */\n      dup3\n        /* \"#utility.yul\":17583:17598   */\n      add\n        /* \"#utility.yul\":17576:17616   */\n      mstore\n        /* \"#utility.yul\":17391:17623   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17629:17995   */\n    tag_535:\n        /* \"#utility.yul\":17771:17774   */\n      0x00\n        /* \"#utility.yul\":17792:17859   */\n      tag_726\n        /* \"#utility.yul\":17856:17858   */\n      0x2d\n        /* \"#utility.yul\":17851:17854   */\n      dup4\n        /* \"#utility.yul\":17792:17859   */\n      tag_499\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":17785:17859   */\n      swap2\n      pop\n        /* \"#utility.yul\":17868:17961   */\n      tag_727\n        /* \"#utility.yul\":17957:17960   */\n      dup3\n        /* \"#utility.yul\":17868:17961   */\n      tag_534\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":17986:17988   */\n      0x40\n        /* \"#utility.yul\":17981:17984   */\n      dup3\n        /* \"#utility.yul\":17977:17989   */\n      add\n        /* \"#utility.yul\":17970:17989   */\n      swap1\n      pop\n        /* \"#utility.yul\":17629:17995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18001:18420   */\n    tag_335:\n        /* \"#utility.yul\":18167:18171   */\n      0x00\n        /* \"#utility.yul\":18205:18207   */\n      0x20\n        /* \"#utility.yul\":18194:18203   */\n      dup3\n        /* \"#utility.yul\":18190:18208   */\n      add\n        /* \"#utility.yul\":18182:18208   */\n      swap1\n      pop\n        /* \"#utility.yul\":18254:18263   */\n      dup2\n        /* \"#utility.yul\":18248:18252   */\n      dup2\n        /* \"#utility.yul\":18244:18264   */\n      sub\n        /* \"#utility.yul\":18240:18241   */\n      0x00\n        /* \"#utility.yul\":18229:18238   */\n      dup4\n        /* \"#utility.yul\":18225:18242   */\n      add\n        /* \"#utility.yul\":18218:18265   */\n      mstore\n        /* \"#utility.yul\":18282:18413   */\n      tag_729\n        /* \"#utility.yul\":18408:18412   */\n      dup2\n        /* \"#utility.yul\":18282:18413   */\n      tag_535\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":18274:18413   */\n      swap1\n      pop\n        /* \"#utility.yul\":18001:18420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18426:18606   */\n    tag_339:\n        /* \"#utility.yul\":18474:18551   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18471:18472   */\n      0x00\n        /* \"#utility.yul\":18464:18552   */\n      mstore\n        /* \"#utility.yul\":18571:18575   */\n      0x32\n        /* \"#utility.yul\":18568:18569   */\n      0x04\n        /* \"#utility.yul\":18561:18576   */\n      mstore\n        /* \"#utility.yul\":18595:18599   */\n      0x24\n        /* \"#utility.yul\":18592:18593   */\n      0x00\n        /* \"#utility.yul\":18585:18600   */\n      revert\n        /* \"#utility.yul\":18612:18788   */\n    tag_536:\n        /* \"#utility.yul\":18752:18780   */\n      0x55736572206e6f7420666f756e6420696e204b5943206c697374000000000000\n        /* \"#utility.yul\":18748:18749   */\n      0x00\n        /* \"#utility.yul\":18740:18746   */\n      dup3\n        /* \"#utility.yul\":18736:18750   */\n      add\n        /* \"#utility.yul\":18729:18781   */\n      mstore\n        /* \"#utility.yul\":18612:18788   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18794:19160   */\n    tag_537:\n        /* \"#utility.yul\":18936:18939   */\n      0x00\n        /* \"#utility.yul\":18957:19024   */\n      tag_733\n        /* \"#utility.yul\":19021:19023   */\n      0x1a\n        /* \"#utility.yul\":19016:19019   */\n      dup4\n        /* \"#utility.yul\":18957:19024   */\n      tag_499\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":18950:19024   */\n      swap2\n      pop\n        /* \"#utility.yul\":19033:19126   */\n      tag_734\n        /* \"#utility.yul\":19122:19125   */\n      dup3\n        /* \"#utility.yul\":19033:19126   */\n      tag_536\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":19151:19153   */\n      0x20\n        /* \"#utility.yul\":19146:19149   */\n      dup3\n        /* \"#utility.yul\":19142:19154   */\n      add\n        /* \"#utility.yul\":19135:19154   */\n      swap1\n      pop\n        /* \"#utility.yul\":18794:19160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19166:19585   */\n    tag_343:\n        /* \"#utility.yul\":19332:19336   */\n      0x00\n        /* \"#utility.yul\":19370:19372   */\n      0x20\n        /* \"#utility.yul\":19359:19368   */\n      dup3\n        /* \"#utility.yul\":19355:19373   */\n      add\n        /* \"#utility.yul\":19347:19373   */\n      swap1\n      pop\n        /* \"#utility.yul\":19419:19428   */\n      dup2\n        /* \"#utility.yul\":19413:19417   */\n      dup2\n        /* \"#utility.yul\":19409:19429   */\n      sub\n        /* \"#utility.yul\":19405:19406   */\n      0x00\n        /* \"#utility.yul\":19394:19403   */\n      dup4\n        /* \"#utility.yul\":19390:19407   */\n      add\n        /* \"#utility.yul\":19383:19430   */\n      mstore\n        /* \"#utility.yul\":19447:19578   */\n      tag_736\n        /* \"#utility.yul\":19573:19577   */\n      dup2\n        /* \"#utility.yul\":19447:19578   */\n      tag_537\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":19439:19578   */\n      swap1\n      pop\n        /* \"#utility.yul\":19166:19585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19591:19785   */\n    tag_345:\n        /* \"#utility.yul\":19631:19635   */\n      0x00\n        /* \"#utility.yul\":19651:19671   */\n      tag_738\n        /* \"#utility.yul\":19669:19670   */\n      dup3\n        /* \"#utility.yul\":19651:19671   */\n      tag_495\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":19646:19671   */\n      swap2\n      pop\n        /* \"#utility.yul\":19685:19705   */\n      tag_739\n        /* \"#utility.yul\":19703:19704   */\n      dup4\n        /* \"#utility.yul\":19685:19705   */\n      tag_495\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":19680:19705   */\n      swap3\n      pop\n        /* \"#utility.yul\":19729:19730   */\n      dup3\n        /* \"#utility.yul\":19726:19727   */\n      dup3\n        /* \"#utility.yul\":19722:19731   */\n      sub\n        /* \"#utility.yul\":19714:19731   */\n      swap1\n      pop\n        /* \"#utility.yul\":19753:19754   */\n      dup2\n        /* \"#utility.yul\":19747:19751   */\n      dup2\n        /* \"#utility.yul\":19744:19755   */\n      gt\n        /* \"#utility.yul\":19741:19778   */\n      iszero\n      tag_740\n      jumpi\n        /* \"#utility.yul\":19758:19776   */\n      tag_741\n      tag_526\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":19741:19778   */\n    tag_740:\n        /* \"#utility.yul\":19591:19785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19791:19971   */\n    tag_358:\n        /* \"#utility.yul\":19839:19916   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19836:19837   */\n      0x00\n        /* \"#utility.yul\":19829:19917   */\n      mstore\n        /* \"#utility.yul\":19936:19940   */\n      0x31\n        /* \"#utility.yul\":19933:19934   */\n      0x04\n        /* \"#utility.yul\":19926:19941   */\n      mstore\n        /* \"#utility.yul\":19960:19964   */\n      0x24\n        /* \"#utility.yul\":19957:19958   */\n      0x00\n        /* \"#utility.yul\":19950:19965   */\n      revert\n        /* \"#utility.yul\":19977:20153   */\n    tag_538:\n        /* \"#utility.yul\":20117:20145   */\n      0x496e76616c6964206e6577206f776e657220616464726573732e000000000000\n        /* \"#utility.yul\":20113:20114   */\n      0x00\n        /* \"#utility.yul\":20105:20111   */\n      dup3\n        /* \"#utility.yul\":20101:20115   */\n      add\n        /* \"#utility.yul\":20094:20146   */\n      mstore\n        /* \"#utility.yul\":19977:20153   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20159:20525   */\n    tag_539:\n        /* \"#utility.yul\":20301:20304   */\n      0x00\n        /* \"#utility.yul\":20322:20389   */\n      tag_745\n        /* \"#utility.yul\":20386:20388   */\n      0x1a\n        /* \"#utility.yul\":20381:20384   */\n      dup4\n        /* \"#utility.yul\":20322:20389   */\n      tag_499\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":20315:20389   */\n      swap2\n      pop\n        /* \"#utility.yul\":20398:20491   */\n      tag_746\n        /* \"#utility.yul\":20487:20490   */\n      dup3\n        /* \"#utility.yul\":20398:20491   */\n      tag_538\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":20516:20518   */\n      0x20\n        /* \"#utility.yul\":20511:20514   */\n      dup3\n        /* \"#utility.yul\":20507:20519   */\n      add\n        /* \"#utility.yul\":20500:20519   */\n      swap1\n      pop\n        /* \"#utility.yul\":20159:20525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20531:20950   */\n    tag_370:\n        /* \"#utility.yul\":20697:20701   */\n      0x00\n        /* \"#utility.yul\":20735:20737   */\n      0x20\n        /* \"#utility.yul\":20724:20733   */\n      dup3\n        /* \"#utility.yul\":20720:20738   */\n      add\n        /* \"#utility.yul\":20712:20738   */\n      swap1\n      pop\n        /* \"#utility.yul\":20784:20793   */\n      dup2\n        /* \"#utility.yul\":20778:20782   */\n      dup2\n        /* \"#utility.yul\":20774:20794   */\n      sub\n        /* \"#utility.yul\":20770:20771   */\n      0x00\n        /* \"#utility.yul\":20759:20768   */\n      dup4\n        /* \"#utility.yul\":20755:20772   */\n      add\n        /* \"#utility.yul\":20748:20795   */\n      mstore\n        /* \"#utility.yul\":20812:20943   */\n      tag_748\n        /* \"#utility.yul\":20938:20942   */\n      dup2\n        /* \"#utility.yul\":20812:20943   */\n      tag_539\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":20804:20943   */\n      swap1\n      pop\n        /* \"#utility.yul\":20531:20950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20956:21121   */\n    tag_540:\n        /* \"#utility.yul\":21096:21113   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":21092:21093   */\n      0x00\n        /* \"#utility.yul\":21084:21090   */\n      dup3\n        /* \"#utility.yul\":21080:21094   */\n      add\n        /* \"#utility.yul\":21073:21114   */\n      mstore\n        /* \"#utility.yul\":20956:21121   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21127:21493   */\n    tag_541:\n        /* \"#utility.yul\":21269:21272   */\n      0x00\n        /* \"#utility.yul\":21290:21357   */\n      tag_751\n        /* \"#utility.yul\":21354:21356   */\n      0x0f\n        /* \"#utility.yul\":21349:21352   */\n      dup4\n        /* \"#utility.yul\":21290:21357   */\n      tag_499\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":21283:21357   */\n      swap2\n      pop\n        /* \"#utility.yul\":21366:21459   */\n      tag_752\n        /* \"#utility.yul\":21455:21458   */\n      dup3\n        /* \"#utility.yul\":21366:21459   */\n      tag_540\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":21484:21486   */\n      0x20\n        /* \"#utility.yul\":21479:21482   */\n      dup3\n        /* \"#utility.yul\":21475:21487   */\n      add\n        /* \"#utility.yul\":21468:21487   */\n      swap1\n      pop\n        /* \"#utility.yul\":21127:21493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21499:21918   */\n    tag_378:\n        /* \"#utility.yul\":21665:21669   */\n      0x00\n        /* \"#utility.yul\":21703:21705   */\n      0x20\n        /* \"#utility.yul\":21692:21701   */\n      dup3\n        /* \"#utility.yul\":21688:21706   */\n      add\n        /* \"#utility.yul\":21680:21706   */\n      swap1\n      pop\n        /* \"#utility.yul\":21752:21761   */\n      dup2\n        /* \"#utility.yul\":21746:21750   */\n      dup2\n        /* \"#utility.yul\":21742:21762   */\n      sub\n        /* \"#utility.yul\":21738:21739   */\n      0x00\n        /* \"#utility.yul\":21727:21736   */\n      dup4\n        /* \"#utility.yul\":21723:21740   */\n      add\n        /* \"#utility.yul\":21716:21763   */\n      mstore\n        /* \"#utility.yul\":21780:21911   */\n      tag_754\n        /* \"#utility.yul\":21906:21910   */\n      dup2\n        /* \"#utility.yul\":21780:21911   */\n      tag_541\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":21772:21911   */\n      swap1\n      pop\n        /* \"#utility.yul\":21499:21918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21924:22095   */\n    tag_542:\n        /* \"#utility.yul\":22064:22087   */\n      0x5573657220697320616c7265616479204b594365640000000000000000000000\n        /* \"#utility.yul\":22060:22061   */\n      0x00\n        /* \"#utility.yul\":22052:22058   */\n      dup3\n        /* \"#utility.yul\":22048:22062   */\n      add\n        /* \"#utility.yul\":22041:22088   */\n      mstore\n        /* \"#utility.yul\":21924:22095   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22101:22467   */\n    tag_543:\n        /* \"#utility.yul\":22243:22246   */\n      0x00\n        /* \"#utility.yul\":22264:22331   */\n      tag_757\n        /* \"#utility.yul\":22328:22330   */\n      0x15\n        /* \"#utility.yul\":22323:22326   */\n      dup4\n        /* \"#utility.yul\":22264:22331   */\n      tag_499\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":22257:22331   */\n      swap2\n      pop\n        /* \"#utility.yul\":22340:22433   */\n      tag_758\n        /* \"#utility.yul\":22429:22432   */\n      dup3\n        /* \"#utility.yul\":22340:22433   */\n      tag_542\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":22458:22460   */\n      0x20\n        /* \"#utility.yul\":22453:22456   */\n      dup3\n        /* \"#utility.yul\":22449:22461   */\n      add\n        /* \"#utility.yul\":22442:22461   */\n      swap1\n      pop\n        /* \"#utility.yul\":22101:22467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22473:22892   */\n    tag_381:\n        /* \"#utility.yul\":22639:22643   */\n      0x00\n        /* \"#utility.yul\":22677:22679   */\n      0x20\n        /* \"#utility.yul\":22666:22675   */\n      dup3\n        /* \"#utility.yul\":22662:22680   */\n      add\n        /* \"#utility.yul\":22654:22680   */\n      swap1\n      pop\n        /* \"#utility.yul\":22726:22735   */\n      dup2\n        /* \"#utility.yul\":22720:22724   */\n      dup2\n        /* \"#utility.yul\":22716:22736   */\n      sub\n        /* \"#utility.yul\":22712:22713   */\n      0x00\n        /* \"#utility.yul\":22701:22710   */\n      dup4\n        /* \"#utility.yul\":22697:22714   */\n      add\n        /* \"#utility.yul\":22690:22737   */\n      mstore\n        /* \"#utility.yul\":22754:22885   */\n      tag_760\n        /* \"#utility.yul\":22880:22884   */\n      dup2\n        /* \"#utility.yul\":22754:22885   */\n      tag_543\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":22746:22885   */\n      swap1\n      pop\n        /* \"#utility.yul\":22473:22892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22898:23079   */\n    tag_544:\n        /* \"#utility.yul\":23038:23071   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":23034:23035   */\n      0x00\n        /* \"#utility.yul\":23026:23032   */\n      dup3\n        /* \"#utility.yul\":23022:23036   */\n      add\n        /* \"#utility.yul\":23015:23072   */\n      mstore\n        /* \"#utility.yul\":22898:23079   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23085:23451   */\n    tag_545:\n        /* \"#utility.yul\":23227:23230   */\n      0x00\n        /* \"#utility.yul\":23248:23315   */\n      tag_763\n        /* \"#utility.yul\":23312:23314   */\n      0x1f\n        /* \"#utility.yul\":23307:23310   */\n      dup4\n        /* \"#utility.yul\":23248:23315   */\n      tag_499\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":23241:23315   */\n      swap2\n      pop\n        /* \"#utility.yul\":23324:23417   */\n      tag_764\n        /* \"#utility.yul\":23413:23416   */\n      dup3\n        /* \"#utility.yul\":23324:23417   */\n      tag_544\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":23442:23444   */\n      0x20\n        /* \"#utility.yul\":23437:23440   */\n      dup3\n        /* \"#utility.yul\":23433:23445   */\n      add\n        /* \"#utility.yul\":23426:23445   */\n      swap1\n      pop\n        /* \"#utility.yul\":23085:23451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23457:23876   */\n    tag_393:\n        /* \"#utility.yul\":23623:23627   */\n      0x00\n        /* \"#utility.yul\":23661:23663   */\n      0x20\n        /* \"#utility.yul\":23650:23659   */\n      dup3\n        /* \"#utility.yul\":23646:23664   */\n      add\n        /* \"#utility.yul\":23638:23664   */\n      swap1\n      pop\n        /* \"#utility.yul\":23710:23719   */\n      dup2\n        /* \"#utility.yul\":23704:23708   */\n      dup2\n        /* \"#utility.yul\":23700:23720   */\n      sub\n        /* \"#utility.yul\":23696:23697   */\n      0x00\n        /* \"#utility.yul\":23685:23694   */\n      dup4\n        /* \"#utility.yul\":23681:23698   */\n      add\n        /* \"#utility.yul\":23674:23721   */\n      mstore\n        /* \"#utility.yul\":23738:23869   */\n      tag_766\n        /* \"#utility.yul\":23864:23868   */\n      dup2\n        /* \"#utility.yul\":23738:23869   */\n      tag_545\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":23730:23869   */\n      swap1\n      pop\n        /* \"#utility.yul\":23457:23876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23882:24182   */\n    tag_546:\n        /* \"#utility.yul\":24022:24056   */\n      0x4469766964656e6420506572696f64206973206f6e676f696e672c20616c6c20\n        /* \"#utility.yul\":24018:24019   */\n      0x00\n        /* \"#utility.yul\":24010:24016   */\n      dup3\n        /* \"#utility.yul\":24006:24020   */\n      add\n        /* \"#utility.yul\":23999:24057   */\n      mstore\n        /* \"#utility.yul\":24091:24125   */\n      0x7472616e73666572732077696c6c20726573756d652061667465722064697669\n        /* \"#utility.yul\":24086:24088   */\n      0x20\n        /* \"#utility.yul\":24078:24084   */\n      dup3\n        /* \"#utility.yul\":24074:24089   */\n      add\n        /* \"#utility.yul\":24067:24126   */\n      mstore\n        /* \"#utility.yul\":24160:24174   */\n      0x64656e6420706572696f642e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":24155:24157   */\n      0x40\n        /* \"#utility.yul\":24147:24153   */\n      dup3\n        /* \"#utility.yul\":24143:24158   */\n      add\n        /* \"#utility.yul\":24136:24175   */\n      mstore\n        /* \"#utility.yul\":23882:24182   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24188:24554   */\n    tag_547:\n        /* \"#utility.yul\":24330:24333   */\n      0x00\n        /* \"#utility.yul\":24351:24418   */\n      tag_769\n        /* \"#utility.yul\":24415:24417   */\n      0x4c\n        /* \"#utility.yul\":24410:24413   */\n      dup4\n        /* \"#utility.yul\":24351:24418   */\n      tag_499\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":24344:24418   */\n      swap2\n      pop\n        /* \"#utility.yul\":24427:24520   */\n      tag_770\n        /* \"#utility.yul\":24516:24519   */\n      dup3\n        /* \"#utility.yul\":24427:24520   */\n      tag_546\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":24545:24547   */\n      0x60\n        /* \"#utility.yul\":24540:24543   */\n      dup3\n        /* \"#utility.yul\":24536:24548   */\n      add\n        /* \"#utility.yul\":24529:24548   */\n      swap1\n      pop\n        /* \"#utility.yul\":24188:24554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24560:24979   */\n    tag_407:\n        /* \"#utility.yul\":24726:24730   */\n      0x00\n        /* \"#utility.yul\":24764:24766   */\n      0x20\n        /* \"#utility.yul\":24753:24762   */\n      dup3\n        /* \"#utility.yul\":24749:24767   */\n      add\n        /* \"#utility.yul\":24741:24767   */\n      swap1\n      pop\n        /* \"#utility.yul\":24813:24822   */\n      dup2\n        /* \"#utility.yul\":24807:24811   */\n      dup2\n        /* \"#utility.yul\":24803:24823   */\n      sub\n        /* \"#utility.yul\":24799:24800   */\n      0x00\n        /* \"#utility.yul\":24788:24797   */\n      dup4\n        /* \"#utility.yul\":24784:24801   */\n      add\n        /* \"#utility.yul\":24777:24824   */\n      mstore\n        /* \"#utility.yul\":24841:24972   */\n      tag_772\n        /* \"#utility.yul\":24967:24971   */\n      dup2\n        /* \"#utility.yul\":24841:24972   */\n      tag_547\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":24833:24972   */\n      swap1\n      pop\n        /* \"#utility.yul\":24560:24979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24985:25154   */\n    tag_548:\n        /* \"#utility.yul\":25125:25146   */\n      0x53656e646572206973206e6f74204b5943656400000000000000000000000000\n        /* \"#utility.yul\":25121:25122   */\n      0x00\n        /* \"#utility.yul\":25113:25119   */\n      dup3\n        /* \"#utility.yul\":25109:25123   */\n      add\n        /* \"#utility.yul\":25102:25147   */\n      mstore\n        /* \"#utility.yul\":24985:25154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25160:25526   */\n    tag_549:\n        /* \"#utility.yul\":25302:25305   */\n      0x00\n        /* \"#utility.yul\":25323:25390   */\n      tag_775\n        /* \"#utility.yul\":25387:25389   */\n      0x13\n        /* \"#utility.yul\":25382:25385   */\n      dup4\n        /* \"#utility.yul\":25323:25390   */\n      tag_499\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":25316:25390   */\n      swap2\n      pop\n        /* \"#utility.yul\":25399:25492   */\n      tag_776\n        /* \"#utility.yul\":25488:25491   */\n      dup3\n        /* \"#utility.yul\":25399:25492   */\n      tag_548\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":25517:25519   */\n      0x20\n        /* \"#utility.yul\":25512:25515   */\n      dup3\n        /* \"#utility.yul\":25508:25520   */\n      add\n        /* \"#utility.yul\":25501:25520   */\n      swap1\n      pop\n        /* \"#utility.yul\":25160:25526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25532:25951   */\n    tag_410:\n        /* \"#utility.yul\":25698:25702   */\n      0x00\n        /* \"#utility.yul\":25736:25738   */\n      0x20\n        /* \"#utility.yul\":25725:25734   */\n      dup3\n        /* \"#utility.yul\":25721:25739   */\n      add\n        /* \"#utility.yul\":25713:25739   */\n      swap1\n      pop\n        /* \"#utility.yul\":25785:25794   */\n      dup2\n        /* \"#utility.yul\":25779:25783   */\n      dup2\n        /* \"#utility.yul\":25775:25795   */\n      sub\n        /* \"#utility.yul\":25771:25772   */\n      0x00\n        /* \"#utility.yul\":25760:25769   */\n      dup4\n        /* \"#utility.yul\":25756:25773   */\n      add\n        /* \"#utility.yul\":25749:25796   */\n      mstore\n        /* \"#utility.yul\":25813:25944   */\n      tag_778\n        /* \"#utility.yul\":25939:25943   */\n      dup2\n        /* \"#utility.yul\":25813:25944   */\n      tag_549\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":25805:25944   */\n      swap1\n      pop\n        /* \"#utility.yul\":25532:25951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25957:26129   */\n    tag_550:\n        /* \"#utility.yul\":26097:26121   */\n      0x526563697069656e74206973206e6f74204b5943656400000000000000000000\n        /* \"#utility.yul\":26093:26094   */\n      0x00\n        /* \"#utility.yul\":26085:26091   */\n      dup3\n        /* \"#utility.yul\":26081:26095   */\n      add\n        /* \"#utility.yul\":26074:26122   */\n      mstore\n        /* \"#utility.yul\":25957:26129   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26135:26501   */\n    tag_551:\n        /* \"#utility.yul\":26277:26280   */\n      0x00\n        /* \"#utility.yul\":26298:26365   */\n      tag_781\n        /* \"#utility.yul\":26362:26364   */\n      0x16\n        /* \"#utility.yul\":26357:26360   */\n      dup4\n        /* \"#utility.yul\":26298:26365   */\n      tag_499\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":26291:26365   */\n      swap2\n      pop\n        /* \"#utility.yul\":26374:26467   */\n      tag_782\n        /* \"#utility.yul\":26463:26466   */\n      dup3\n        /* \"#utility.yul\":26374:26467   */\n      tag_550\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":26492:26494   */\n      0x20\n        /* \"#utility.yul\":26487:26490   */\n      dup3\n        /* \"#utility.yul\":26483:26495   */\n      add\n        /* \"#utility.yul\":26476:26495   */\n      swap1\n      pop\n        /* \"#utility.yul\":26135:26501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26507:26926   */\n    tag_413:\n        /* \"#utility.yul\":26673:26677   */\n      0x00\n        /* \"#utility.yul\":26711:26713   */\n      0x20\n        /* \"#utility.yul\":26700:26709   */\n      dup3\n        /* \"#utility.yul\":26696:26714   */\n      add\n        /* \"#utility.yul\":26688:26714   */\n      swap1\n      pop\n        /* \"#utility.yul\":26760:26769   */\n      dup2\n        /* \"#utility.yul\":26754:26758   */\n      dup2\n        /* \"#utility.yul\":26750:26770   */\n      sub\n        /* \"#utility.yul\":26746:26747   */\n      0x00\n        /* \"#utility.yul\":26735:26744   */\n      dup4\n        /* \"#utility.yul\":26731:26748   */\n      add\n        /* \"#utility.yul\":26724:26771   */\n      mstore\n        /* \"#utility.yul\":26788:26919   */\n      tag_784\n        /* \"#utility.yul\":26914:26918   */\n      dup2\n        /* \"#utility.yul\":26788:26919   */\n      tag_551\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":26780:26919   */\n      swap1\n      pop\n        /* \"#utility.yul\":26507:26926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26932:27264   */\n    tag_443:\n        /* \"#utility.yul\":27053:27057   */\n      0x00\n        /* \"#utility.yul\":27091:27093   */\n      0x40\n        /* \"#utility.yul\":27080:27089   */\n      dup3\n        /* \"#utility.yul\":27076:27094   */\n      add\n        /* \"#utility.yul\":27068:27094   */\n      swap1\n      pop\n        /* \"#utility.yul\":27104:27175   */\n      tag_786\n        /* \"#utility.yul\":27172:27173   */\n      0x00\n        /* \"#utility.yul\":27161:27170   */\n      dup4\n        /* \"#utility.yul\":27157:27174   */\n      add\n        /* \"#utility.yul\":27148:27154   */\n      dup6\n        /* \"#utility.yul\":27104:27175   */\n      tag_510\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":27185:27257   */\n      tag_787\n        /* \"#utility.yul\":27253:27255   */\n      0x20\n        /* \"#utility.yul\":27242:27251   */\n      dup4\n        /* \"#utility.yul\":27238:27256   */\n      add\n        /* \"#utility.yul\":27229:27235   */\n      dup5\n        /* \"#utility.yul\":27185:27257   */\n      tag_507\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":26932:27264   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27270:27602   */\n    tag_452:\n        /* \"#utility.yul\":27391:27395   */\n      0x00\n        /* \"#utility.yul\":27429:27431   */\n      0x40\n        /* \"#utility.yul\":27418:27427   */\n      dup3\n        /* \"#utility.yul\":27414:27432   */\n      add\n        /* \"#utility.yul\":27406:27432   */\n      swap1\n      pop\n        /* \"#utility.yul\":27442:27513   */\n      tag_789\n        /* \"#utility.yul\":27510:27511   */\n      0x00\n        /* \"#utility.yul\":27499:27508   */\n      dup4\n        /* \"#utility.yul\":27495:27512   */\n      add\n        /* \"#utility.yul\":27486:27492   */\n      dup6\n        /* \"#utility.yul\":27442:27513   */\n      tag_503\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":27523:27595   */\n      tag_790\n        /* \"#utility.yul\":27591:27593   */\n      0x20\n        /* \"#utility.yul\":27580:27589   */\n      dup4\n        /* \"#utility.yul\":27576:27594   */\n      add\n        /* \"#utility.yul\":27567:27573   */\n      dup5\n        /* \"#utility.yul\":27523:27595   */\n      tag_503\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":27270:27602   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27608:28050   */\n    tag_465:\n        /* \"#utility.yul\":27757:27761   */\n      0x00\n        /* \"#utility.yul\":27795:27797   */\n      0x60\n        /* \"#utility.yul\":27784:27793   */\n      dup3\n        /* \"#utility.yul\":27780:27798   */\n      add\n        /* \"#utility.yul\":27772:27798   */\n      swap1\n      pop\n        /* \"#utility.yul\":27808:27879   */\n      tag_792\n        /* \"#utility.yul\":27876:27877   */\n      0x00\n        /* \"#utility.yul\":27865:27874   */\n      dup4\n        /* \"#utility.yul\":27861:27878   */\n      add\n        /* \"#utility.yul\":27852:27858   */\n      dup7\n        /* \"#utility.yul\":27808:27879   */\n      tag_510\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":27889:27961   */\n      tag_793\n        /* \"#utility.yul\":27957:27959   */\n      0x20\n        /* \"#utility.yul\":27946:27955   */\n      dup4\n        /* \"#utility.yul\":27942:27960   */\n      add\n        /* \"#utility.yul\":27933:27939   */\n      dup6\n        /* \"#utility.yul\":27889:27961   */\n      tag_503\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":27971:28043   */\n      tag_794\n        /* \"#utility.yul\":28039:28041   */\n      0x40\n        /* \"#utility.yul\":28028:28037   */\n      dup4\n        /* \"#utility.yul\":28024:28042   */\n      add\n        /* \"#utility.yul\":28015:28021   */\n      dup5\n        /* \"#utility.yul\":27971:28043   */\n      tag_503\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":27608:28050   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28056:28247   */\n    tag_476:\n        /* \"#utility.yul\":28096:28099   */\n      0x00\n        /* \"#utility.yul\":28115:28135   */\n      tag_796\n        /* \"#utility.yul\":28133:28134   */\n      dup3\n        /* \"#utility.yul\":28115:28135   */\n      tag_495\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":28110:28135   */\n      swap2\n      pop\n        /* \"#utility.yul\":28149:28169   */\n      tag_797\n        /* \"#utility.yul\":28167:28168   */\n      dup4\n        /* \"#utility.yul\":28149:28169   */\n      tag_495\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":28144:28169   */\n      swap3\n      pop\n        /* \"#utility.yul\":28192:28193   */\n      dup3\n        /* \"#utility.yul\":28189:28190   */\n      dup3\n        /* \"#utility.yul\":28185:28194   */\n      add\n        /* \"#utility.yul\":28178:28194   */\n      swap1\n      pop\n        /* \"#utility.yul\":28213:28216   */\n      dup1\n        /* \"#utility.yul\":28210:28211   */\n      dup3\n        /* \"#utility.yul\":28207:28217   */\n      gt\n        /* \"#utility.yul\":28204:28240   */\n      iszero\n      tag_798\n      jumpi\n        /* \"#utility.yul\":28220:28238   */\n      tag_799\n      tag_526\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":28204:28240   */\n    tag_798:\n        /* \"#utility.yul\":28056:28247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f62b535c09414dc1ba0c918005917eb08c19d29319220f7ce4414627587dd4a364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1214": {
									"entryPoint": null,
									"id": 1214,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1501": {
									"entryPoint": null,
									"id": 1501,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_632": {
									"entryPoint": null,
									"id": 632,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 670,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1310": {
									"entryPoint": 1111,
									"id": 1310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setRoleAdmin_217": {
									"entryPoint": 916,
									"id": 217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1118,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 1011,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2247,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12046:12",
										"nodeType": "YulBlock",
										"src": "0:12046:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "423:28:12",
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:12",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:12:12",
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nativeSrc": "433:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nativeSrc": "546:28:12",
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:12",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:12",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nativeSrc": "556:12:12",
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nativeSrc": "556:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nativeSrc": "628:54:12",
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nativeSrc": "638:38:12",
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nativeSrc": "652:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:12",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nativeSrc": "668:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nativeSrc": "648:28:12",
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:12",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:12",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nativeSrc": "716:152:12",
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:12",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:12",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nativeSrc": "726:88:12",
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nativeSrc": "726:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:12",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:12",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nativeSrc": "823:15:12",
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nativeSrc": "823:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:12",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:12",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nativeSrc": "847:15:12",
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nativeSrc": "847:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nativeSrc": "917:238:12",
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nativeSrc": "927:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nativeSrc": "957:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nativeSrc": "945:40:12",
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:12",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:12",
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nativeSrc": "1098:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nativeSrc": "1098:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nativeSrc": "1036:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nativeSrc": "1072:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nativeSrc": "1033:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nativeSrc": "1030:88:12",
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nativeSrc": "1127:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nativeSrc": "1127:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:12",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:12",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nativeSrc": "1202:88:12",
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nativeSrc": "1212:30:12",
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nativeSrc": "1222:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nativeSrc": "1251:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nativeSrc": "1251:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:12",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:12",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nativeSrc": "1363:241:12",
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:12",
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nativeSrc": "1470:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nativeSrc": "1470:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nativeSrc": "1437:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nativeSrc": "1434:56:12",
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nativeSrc": "1500:37:12",
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nativeSrc": "1508:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nativeSrc": "1574:23:12",
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nativeSrc": "1582:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:12",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:12",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nativeSrc": "1672:77:12",
													"nodeType": "YulBlock",
													"src": "1672:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:12"
																},
																"nativeSrc": "1683:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:12"
															},
															"nativeSrc": "1683:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:12"
																		},
																		"nativeSrc": "1722:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:12"
																},
																"nativeSrc": "1715:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:12"
															},
															"nativeSrc": "1715:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:12",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:12",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:12",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:139:12"
											},
											{
												"body": {
													"nativeSrc": "1850:339:12",
													"nodeType": "YulBlock",
													"src": "1850:339:12",
													"statements": [
														{
															"nativeSrc": "1860:75:12",
															"nodeType": "YulAssignment",
															"src": "1860:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:12"
																		},
																		"nativeSrc": "1885:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:12"
																},
																"nativeSrc": "1869:66:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:12"
																},
																"nativeSrc": "1944:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:12"
															},
															"nativeSrc": "1944:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:12"
														},
														{
															"nativeSrc": "1974:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:12"
																},
																"nativeSrc": "1985:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:12",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:12",
																"nodeType": "YulBlock",
																"src": "2039:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:12"
																			},
																			"nativeSrc": "2041:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:12"
																		},
																		"nativeSrc": "2041:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:12"
																		},
																		"nativeSrc": "2016:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:12"
																},
																"nativeSrc": "2013:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:12"
															},
															"nativeSrc": "2010:112:12",
															"nodeType": "YulIf",
															"src": "2010:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:12"
																},
																"nativeSrc": "2131:52:12",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:12"
															},
															"nativeSrc": "2131:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:12",
														"nodeType": "YulTypedName",
														"src": "1823:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:12",
														"nodeType": "YulTypedName",
														"src": "1828:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:12",
														"nodeType": "YulTypedName",
														"src": "1836:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:12",
														"nodeType": "YulTypedName",
														"src": "1844:5:12",
														"type": ""
													}
												],
												"src": "1755:434:12"
											},
											{
												"body": {
													"nativeSrc": "2282:282:12",
													"nodeType": "YulBlock",
													"src": "2282:282:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:12",
																"nodeType": "YulBlock",
																"src": "2331:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:12"
																			},
																			"nativeSrc": "2333:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:12"
																		},
																		"nativeSrc": "2333:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:12"
																				},
																				"nativeSrc": "2306:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:12"
																		},
																		"nativeSrc": "2302:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:12"
																},
																"nativeSrc": "2295:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:12"
															},
															"nativeSrc": "2292:122:12",
															"nodeType": "YulIf",
															"src": "2292:122:12"
														},
														{
															"nativeSrc": "2423:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:12"
																},
																"nativeSrc": "2437:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:12",
															"nodeType": "YulAssignment",
															"src": "2459:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:12"
																		},
																		"nativeSrc": "2527:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:12"
																},
																"nativeSrc": "2468:90:12",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:12",
														"nodeType": "YulTypedName",
														"src": "2260:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:12",
														"nodeType": "YulTypedName",
														"src": "2268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:12",
														"nodeType": "YulTypedName",
														"src": "2276:5:12",
														"type": ""
													}
												],
												"src": "2209:355:12"
											},
											{
												"body": {
													"nativeSrc": "2613:43:12",
													"nodeType": "YulBlock",
													"src": "2613:43:12",
													"statements": [
														{
															"nativeSrc": "2623:27:12",
															"nodeType": "YulAssignment",
															"src": "2623:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2638:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2638:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2645:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2645:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2634:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2634:3:12"
																},
																"nativeSrc": "2634:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2634:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2623:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2623:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2570:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2595:5:12",
														"nodeType": "YulTypedName",
														"src": "2595:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2605:7:12",
														"nodeType": "YulTypedName",
														"src": "2605:7:12",
														"type": ""
													}
												],
												"src": "2570:86:12"
											},
											{
												"body": {
													"nativeSrc": "2703:77:12",
													"nodeType": "YulBlock",
													"src": "2703:77:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2758:16:12",
																"nodeType": "YulBlock",
																"src": "2758:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2767:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2767:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2770:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2770:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2760:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2760:6:12"
																			},
																			"nativeSrc": "2760:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2760:12:12"
																		},
																		"nativeSrc": "2760:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2760:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2726:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2749:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2749:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "2733:15:12",
																					"nodeType": "YulIdentifier",
																					"src": "2733:15:12"
																				},
																				"nativeSrc": "2733:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2733:22:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2723:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:12"
																		},
																		"nativeSrc": "2723:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2716:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:12"
																},
																"nativeSrc": "2716:41:12",
																"nodeType": "YulFunctionCall",
																"src": "2716:41:12"
															},
															"nativeSrc": "2713:61:12",
															"nodeType": "YulIf",
															"src": "2713:61:12"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "2662:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2696:5:12",
														"nodeType": "YulTypedName",
														"src": "2696:5:12",
														"type": ""
													}
												],
												"src": "2662:118:12"
											},
											{
												"body": {
													"nativeSrc": "2847:78:12",
													"nodeType": "YulBlock",
													"src": "2847:78:12",
													"statements": [
														{
															"nativeSrc": "2857:22:12",
															"nodeType": "YulAssignment",
															"src": "2857:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2872:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2872:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2866:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2866:5:12"
																},
																"nativeSrc": "2866:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2866:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2857:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2857:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2913:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2913:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "2888:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "2888:24:12"
																},
																"nativeSrc": "2888:31:12",
																"nodeType": "YulFunctionCall",
																"src": "2888:31:12"
															},
															"nativeSrc": "2888:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "2888:31:12"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "2786:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2825:6:12",
														"nodeType": "YulTypedName",
														"src": "2825:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2833:3:12",
														"nodeType": "YulTypedName",
														"src": "2833:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2841:5:12",
														"nodeType": "YulTypedName",
														"src": "2841:5:12",
														"type": ""
													}
												],
												"src": "2786:139:12"
											},
											{
												"body": {
													"nativeSrc": "2976:32:12",
													"nodeType": "YulBlock",
													"src": "2976:32:12",
													"statements": [
														{
															"nativeSrc": "2986:16:12",
															"nodeType": "YulAssignment",
															"src": "2986:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2997:5:12",
																"nodeType": "YulIdentifier",
																"src": "2997:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2986:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2986:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2931:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2958:5:12",
														"nodeType": "YulTypedName",
														"src": "2958:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2968:7:12",
														"nodeType": "YulTypedName",
														"src": "2968:7:12",
														"type": ""
													}
												],
												"src": "2931:77:12"
											},
											{
												"body": {
													"nativeSrc": "3057:79:12",
													"nodeType": "YulBlock",
													"src": "3057:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3114:16:12",
																"nodeType": "YulBlock",
																"src": "3114:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3123:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3126:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3126:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3116:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3116:6:12"
																			},
																			"nativeSrc": "3116:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3116:12:12"
																		},
																		"nativeSrc": "3116:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3116:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3080:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3080:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3105:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3105:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3087:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3087:17:12"
																				},
																				"nativeSrc": "3087:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3087:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3077:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3077:2:12"
																		},
																		"nativeSrc": "3077:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3077:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3070:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3070:6:12"
																},
																"nativeSrc": "3070:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3070:43:12"
															},
															"nativeSrc": "3067:63:12",
															"nodeType": "YulIf",
															"src": "3067:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3014:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3050:5:12",
														"nodeType": "YulTypedName",
														"src": "3050:5:12",
														"type": ""
													}
												],
												"src": "3014:122:12"
											},
											{
												"body": {
													"nativeSrc": "3205:80:12",
													"nodeType": "YulBlock",
													"src": "3205:80:12",
													"statements": [
														{
															"nativeSrc": "3215:22:12",
															"nodeType": "YulAssignment",
															"src": "3215:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3230:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3224:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3224:5:12"
																},
																"nativeSrc": "3224:13:12",
																"nodeType": "YulFunctionCall",
																"src": "3224:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3215:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3215:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3273:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3273:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3246:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3246:26:12"
																},
																"nativeSrc": "3246:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3246:33:12"
															},
															"nativeSrc": "3246:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3246:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3142:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3183:6:12",
														"nodeType": "YulTypedName",
														"src": "3183:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3191:3:12",
														"nodeType": "YulTypedName",
														"src": "3191:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3199:5:12",
														"nodeType": "YulTypedName",
														"src": "3199:5:12",
														"type": ""
													}
												],
												"src": "3142:143:12"
											},
											{
												"body": {
													"nativeSrc": "3336:81:12",
													"nodeType": "YulBlock",
													"src": "3336:81:12",
													"statements": [
														{
															"nativeSrc": "3346:65:12",
															"nodeType": "YulAssignment",
															"src": "3346:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3361:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3361:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3368:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3368:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3357:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:12"
																},
																"nativeSrc": "3357:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3357:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3346:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3346:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3291:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3318:5:12",
														"nodeType": "YulTypedName",
														"src": "3318:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3328:7:12",
														"nodeType": "YulTypedName",
														"src": "3328:7:12",
														"type": ""
													}
												],
												"src": "3291:126:12"
											},
											{
												"body": {
													"nativeSrc": "3468:51:12",
													"nodeType": "YulBlock",
													"src": "3468:51:12",
													"statements": [
														{
															"nativeSrc": "3478:35:12",
															"nodeType": "YulAssignment",
															"src": "3478:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3507:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3507:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3489:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3489:17:12"
																},
																"nativeSrc": "3489:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3489:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3478:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3478:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3423:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3450:5:12",
														"nodeType": "YulTypedName",
														"src": "3450:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3460:7:12",
														"nodeType": "YulTypedName",
														"src": "3460:7:12",
														"type": ""
													}
												],
												"src": "3423:96:12"
											},
											{
												"body": {
													"nativeSrc": "3568:79:12",
													"nodeType": "YulBlock",
													"src": "3568:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3625:16:12",
																"nodeType": "YulBlock",
																"src": "3625:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3634:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3634:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3637:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3637:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3627:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3627:6:12"
																			},
																			"nativeSrc": "3627:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3627:12:12"
																		},
																		"nativeSrc": "3627:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3627:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3591:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3591:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3616:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3616:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3598:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3598:17:12"
																				},
																				"nativeSrc": "3598:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3598:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3588:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3588:2:12"
																		},
																		"nativeSrc": "3588:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3588:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3581:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3581:6:12"
																},
																"nativeSrc": "3581:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3581:43:12"
															},
															"nativeSrc": "3578:63:12",
															"nodeType": "YulIf",
															"src": "3578:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3525:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3561:5:12",
														"nodeType": "YulTypedName",
														"src": "3561:5:12",
														"type": ""
													}
												],
												"src": "3525:122:12"
											},
											{
												"body": {
													"nativeSrc": "3716:80:12",
													"nodeType": "YulBlock",
													"src": "3716:80:12",
													"statements": [
														{
															"nativeSrc": "3726:22:12",
															"nodeType": "YulAssignment",
															"src": "3726:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3735:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3735:5:12"
																},
																"nativeSrc": "3735:13:12",
																"nodeType": "YulFunctionCall",
																"src": "3735:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3726:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3726:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3784:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3784:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3757:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3757:26:12"
																},
																"nativeSrc": "3757:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3757:33:12"
															},
															"nativeSrc": "3757:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3757:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3653:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3694:6:12",
														"nodeType": "YulTypedName",
														"src": "3694:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3702:3:12",
														"nodeType": "YulTypedName",
														"src": "3702:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3710:5:12",
														"nodeType": "YulTypedName",
														"src": "3710:5:12",
														"type": ""
													}
												],
												"src": "3653:143:12"
											},
											{
												"body": {
													"nativeSrc": "3982:1296:12",
													"nodeType": "YulBlock",
													"src": "3982:1296:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4029:83:12",
																"nodeType": "YulBlock",
																"src": "4029:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4031:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4031:77:12"
																			},
																			"nativeSrc": "4031:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4031:79:12"
																		},
																		"nativeSrc": "4031:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4031:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4003:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4003:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4012:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4012:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:12"
																		},
																		"nativeSrc": "3999:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4024:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4024:3:12",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3995:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3995:3:12"
																},
																"nativeSrc": "3995:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3995:33:12"
															},
															"nativeSrc": "3992:120:12",
															"nodeType": "YulIf",
															"src": "3992:120:12"
														},
														{
															"nativeSrc": "4122:291:12",
															"nodeType": "YulBlock",
															"src": "4122:291:12",
															"statements": [
																{
																	"nativeSrc": "4137:38:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4137:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4161:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4161:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4172:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4172:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4157:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4157:3:12"
																				},
																				"nativeSrc": "4157:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4157:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4151:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4151:5:12"
																		},
																		"nativeSrc": "4151:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4151:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4141:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4141:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4222:83:12",
																		"nodeType": "YulBlock",
																		"src": "4222:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4224:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "4224:77:12"
																					},
																					"nativeSrc": "4224:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4224:79:12"
																				},
																				"nativeSrc": "4224:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4224:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4194:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4194:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4202:18:12",
																				"nodeType": "YulLiteral",
																				"src": "4202:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4191:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4191:2:12"
																		},
																		"nativeSrc": "4191:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4191:30:12"
																	},
																	"nativeSrc": "4188:117:12",
																	"nodeType": "YulIf",
																	"src": "4188:117:12"
																},
																{
																	"nativeSrc": "4319:84:12",
																	"nodeType": "YulAssignment",
																	"src": "4319:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4375:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4375:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4386:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4386:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4371:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4371:3:12"
																				},
																				"nativeSrc": "4371:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4371:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4395:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4395:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4329:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "4329:41:12"
																		},
																		"nativeSrc": "4329:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4329:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4319:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4319:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4423:292:12",
															"nodeType": "YulBlock",
															"src": "4423:292:12",
															"statements": [
																{
																	"nativeSrc": "4438:39:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4438:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4462:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4462:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4473:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4473:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4458:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4458:3:12"
																				},
																				"nativeSrc": "4458:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4458:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4452:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4452:5:12"
																		},
																		"nativeSrc": "4452:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4452:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4442:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4442:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4524:83:12",
																		"nodeType": "YulBlock",
																		"src": "4524:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4526:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "4526:77:12"
																					},
																					"nativeSrc": "4526:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:79:12"
																				},
																				"nativeSrc": "4526:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4526:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4496:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4496:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4504:18:12",
																				"nodeType": "YulLiteral",
																				"src": "4504:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4493:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4493:2:12"
																		},
																		"nativeSrc": "4493:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4493:30:12"
																	},
																	"nativeSrc": "4490:117:12",
																	"nodeType": "YulIf",
																	"src": "4490:117:12"
																},
																{
																	"nativeSrc": "4621:84:12",
																	"nodeType": "YulAssignment",
																	"src": "4621:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4677:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4677:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4688:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4688:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4673:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4673:3:12"
																				},
																				"nativeSrc": "4673:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4673:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4697:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4697:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4631:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "4631:41:12"
																		},
																		"nativeSrc": "4631:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4621:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4621:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4725:127:12",
															"nodeType": "YulBlock",
															"src": "4725:127:12",
															"statements": [
																{
																	"nativeSrc": "4740:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4740:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4754:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4754:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4744:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4744:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4770:72:12",
																	"nodeType": "YulAssignment",
																	"src": "4770:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4814:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4814:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4825:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4825:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4810:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4810:3:12"
																				},
																				"nativeSrc": "4810:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4810:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4834:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4834:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "4780:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "4780:29:12"
																		},
																		"nativeSrc": "4780:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4780:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4770:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4770:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4862:129:12",
															"nodeType": "YulBlock",
															"src": "4862:129:12",
															"statements": [
																{
																	"nativeSrc": "4877:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4877:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4891:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4891:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4881:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4881:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4907:74:12",
																	"nodeType": "YulAssignment",
																	"src": "4907:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4953:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4953:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4964:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4964:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4949:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4949:3:12"
																				},
																				"nativeSrc": "4949:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4949:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4973:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4973:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4917:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "4917:31:12"
																		},
																		"nativeSrc": "4917:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4917:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4907:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4907:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5001:130:12",
															"nodeType": "YulBlock",
															"src": "5001:130:12",
															"statements": [
																{
																	"nativeSrc": "5016:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5016:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5030:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5030:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5020:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5020:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5047:74:12",
																	"nodeType": "YulAssignment",
																	"src": "5047:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5093:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5093:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5104:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5104:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5089:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5089:3:12"
																				},
																				"nativeSrc": "5089:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5089:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5113:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5113:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5057:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "5057:31:12"
																		},
																		"nativeSrc": "5057:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5057:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5047:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5047:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5141:130:12",
															"nodeType": "YulBlock",
															"src": "5141:130:12",
															"statements": [
																{
																	"nativeSrc": "5156:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5156:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5170:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5170:3:12",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5160:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5160:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5187:74:12",
																	"nodeType": "YulAssignment",
																	"src": "5187:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5233:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5233:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5244:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5244:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5229:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5229:3:12"
																				},
																				"nativeSrc": "5229:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5253:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5253:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5197:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "5197:31:12"
																		},
																		"nativeSrc": "5197:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5197:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "5187:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5187:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "3802:1476:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3912:9:12",
														"nodeType": "YulTypedName",
														"src": "3912:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3923:7:12",
														"nodeType": "YulTypedName",
														"src": "3923:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3935:6:12",
														"nodeType": "YulTypedName",
														"src": "3935:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3943:6:12",
														"nodeType": "YulTypedName",
														"src": "3943:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3951:6:12",
														"nodeType": "YulTypedName",
														"src": "3951:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3959:6:12",
														"nodeType": "YulTypedName",
														"src": "3959:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3967:6:12",
														"nodeType": "YulTypedName",
														"src": "3967:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3975:6:12",
														"nodeType": "YulTypedName",
														"src": "3975:6:12",
														"type": ""
													}
												],
												"src": "3802:1476:12"
											},
											{
												"body": {
													"nativeSrc": "5343:40:12",
													"nodeType": "YulBlock",
													"src": "5343:40:12",
													"statements": [
														{
															"nativeSrc": "5354:22:12",
															"nodeType": "YulAssignment",
															"src": "5354:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5370:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5370:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5364:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5364:5:12"
																},
																"nativeSrc": "5364:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5364:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5354:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5284:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5326:5:12",
														"nodeType": "YulTypedName",
														"src": "5326:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5336:6:12",
														"nodeType": "YulTypedName",
														"src": "5336:6:12",
														"type": ""
													}
												],
												"src": "5284:99:12"
											},
											{
												"body": {
													"nativeSrc": "5417:152:12",
													"nodeType": "YulBlock",
													"src": "5417:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5434:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5434:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5437:77:12",
																		"nodeType": "YulLiteral",
																		"src": "5437:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5427:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:12"
																},
																"nativeSrc": "5427:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5427:88:12"
															},
															"nativeSrc": "5427:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5427:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5531:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5531:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5534:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5534:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5524:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:12"
																},
																"nativeSrc": "5524:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5524:15:12"
															},
															"nativeSrc": "5524:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5524:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5555:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5555:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5558:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5548:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5548:6:12"
																},
																"nativeSrc": "5548:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5548:15:12"
															},
															"nativeSrc": "5548:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5548:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5389:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5389:180:12"
											},
											{
												"body": {
													"nativeSrc": "5626:269:12",
													"nodeType": "YulBlock",
													"src": "5626:269:12",
													"statements": [
														{
															"nativeSrc": "5636:22:12",
															"nodeType": "YulAssignment",
															"src": "5636:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5650:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5650:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5656:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5656:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5646:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:12"
																},
																"nativeSrc": "5646:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5646:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5636:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:12"
																}
															]
														},
														{
															"nativeSrc": "5667:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5667:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5697:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5697:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:12"
																},
																"nativeSrc": "5693:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5693:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5671:18:12",
																	"nodeType": "YulTypedName",
																	"src": "5671:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5744:51:12",
																"nodeType": "YulBlock",
																"src": "5744:51:12",
																"statements": [
																	{
																		"nativeSrc": "5758:27:12",
																		"nodeType": "YulAssignment",
																		"src": "5758:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5772:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5772:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5780:4:12",
																					"nodeType": "YulLiteral",
																					"src": "5780:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5768:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5768:3:12"
																			},
																			"nativeSrc": "5768:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5768:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5758:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5758:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5724:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "5724:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5717:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:12"
																},
																"nativeSrc": "5717:26:12",
																"nodeType": "YulFunctionCall",
																"src": "5717:26:12"
															},
															"nativeSrc": "5714:81:12",
															"nodeType": "YulIf",
															"src": "5714:81:12"
														},
														{
															"body": {
																"nativeSrc": "5847:42:12",
																"nodeType": "YulBlock",
																"src": "5847:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5861:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5861:16:12"
																			},
																			"nativeSrc": "5861:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5861:18:12"
																		},
																		"nativeSrc": "5861:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5861:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5811:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "5811:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5834:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5834:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5842:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5842:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5831:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5831:2:12"
																		},
																		"nativeSrc": "5831:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5831:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5808:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5808:2:12"
																},
																"nativeSrc": "5808:38:12",
																"nodeType": "YulFunctionCall",
																"src": "5808:38:12"
															},
															"nativeSrc": "5805:84:12",
															"nodeType": "YulIf",
															"src": "5805:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5575:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5610:4:12",
														"nodeType": "YulTypedName",
														"src": "5610:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5619:6:12",
														"nodeType": "YulTypedName",
														"src": "5619:6:12",
														"type": ""
													}
												],
												"src": "5575:320:12"
											},
											{
												"body": {
													"nativeSrc": "5955:87:12",
													"nodeType": "YulBlock",
													"src": "5955:87:12",
													"statements": [
														{
															"nativeSrc": "5965:11:12",
															"nodeType": "YulAssignment",
															"src": "5965:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "5973:3:12",
																"nodeType": "YulIdentifier",
																"src": "5973:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5965:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5965:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5993:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5993:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5996:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5996:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5986:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5986:6:12"
																},
																"nativeSrc": "5986:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5986:14:12"
															},
															"nativeSrc": "5986:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "5986:14:12"
														},
														{
															"nativeSrc": "6009:26:12",
															"nodeType": "YulAssignment",
															"src": "6009:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6027:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6027:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6030:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6030:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6017:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "6017:9:12"
																},
																"nativeSrc": "6017:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6017:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6009:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6009:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5901:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5942:3:12",
														"nodeType": "YulTypedName",
														"src": "5942:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5950:4:12",
														"nodeType": "YulTypedName",
														"src": "5950:4:12",
														"type": ""
													}
												],
												"src": "5901:141:12"
											},
											{
												"body": {
													"nativeSrc": "6092:49:12",
													"nodeType": "YulBlock",
													"src": "6092:49:12",
													"statements": [
														{
															"nativeSrc": "6102:33:12",
															"nodeType": "YulAssignment",
															"src": "6102:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6120:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6120:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6127:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6127:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6116:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6116:3:12"
																		},
																		"nativeSrc": "6116:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6116:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6132:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6132:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6112:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6112:3:12"
																},
																"nativeSrc": "6112:23:12",
																"nodeType": "YulFunctionCall",
																"src": "6112:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6102:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "6048:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6075:5:12",
														"nodeType": "YulTypedName",
														"src": "6075:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6085:6:12",
														"nodeType": "YulTypedName",
														"src": "6085:6:12",
														"type": ""
													}
												],
												"src": "6048:93:12"
											},
											{
												"body": {
													"nativeSrc": "6200:54:12",
													"nodeType": "YulBlock",
													"src": "6200:54:12",
													"statements": [
														{
															"nativeSrc": "6210:37:12",
															"nodeType": "YulAssignment",
															"src": "6210:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6235:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6235:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6241:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6241:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "6231:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:12"
																},
																"nativeSrc": "6231:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6231:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6210:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "6210:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "6147:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6175:4:12",
														"nodeType": "YulTypedName",
														"src": "6175:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6181:5:12",
														"nodeType": "YulTypedName",
														"src": "6181:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6191:8:12",
														"nodeType": "YulTypedName",
														"src": "6191:8:12",
														"type": ""
													}
												],
												"src": "6147:107:12"
											},
											{
												"body": {
													"nativeSrc": "6336:317:12",
													"nodeType": "YulBlock",
													"src": "6336:317:12",
													"statements": [
														{
															"nativeSrc": "6346:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6346:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "6367:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "6367:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6379:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6379:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6363:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6363:3:12"
																},
																"nativeSrc": "6363:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6363:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "6350:9:12",
																	"nodeType": "YulTypedName",
																	"src": "6350:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6390:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6390:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6421:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6421:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6432:66:12",
																		"nodeType": "YulLiteral",
																		"src": "6432:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6402:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "6402:18:12"
																},
																"nativeSrc": "6402:97:12",
																"nodeType": "YulFunctionCall",
																"src": "6402:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6394:4:12",
																	"nodeType": "YulTypedName",
																	"src": "6394:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6508:51:12",
															"nodeType": "YulAssignment",
															"src": "6508:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6539:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6539:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6550:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6550:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6520:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "6520:18:12"
																},
																"nativeSrc": "6520:39:12",
																"nodeType": "YulFunctionCall",
																"src": "6520:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6508:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "6508:8:12"
																}
															]
														},
														{
															"nativeSrc": "6568:30:12",
															"nodeType": "YulAssignment",
															"src": "6568:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6581:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6581:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6592:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6592:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6588:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6588:3:12"
																		},
																		"nativeSrc": "6588:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6588:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6577:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6577:3:12"
																},
																"nativeSrc": "6577:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6577:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6568:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6568:5:12"
																}
															]
														},
														{
															"nativeSrc": "6607:40:12",
															"nodeType": "YulAssignment",
															"src": "6607:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6620:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6620:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6631:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "6631:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6641:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6641:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6627:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6627:3:12"
																		},
																		"nativeSrc": "6627:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6617:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6617:2:12"
																},
																"nativeSrc": "6617:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6617:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6607:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6607:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "6260:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6297:5:12",
														"nodeType": "YulTypedName",
														"src": "6297:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "6304:10:12",
														"nodeType": "YulTypedName",
														"src": "6304:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "6316:8:12",
														"nodeType": "YulTypedName",
														"src": "6316:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6329:6:12",
														"nodeType": "YulTypedName",
														"src": "6329:6:12",
														"type": ""
													}
												],
												"src": "6260:393:12"
											},
											{
												"body": {
													"nativeSrc": "6691:28:12",
													"nodeType": "YulBlock",
													"src": "6691:28:12",
													"statements": [
														{
															"nativeSrc": "6701:12:12",
															"nodeType": "YulAssignment",
															"src": "6701:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "6708:5:12",
																"nodeType": "YulIdentifier",
																"src": "6708:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6701:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6701:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6659:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6677:5:12",
														"nodeType": "YulTypedName",
														"src": "6677:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6687:3:12",
														"nodeType": "YulTypedName",
														"src": "6687:3:12",
														"type": ""
													}
												],
												"src": "6659:60:12"
											},
											{
												"body": {
													"nativeSrc": "6785:82:12",
													"nodeType": "YulBlock",
													"src": "6785:82:12",
													"statements": [
														{
															"nativeSrc": "6795:66:12",
															"nodeType": "YulAssignment",
															"src": "6795:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6853:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6853:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6835:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "6835:17:12"
																				},
																				"nativeSrc": "6835:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6835:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6826:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "6826:8:12"
																		},
																		"nativeSrc": "6826:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6826:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6808:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6808:17:12"
																},
																"nativeSrc": "6808:53:12",
																"nodeType": "YulFunctionCall",
																"src": "6808:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6795:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "6795:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6725:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6765:5:12",
														"nodeType": "YulTypedName",
														"src": "6765:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6775:9:12",
														"nodeType": "YulTypedName",
														"src": "6775:9:12",
														"type": ""
													}
												],
												"src": "6725:142:12"
											},
											{
												"body": {
													"nativeSrc": "6920:28:12",
													"nodeType": "YulBlock",
													"src": "6920:28:12",
													"statements": [
														{
															"nativeSrc": "6930:12:12",
															"nodeType": "YulAssignment",
															"src": "6930:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "6937:5:12",
																"nodeType": "YulIdentifier",
																"src": "6937:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6930:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6930:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6873:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6906:5:12",
														"nodeType": "YulTypedName",
														"src": "6906:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6916:3:12",
														"nodeType": "YulTypedName",
														"src": "6916:3:12",
														"type": ""
													}
												],
												"src": "6873:75:12"
											},
											{
												"body": {
													"nativeSrc": "7030:193:12",
													"nodeType": "YulBlock",
													"src": "7030:193:12",
													"statements": [
														{
															"nativeSrc": "7040:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7040:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "7095:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "7095:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "7064:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "7064:30:12"
																},
																"nativeSrc": "7064:39:12",
																"nodeType": "YulFunctionCall",
																"src": "7064:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "7044:16:12",
																	"nodeType": "YulTypedName",
																	"src": "7044:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7119:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7119:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7159:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "7159:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7153:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "7153:5:12"
																				},
																				"nativeSrc": "7153:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7153:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7166:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7166:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "7198:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "7198:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "7174:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "7174:23:12"
																				},
																				"nativeSrc": "7174:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7174:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "7125:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "7125:27:12"
																		},
																		"nativeSrc": "7125:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7125:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "7112:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7112:6:12"
																},
																"nativeSrc": "7112:105:12",
																"nodeType": "YulFunctionCall",
																"src": "7112:105:12"
															},
															"nativeSrc": "7112:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "7112:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6954:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7007:4:12",
														"nodeType": "YulTypedName",
														"src": "7007:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7013:6:12",
														"nodeType": "YulTypedName",
														"src": "7013:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "7021:7:12",
														"nodeType": "YulTypedName",
														"src": "7021:7:12",
														"type": ""
													}
												],
												"src": "6954:269:12"
											},
											{
												"body": {
													"nativeSrc": "7278:24:12",
													"nodeType": "YulBlock",
													"src": "7278:24:12",
													"statements": [
														{
															"nativeSrc": "7288:8:12",
															"nodeType": "YulAssignment",
															"src": "7288:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "7295:1:12",
																"nodeType": "YulLiteral",
																"src": "7295:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7288:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "7229:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7274:3:12",
														"nodeType": "YulTypedName",
														"src": "7274:3:12",
														"type": ""
													}
												],
												"src": "7229:73:12"
											},
											{
												"body": {
													"nativeSrc": "7361:136:12",
													"nodeType": "YulBlock",
													"src": "7361:136:12",
													"statements": [
														{
															"nativeSrc": "7371:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7371:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "7385:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "7385:30:12"
																},
																"nativeSrc": "7385:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7385:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "7375:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7375:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7470:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7470:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7476:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7476:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7484:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7484:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "7426:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7426:43:12"
																},
																"nativeSrc": "7426:65:12",
																"nodeType": "YulFunctionCall",
																"src": "7426:65:12"
															},
															"nativeSrc": "7426:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "7426:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "7308:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7347:4:12",
														"nodeType": "YulTypedName",
														"src": "7347:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7353:6:12",
														"nodeType": "YulTypedName",
														"src": "7353:6:12",
														"type": ""
													}
												],
												"src": "7308:189:12"
											},
											{
												"body": {
													"nativeSrc": "7553:136:12",
													"nodeType": "YulBlock",
													"src": "7553:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7620:63:12",
																"nodeType": "YulBlock",
																"src": "7620:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7664:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "7664:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7671:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7671:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7634:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "7634:29:12"
																			},
																			"nativeSrc": "7634:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7634:39:12"
																		},
																		"nativeSrc": "7634:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7634:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7573:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7573:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7580:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7580:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7570:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7570:2:12"
																},
																"nativeSrc": "7570:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7570:14:12"
															},
															"nativeSrc": "7563:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7585:26:12",
																"nodeType": "YulBlock",
																"src": "7585:26:12",
																"statements": [
																	{
																		"nativeSrc": "7587:22:12",
																		"nodeType": "YulAssignment",
																		"src": "7587:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7600:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "7600:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7607:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7607:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7596:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7596:3:12"
																			},
																			"nativeSrc": "7596:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7596:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7587:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7587:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7567:2:12",
																"nodeType": "YulBlock",
																"src": "7567:2:12",
																"statements": []
															},
															"src": "7563:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7503:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7541:5:12",
														"nodeType": "YulTypedName",
														"src": "7541:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7548:3:12",
														"nodeType": "YulTypedName",
														"src": "7548:3:12",
														"type": ""
													}
												],
												"src": "7503:186:12"
											},
											{
												"body": {
													"nativeSrc": "7774:464:12",
													"nodeType": "YulBlock",
													"src": "7774:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7800:431:12",
																"nodeType": "YulBlock",
																"src": "7800:431:12",
																"statements": [
																	{
																		"nativeSrc": "7814:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7814:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7862:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "7862:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7830:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "7830:31:12"
																			},
																			"nativeSrc": "7830:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7830:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7818:8:12",
																				"nodeType": "YulTypedName",
																				"src": "7818:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7881:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7881:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7904:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "7904:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7932:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "7932:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7914:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "7914:17:12"
																					},
																					"nativeSrc": "7914:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7914:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7900:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7900:3:12"
																			},
																			"nativeSrc": "7900:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7900:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7885:11:12",
																				"nodeType": "YulTypedName",
																				"src": "7885:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8101:27:12",
																			"nodeType": "YulBlock",
																			"src": "8101:27:12",
																			"statements": [
																				{
																					"nativeSrc": "8103:23:12",
																					"nodeType": "YulAssignment",
																					"src": "8103:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "8118:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "8118:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "8103:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "8103:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "8085:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "8085:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8097:2:12",
																					"nodeType": "YulLiteral",
																					"src": "8097:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8082:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8082:2:12"
																			},
																			"nativeSrc": "8082:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8082:18:12"
																		},
																		"nativeSrc": "8079:49:12",
																		"nodeType": "YulIf",
																		"src": "8079:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "8170:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "8170:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "8187:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "8187:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8215:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8215:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "8197:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "8197:17:12"
																							},
																							"nativeSrc": "8197:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8197:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8183:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8183:3:12"
																					},
																					"nativeSrc": "8183:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8183:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "8141:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "8141:28:12"
																			},
																			"nativeSrc": "8141:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8141:80:12"
																		},
																		"nativeSrc": "8141:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8141:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7791:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7791:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7796:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7796:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7788:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7788:2:12"
																},
																"nativeSrc": "7788:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7788:11:12"
															},
															"nativeSrc": "7785:446:12",
															"nodeType": "YulIf",
															"src": "7785:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7695:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7750:5:12",
														"nodeType": "YulTypedName",
														"src": "7750:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7757:3:12",
														"nodeType": "YulTypedName",
														"src": "7757:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7762:10:12",
														"nodeType": "YulTypedName",
														"src": "7762:10:12",
														"type": ""
													}
												],
												"src": "7695:543:12"
											},
											{
												"body": {
													"nativeSrc": "8307:54:12",
													"nodeType": "YulBlock",
													"src": "8307:54:12",
													"statements": [
														{
															"nativeSrc": "8317:37:12",
															"nodeType": "YulAssignment",
															"src": "8317:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "8342:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8342:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8348:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8348:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8338:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8338:3:12"
																},
																"nativeSrc": "8338:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8338:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8317:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "8317:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "8244:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "8282:4:12",
														"nodeType": "YulTypedName",
														"src": "8282:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "8288:5:12",
														"nodeType": "YulTypedName",
														"src": "8288:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8298:8:12",
														"nodeType": "YulTypedName",
														"src": "8298:8:12",
														"type": ""
													}
												],
												"src": "8244:117:12"
											},
											{
												"body": {
													"nativeSrc": "8418:118:12",
													"nodeType": "YulBlock",
													"src": "8418:118:12",
													"statements": [
														{
															"nativeSrc": "8428:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8428:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8477:1:12",
																						"nodeType": "YulLiteral",
																						"src": "8477:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8480:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "8480:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8473:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8473:3:12"
																				},
																				"nativeSrc": "8473:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8473:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8492:1:12",
																						"nodeType": "YulLiteral",
																						"src": "8492:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8488:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8488:3:12"
																				},
																				"nativeSrc": "8488:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8488:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8444:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "8444:28:12"
																		},
																		"nativeSrc": "8444:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8444:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8440:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8440:3:12"
																},
																"nativeSrc": "8440:56:12",
																"nodeType": "YulFunctionCall",
																"src": "8440:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8432:4:12",
																	"nodeType": "YulTypedName",
																	"src": "8432:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8505:25:12",
															"nodeType": "YulAssignment",
															"src": "8505:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8519:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8519:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8525:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8525:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8515:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8515:3:12"
																},
																"nativeSrc": "8515:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8515:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8505:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8505:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "8367:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8395:4:12",
														"nodeType": "YulTypedName",
														"src": "8395:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "8401:5:12",
														"nodeType": "YulTypedName",
														"src": "8401:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8411:6:12",
														"nodeType": "YulTypedName",
														"src": "8411:6:12",
														"type": ""
													}
												],
												"src": "8367:169:12"
											},
											{
												"body": {
													"nativeSrc": "8622:214:12",
													"nodeType": "YulBlock",
													"src": "8622:214:12",
													"statements": [
														{
															"nativeSrc": "8755:37:12",
															"nodeType": "YulAssignment",
															"src": "8755:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8782:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8782:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8788:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8788:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8763:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "8763:18:12"
																},
																"nativeSrc": "8763:29:12",
																"nodeType": "YulFunctionCall",
																"src": "8763:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8755:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8755:4:12"
																}
															]
														},
														{
															"nativeSrc": "8801:29:12",
															"nodeType": "YulAssignment",
															"src": "8801:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8812:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8812:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8822:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8822:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8825:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8825:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8818:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8818:3:12"
																		},
																		"nativeSrc": "8818:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8818:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8809:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8809:2:12"
																},
																"nativeSrc": "8809:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8809:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8801:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8801:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8541:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8603:4:12",
														"nodeType": "YulTypedName",
														"src": "8603:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8609:3:12",
														"nodeType": "YulTypedName",
														"src": "8609:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8617:4:12",
														"nodeType": "YulTypedName",
														"src": "8617:4:12",
														"type": ""
													}
												],
												"src": "8541:295:12"
											},
											{
												"body": {
													"nativeSrc": "8933:1303:12",
													"nodeType": "YulBlock",
													"src": "8933:1303:12",
													"statements": [
														{
															"nativeSrc": "8944:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8944:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8991:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8991:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8958:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "8958:32:12"
																},
																"nativeSrc": "8958:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8958:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8948:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8948:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9080:22:12",
																"nodeType": "YulBlock",
																"src": "9080:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9082:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9082:16:12"
																			},
																			"nativeSrc": "9082:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9082:18:12"
																		},
																		"nativeSrc": "9082:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9082:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9052:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9052:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9060:18:12",
																		"nodeType": "YulLiteral",
																		"src": "9060:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9049:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9049:2:12"
																},
																"nativeSrc": "9049:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9049:30:12"
															},
															"nativeSrc": "9046:56:12",
															"nodeType": "YulIf",
															"src": "9046:56:12"
														},
														{
															"nativeSrc": "9112:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9112:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "9158:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9158:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "9152:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "9152:5:12"
																		},
																		"nativeSrc": "9152:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9152:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "9126:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "9126:25:12"
																},
																"nativeSrc": "9126:38:12",
																"nodeType": "YulFunctionCall",
																"src": "9126:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "9116:6:12",
																	"nodeType": "YulTypedName",
																	"src": "9116:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9257:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9257:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "9263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9263:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9271:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "9211:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "9211:45:12"
																},
																"nativeSrc": "9211:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9211:67:12"
															},
															"nativeSrc": "9211:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "9211:67:12"
														},
														{
															"nativeSrc": "9288:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9288:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "9305:1:12",
																"nodeType": "YulLiteral",
																"src": "9305:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9292:9:12",
																	"nodeType": "YulTypedName",
																	"src": "9292:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9316:17:12",
															"nodeType": "YulAssignment",
															"src": "9316:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "9329:4:12",
																"nodeType": "YulLiteral",
																"src": "9329:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9316:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "9316:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9380:611:12",
																		"nodeType": "YulBlock",
																		"src": "9380:611:12",
																		"statements": [
																			{
																				"nativeSrc": "9394:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9394:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9413:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "9413:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9425:4:12",
																									"nodeType": "YulLiteral",
																									"src": "9425:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9421:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "9421:3:12"
																							},
																							"nativeSrc": "9421:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9421:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9409:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "9409:3:12"
																					},
																					"nativeSrc": "9409:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9409:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9398:7:12",
																						"nodeType": "YulTypedName",
																						"src": "9398:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9445:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9445:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9491:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9491:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9459:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "9459:31:12"
																					},
																					"nativeSrc": "9459:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9459:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9449:6:12",
																						"nodeType": "YulTypedName",
																						"src": "9449:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9509:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9509:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9518:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9518:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9513:1:12",
																						"nodeType": "YulTypedName",
																						"src": "9513:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9577:163:12",
																					"nodeType": "YulBlock",
																					"src": "9577:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9602:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "9602:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9620:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "9620:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9625:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "9625:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9616:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "9616:3:12"
																												},
																												"nativeSrc": "9616:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "9616:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9610:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "9610:5:12"
																										},
																										"nativeSrc": "9610:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9610:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9595:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9595:6:12"
																								},
																								"nativeSrc": "9595:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9595:42:12"
																							},
																							"nativeSrc": "9595:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "9595:42:12"
																						},
																						{
																							"nativeSrc": "9654:24:12",
																							"nodeType": "YulAssignment",
																							"src": "9654:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9668:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "9668:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9676:1:12",
																										"nodeType": "YulLiteral",
																										"src": "9676:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9664:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "9664:3:12"
																								},
																								"nativeSrc": "9664:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9664:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9654:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9654:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9695:31:12",
																							"nodeType": "YulAssignment",
																							"src": "9695:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9712:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "9712:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9723:2:12",
																										"nodeType": "YulLiteral",
																										"src": "9723:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9708:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "9708:3:12"
																								},
																								"nativeSrc": "9708:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9708:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9695:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "9695:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9543:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "9543:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9546:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "9546:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9540:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "9540:2:12"
																					},
																					"nativeSrc": "9540:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9540:14:12"
																				},
																				"nativeSrc": "9532:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9555:21:12",
																					"nodeType": "YulBlock",
																					"src": "9555:21:12",
																					"statements": [
																						{
																							"nativeSrc": "9557:17:12",
																							"nodeType": "YulAssignment",
																							"src": "9557:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9566:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "9566:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9569:4:12",
																										"nodeType": "YulLiteral",
																										"src": "9569:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9562:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "9562:3:12"
																								},
																								"nativeSrc": "9562:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9562:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9557:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "9557:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9536:3:12",
																					"nodeType": "YulBlock",
																					"src": "9536:3:12",
																					"statements": []
																				},
																				"src": "9532:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "9776:156:12",
																					"nodeType": "YulBlock",
																					"src": "9776:156:12",
																					"statements": [
																						{
																							"nativeSrc": "9794:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9794:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9821:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "9821:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9826:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "9826:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9817:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "9817:3:12"
																										},
																										"nativeSrc": "9817:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9817:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9811:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9811:5:12"
																								},
																								"nativeSrc": "9811:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9811:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9798:9:12",
																									"nodeType": "YulTypedName",
																									"src": "9798:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9861:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "9861:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9888:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "9888:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9903:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "9903:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9911:4:12",
																														"nodeType": "YulLiteral",
																														"src": "9911:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9899:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "9899:3:12"
																												},
																												"nativeSrc": "9899:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "9899:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9869:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "9869:18:12"
																										},
																										"nativeSrc": "9869:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9869:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9854:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9854:6:12"
																								},
																								"nativeSrc": "9854:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9854:64:12"
																							},
																							"nativeSrc": "9854:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "9854:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9759:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "9759:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9768:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "9768:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9756:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "9756:2:12"
																					},
																					"nativeSrc": "9756:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9756:19:12"
																				},
																				"nativeSrc": "9753:179:12",
																				"nodeType": "YulIf",
																				"src": "9753:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9952:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9952:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9966:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "9966:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9974:1:12",
																											"nodeType": "YulLiteral",
																											"src": "9974:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9962:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "9962:3:12"
																									},
																									"nativeSrc": "9962:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "9962:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9978:1:12",
																									"nodeType": "YulLiteral",
																									"src": "9978:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9958:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "9958:3:12"
																							},
																							"nativeSrc": "9958:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9958:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9945:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9945:6:12"
																					},
																					"nativeSrc": "9945:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9945:36:12"
																				},
																				"nativeSrc": "9945:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9945:36:12"
																			}
																		]
																	},
																	"nativeSrc": "9373:618:12",
																	"nodeType": "YulCase",
																	"src": "9373:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9378:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9378:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10008:222:12",
																		"nodeType": "YulBlock",
																		"src": "10008:222:12",
																		"statements": [
																			{
																				"nativeSrc": "10022:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10022:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10035:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10035:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10026:5:12",
																						"nodeType": "YulTypedName",
																						"src": "10026:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10059:67:12",
																					"nodeType": "YulBlock",
																					"src": "10059:67:12",
																					"statements": [
																						{
																							"nativeSrc": "10077:35:12",
																							"nodeType": "YulAssignment",
																							"src": "10077:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10096:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "10096:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10101:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "10101:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10092:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "10092:3:12"
																										},
																										"nativeSrc": "10092:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "10092:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10086:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "10086:5:12"
																								},
																								"nativeSrc": "10086:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "10086:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10077:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "10077:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10052:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10052:6:12"
																				},
																				"nativeSrc": "10049:77:12",
																				"nodeType": "YulIf",
																				"src": "10049:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10146:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "10146:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10205:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "10205:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10212:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "10212:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10152:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "10152:52:12"
																							},
																							"nativeSrc": "10152:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "10152:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10139:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10139:6:12"
																					},
																					"nativeSrc": "10139:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "10139:81:12"
																				},
																				"nativeSrc": "10139:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "10139:81:12"
																			}
																		]
																	},
																	"nativeSrc": "10000:230:12",
																	"nodeType": "YulCase",
																	"src": "10000:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9353:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9353:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9361:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9361:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9350:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9350:2:12"
																},
																"nativeSrc": "9350:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9350:14:12"
															},
															"nativeSrc": "9343:887:12",
															"nodeType": "YulSwitch",
															"src": "9343:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8841:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8922:4:12",
														"nodeType": "YulTypedName",
														"src": "8922:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8928:3:12",
														"nodeType": "YulTypedName",
														"src": "8928:3:12",
														"type": ""
													}
												],
												"src": "8841:1395:12"
											},
											{
												"body": {
													"nativeSrc": "10295:32:12",
													"nodeType": "YulBlock",
													"src": "10295:32:12",
													"statements": [
														{
															"nativeSrc": "10305:16:12",
															"nodeType": "YulAssignment",
															"src": "10305:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "10316:5:12",
																"nodeType": "YulIdentifier",
																"src": "10316:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10305:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "10305:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "10242:85:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10277:5:12",
														"nodeType": "YulTypedName",
														"src": "10277:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10287:7:12",
														"nodeType": "YulTypedName",
														"src": "10287:7:12",
														"type": ""
													}
												],
												"src": "10242:85:12"
											},
											{
												"body": {
													"nativeSrc": "10401:90:12",
													"nodeType": "YulBlock",
													"src": "10401:90:12",
													"statements": [
														{
															"nativeSrc": "10411:74:12",
															"nodeType": "YulAssignment",
															"src": "10411:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10477:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10477:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "10451:25:12",
																					"nodeType": "YulIdentifier",
																					"src": "10451:25:12"
																				},
																				"nativeSrc": "10451:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10451:32:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10442:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "10442:8:12"
																		},
																		"nativeSrc": "10442:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10442:42:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10424:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10424:17:12"
																},
																"nativeSrc": "10424:61:12",
																"nodeType": "YulFunctionCall",
																"src": "10424:61:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10411:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "10411:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "10333:158:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10381:5:12",
														"nodeType": "YulTypedName",
														"src": "10381:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10391:9:12",
														"nodeType": "YulTypedName",
														"src": "10391:9:12",
														"type": ""
													}
												],
												"src": "10333:158:12"
											},
											{
												"body": {
													"nativeSrc": "10570:74:12",
													"nodeType": "YulBlock",
													"src": "10570:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10587:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10587:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10631:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10631:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "10592:38:12",
																			"nodeType": "YulIdentifier",
																			"src": "10592:38:12"
																		},
																		"nativeSrc": "10592:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10592:45:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10580:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10580:6:12"
																},
																"nativeSrc": "10580:58:12",
																"nodeType": "YulFunctionCall",
																"src": "10580:58:12"
															},
															"nativeSrc": "10580:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "10580:58:12"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "10497:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10558:5:12",
														"nodeType": "YulTypedName",
														"src": "10558:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10565:3:12",
														"nodeType": "YulTypedName",
														"src": "10565:3:12",
														"type": ""
													}
												],
												"src": "10497:147:12"
											},
											{
												"body": {
													"nativeSrc": "10756:132:12",
													"nodeType": "YulBlock",
													"src": "10756:132:12",
													"statements": [
														{
															"nativeSrc": "10766:26:12",
															"nodeType": "YulAssignment",
															"src": "10766:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10778:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10778:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10789:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10789:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10774:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10774:3:12"
																},
																"nativeSrc": "10774:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10774:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10766:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10766:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10854:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10854:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10867:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10867:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10878:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10878:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10863:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10863:3:12"
																		},
																		"nativeSrc": "10863:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10863:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10802:51:12",
																	"nodeType": "YulIdentifier",
																	"src": "10802:51:12"
																},
																"nativeSrc": "10802:79:12",
																"nodeType": "YulFunctionCall",
																"src": "10802:79:12"
															},
															"nativeSrc": "10802:79:12",
															"nodeType": "YulExpressionStatement",
															"src": "10802:79:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10650:238:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10728:9:12",
														"nodeType": "YulTypedName",
														"src": "10728:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10740:6:12",
														"nodeType": "YulTypedName",
														"src": "10740:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10751:4:12",
														"nodeType": "YulTypedName",
														"src": "10751:4:12",
														"type": ""
													}
												],
												"src": "10650:238:12"
											},
											{
												"body": {
													"nativeSrc": "10990:73:12",
													"nodeType": "YulBlock",
													"src": "10990:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11007:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11007:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11012:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11012:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11000:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11000:6:12"
																},
																"nativeSrc": "11000:19:12",
																"nodeType": "YulFunctionCall",
																"src": "11000:19:12"
															},
															"nativeSrc": "11000:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "11000:19:12"
														},
														{
															"nativeSrc": "11028:29:12",
															"nodeType": "YulAssignment",
															"src": "11028:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11047:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11047:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11052:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11052:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11043:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11043:3:12"
																},
																"nativeSrc": "11043:14:12",
																"nodeType": "YulFunctionCall",
																"src": "11043:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11028:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "11028:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10894:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10962:3:12",
														"nodeType": "YulTypedName",
														"src": "10962:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10967:6:12",
														"nodeType": "YulTypedName",
														"src": "10967:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10978:11:12",
														"nodeType": "YulTypedName",
														"src": "10978:11:12",
														"type": ""
													}
												],
												"src": "10894:169:12"
											},
											{
												"body": {
													"nativeSrc": "11175:71:12",
													"nodeType": "YulBlock",
													"src": "11175:71:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11197:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11197:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11205:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11205:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11193:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11193:3:12"
																		},
																		"nativeSrc": "11193:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11193:14:12"
																	},
																	{
																		"hexValue": "496e76616c69642062656e65666963696172792061646472657373",
																		"kind": "string",
																		"nativeSrc": "11209:29:12",
																		"nodeType": "YulLiteral",
																		"src": "11209:29:12",
																		"type": "",
																		"value": "Invalid beneficiary address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11186:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11186:6:12"
																},
																"nativeSrc": "11186:53:12",
																"nodeType": "YulFunctionCall",
																"src": "11186:53:12"
															},
															"nativeSrc": "11186:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "11186:53:12"
														}
													]
												},
												"name": "store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
												"nativeSrc": "11069:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11167:6:12",
														"nodeType": "YulTypedName",
														"src": "11167:6:12",
														"type": ""
													}
												],
												"src": "11069:177:12"
											},
											{
												"body": {
													"nativeSrc": "11398:220:12",
													"nodeType": "YulBlock",
													"src": "11398:220:12",
													"statements": [
														{
															"nativeSrc": "11408:74:12",
															"nodeType": "YulAssignment",
															"src": "11408:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11474:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11474:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11479:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11479:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11415:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11415:58:12"
																},
																"nativeSrc": "11415:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11415:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11408:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11408:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11580:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11580:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
																	"nativeSrc": "11491:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11491:88:12"
																},
																"nativeSrc": "11491:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11491:93:12"
															},
															"nativeSrc": "11491:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11491:93:12"
														},
														{
															"nativeSrc": "11593:19:12",
															"nodeType": "YulAssignment",
															"src": "11593:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11604:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11604:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11609:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11609:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11600:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11600:3:12"
																},
																"nativeSrc": "11600:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11600:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11593:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11593:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11252:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11386:3:12",
														"nodeType": "YulTypedName",
														"src": "11386:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11394:3:12",
														"nodeType": "YulTypedName",
														"src": "11394:3:12",
														"type": ""
													}
												],
												"src": "11252:366:12"
											},
											{
												"body": {
													"nativeSrc": "11795:248:12",
													"nodeType": "YulBlock",
													"src": "11795:248:12",
													"statements": [
														{
															"nativeSrc": "11805:26:12",
															"nodeType": "YulAssignment",
															"src": "11805:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11817:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11817:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11828:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11828:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11813:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11813:3:12"
																},
																"nativeSrc": "11813:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11813:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11805:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11805:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11852:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11852:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11863:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11863:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11848:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11848:3:12"
																		},
																		"nativeSrc": "11848:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11848:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11871:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11871:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11877:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11877:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11867:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11867:3:12"
																		},
																		"nativeSrc": "11867:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11867:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11841:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11841:6:12"
																},
																"nativeSrc": "11841:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11841:47:12"
															},
															"nativeSrc": "11841:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11841:47:12"
														},
														{
															"nativeSrc": "11897:139:12",
															"nodeType": "YulAssignment",
															"src": "11897:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12031:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12031:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11905:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11905:124:12"
																},
																"nativeSrc": "11905:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11905:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11897:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11897:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11624:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11775:9:12",
														"nodeType": "YulTypedName",
														"src": "11775:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11790:4:12",
														"nodeType": "YulTypedName",
														"src": "11790:4:12",
														"type": ""
													}
												],
												"src": "11624:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid beneficiary address\")\n\n    }\n\n    function abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b506040516141f83803806141f88339818101604052810190610031919061068b565b82868681600390816100439190610950565b5080600490816100539190610950565b5050505f810361009a575f6040517f392e1e270000000000000000000000000000000000000000000000000000000081526004016100919190610a58565b60405180910390fd5b80608081815250505060016006819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011090610acb565b60405180910390fd5b8360075f6101000a81548160ff021916908360ff1602179055508160088190555080600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101cc5f801b3361029e60201b60201c565b506101fd7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63361029e60201b60201c565b5061022e7fdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db73361029e60201b60201c565b506102617f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a65f801b61039460201b60201c565b6102937fdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db75f801b61039460201b60201c565b505050505050610ae9565b5f6102af83836103f360201b60201c565b61038a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061032761045760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061038e565b5f90505b92915050565b5f6103a48361045e60201b60201c565b90508160055f8581526020019081526020015f20600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f60055f8381526020019081526020015f20600101549050919050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6104da82610494565b810181811067ffffffffffffffff821117156104f9576104f86104a4565b5b80604052505050565b5f61050b61047b565b905061051782826104d1565b919050565b5f67ffffffffffffffff821115610536576105356104a4565b5b61053f82610494565b9050602081019050919050565b8281835e5f83830152505050565b5f61056c6105678461051c565b610502565b90508281526020810184848401111561058857610587610490565b5b61059384828561054c565b509392505050565b5f82601f8301126105af576105ae61048c565b5b81516105bf84826020860161055a565b91505092915050565b5f60ff82169050919050565b6105dd816105c8565b81146105e7575f80fd5b50565b5f815190506105f8816105d4565b92915050565b5f819050919050565b610610816105fe565b811461061a575f80fd5b50565b5f8151905061062b81610607565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61065a82610631565b9050919050565b61066a81610650565b8114610674575f80fd5b50565b5f8151905061068581610661565b92915050565b5f805f805f8060c087890312156106a5576106a4610484565b5b5f87015167ffffffffffffffff8111156106c2576106c1610488565b5b6106ce89828a0161059b565b965050602087015167ffffffffffffffff8111156106ef576106ee610488565b5b6106fb89828a0161059b565b955050604061070c89828a016105ea565b945050606061071d89828a0161061d565b935050608061072e89828a0161061d565b92505060a061073f89828a01610677565b9150509295509295509295565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061079a57607f821691505b6020821081036107ad576107ac610756565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261080f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107d4565b61081986836107d4565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61085461084f61084a846105fe565b610831565b6105fe565b9050919050565b5f819050919050565b61086d8361083a565b6108816108798261085b565b8484546107e0565b825550505050565b5f90565b610895610889565b6108a0818484610864565b505050565b5b818110156108c3576108b85f8261088d565b6001810190506108a6565b5050565b601f821115610908576108d9816107b3565b6108e2846107c5565b810160208510156108f1578190505b6109056108fd856107c5565b8301826108a5565b50505b505050565b5f82821c905092915050565b5f6109285f198460080261090d565b1980831691505092915050565b5f6109408383610919565b9150826002028217905092915050565b6109598261074c565b67ffffffffffffffff811115610972576109716104a4565b5b61097c8254610783565b6109878282856108c7565b5f60209050601f8311600181146109b8575f84156109a6578287015190505b6109b08582610935565b865550610a17565b601f1984166109c6866107b3565b5f5b828110156109ed578489015182556001820191506020850194506020810190506109c8565b86831015610a0a5784890151610a06601f891682610919565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b5f610a42610a3d610a3884610a1f565b610831565b6105fe565b9050919050565b610a5281610a28565b82525050565b5f602082019050610a6b5f830184610a49565b92915050565b5f82825260208201905092915050565b7f496e76616c69642062656e6566696369617279206164647265737300000000005f82015250565b5f610ab5601b83610a71565b9150610ac082610a81565b602082019050919050565b5f6020820190508181035f830152610ae281610aa9565b9050919050565b6080516136f7610b015f395f610c6101526136f75ff3fe608060405260043610610207575f3560e01c806391d1485411610117578063d5dd4c021161009f578063ed831fa41161006e578063ed831fa4146107b6578063f2f2a8ef146107de578063f2fde38b14610808578063f9c8dec314610830578063fb4900fc1461085a5761020e565b8063d5dd4c02146106ec578063d8326a1814610714578063d9d616551461073e578063dd62ed3e1461077a5761020e565b8063a9059cbb116100e6578063a9059cbb146105fa578063a9eb3f9914610636578063b4c7f1ed1461065e578063d53913931461069a578063d547741f146106c45761020e565b806391d148541461054257806395d89b411461057e578063983b2d56146105a8578063a217fddf146105d05761020e565b80632c4e722e1161019a57806336568abe1161016957806336568abe14610460578063565a2e2c14610488578063629044d2146104b257806370a08231146104dc5780638da5cb5b146105185761020e565b80632c4e722e146103ba5780632f2ff15d146103e4578063313ce5671461040c578063355274ea146104365761020e565b806318160ddd116101d657806318160ddd146102dc57806323b872dd14610306578063248a9ca314610342578063263719c11461037e5761020e565b806301ffc9a71461021257806305ab421d1461024e57806306fdde0314610276578063095ea7b3146102a05761020e565b3661020e57005b5f80fd5b34801561021d575f80fd5b5061023860048036038101906102339190612926565b610882565b604051610245919061296b565b60405180910390f35b348015610259575f80fd5b50610274600480360381019061026f9190612a11565b6108fb565b005b348015610281575f80fd5b5061028a610a06565b6040516102979190612abf565b60405180910390f35b3480156102ab575f80fd5b506102c660048036038101906102c19190612a11565b610a96565b6040516102d3919061296b565b60405180910390f35b3480156102e7575f80fd5b506102f0610ab8565b6040516102fd9190612aee565b60405180910390f35b348015610311575f80fd5b5061032c60048036038101906103279190612b07565b610ac1565b604051610339919061296b565b60405180910390f35b34801561034d575f80fd5b5061036860048036038101906103639190612b8a565b610aef565b6040516103759190612bc4565b60405180910390f35b348015610389575f80fd5b506103a4600480360381019061039f9190612a11565b610b0c565b6040516103b1919061296b565b60405180910390f35b3480156103c5575f80fd5b506103ce610c1e565b6040516103db9190612aee565b60405180910390f35b3480156103ef575f80fd5b5061040a60048036038101906104059190612bdd565b610c27565b005b348015610417575f80fd5b50610420610c49565b60405161042d9190612c36565b60405180910390f35b348015610441575f80fd5b5061044a610c5e565b6040516104579190612aee565b60405180910390f35b34801561046b575f80fd5b5061048660048036038101906104819190612bdd565b610c85565b005b348015610493575f80fd5b5061049c610d00565b6040516104a99190612c5e565b60405180910390f35b3480156104bd575f80fd5b506104c6610d28565b6040516104d39190612aee565b60405180910390f35b3480156104e7575f80fd5b5061050260048036038101906104fd9190612c77565b610d34565b60405161050f9190612aee565b60405180910390f35b348015610523575f80fd5b5061052c610d79565b6040516105399190612cc2565b60405180910390f35b34801561054d575f80fd5b5061056860048036038101906105639190612bdd565b610da1565b604051610575919061296b565b60405180910390f35b348015610589575f80fd5b50610592610e05565b60405161059f9190612abf565b60405180910390f35b3480156105b3575f80fd5b506105ce60048036038101906105c99190612c77565b610e95565b005b3480156105db575f80fd5b506105e4610f62565b6040516105f19190612bc4565b60405180910390f35b348015610605575f80fd5b50610620600480360381019061061b9190612a11565b610f68565b60405161062d919061296b565b60405180910390f35b348015610641575f80fd5b5061065c60048036038101906106579190612c77565b610f94565b005b348015610669575f80fd5b50610684600480360381019061067f9190612c77565b611017565b604051610691919061296b565b60405180910390f35b3480156106a5575f80fd5b506106ae611069565b6040516106bb9190612bc4565b60405180910390f35b3480156106cf575f80fd5b506106ea60048036038101906106e59190612bdd565b61108d565b005b3480156106f7575f80fd5b50610712600480360381019061070d9190612d05565b6110af565b005b34801561071f575f80fd5b50610728611107565b604051610735919061296b565b60405180910390f35b348015610749575f80fd5b50610764600480360381019061075f9190612c77565b61111d565b604051610771919061296b565b60405180910390f35b348015610785575f80fd5b506107a0600480360381019061079b9190612d30565b61116f565b6040516107ad9190612aee565b60405180910390f35b3480156107c1575f80fd5b506107dc60048036038101906107d79190612c77565b6111f1565b005b3480156107e9575f80fd5b506107f261177c565b6040516107ff9190612e25565b60405180910390f35b348015610813575f80fd5b5061082e60048036038101906108299190612c77565b611807565b005b34801561083b575f80fd5b50610844611947565b6040516108519190612bc4565b60405180910390f35b348015610865575f80fd5b50610880600480360381019061087b9190612c77565b61196b565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108f457506108f382611c40565b5b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661092581611ca9565b61092d611cbd565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361099b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099290612e8f565b60405180910390fd5b5f82116109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d490612ef7565b60405180910390fd5b5f600854836109ec9190612f42565b90506109f88482611d0c565b50610a01611d8b565b505050565b606060038054610a1590612fb0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4190612fb0565b8015610a8c5780601f10610a6357610100808354040283529160200191610a8c565b820191905f5260205f20905b815481529060010190602001808311610a6f57829003601f168201915b5050505050905090565b5f80610aa0611d95565b9050610aad818585611d9c565b600191505092915050565b5f600254905090565b5f610acc8484611dae565b5f610ad8858585611f14565b9050610ae48585611f42565b809150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b5f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610b3781611ca9565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ba5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9c90613050565b60405180910390fd5b610baf8484611ff9565b5f610bb985610d34565b03610c13575f600e5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b600191505092915050565b5f600854905090565b610c3082610aef565b610c3981611ca9565b610c438383612078565b50505050565b5f60075f9054906101000a900460ff16905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b610c8d611d95565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cf1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cfb8282612162565b505050565b5f600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f600b80549050905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610e1490612fb0565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4090612fb0565b8015610e8b5780601f10610e6257610100808354040283529160200191610e8b565b820191905f5260205f20905b815481529060010190602001808311610e6e57829003601f168201915b5050505050905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1b906130de565b60405180910390fd5b610f2c611cbd565b610f567f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682612078565b50610f5f611d8b565b50565b5f801b81565b5f610f733384611dae565b5f610f7e848461224c565b9050610f8a3385611f42565b8091505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610fbe81611ca9565b6001600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61109682610aef565b61109f81611ca9565b6110a98383612162565b50505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66110d981611ca9565b6110e1611cbd565b81600a60146101000a81548160ff021916908315150217905550611103611d8b565b5050565b5f600a60149054906101000a900460ff16905090565b5f600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7fdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db761121b81611ca9565b611223611cbd565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166112ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a390613146565b60405180910390fd5b600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132d906131d4565b60405180910390fd5b5f600b80549050600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561142b578273ffffffffffffffffffffffffffffffffffffffff16600b600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054815481106113e9576113e86131f2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490505b8061146b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146290613269565b60405180910390fd5b5f6001600b8054905061147e9190613287565b905080600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541461165157600b81815481106114d8576114d76131f2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b600d5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481548110611551576115506131f2565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600d5f600b84815481106115eb576115ea6131f2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b600b805480611663576116626132ba565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555f600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508373ffffffffffffffffffffffffffffffffffffffff167f8ce60ec723c7fcc3c3f6b1ffaa7b814b03df348c312bb6e4192941716256566460405160405180910390a25050611778611d8b565b5050565b6060600b8054806020026020016040519081016040528092919081815260200182805480156117fd57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116117b4575b5050505050905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188d906130de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fb90613331565b60405180910390fd5b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7fdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db781565b7fdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db761199581611ca9565b61199d611cbd565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0290613399565b60405180910390fd5b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8c90613401565b60405180910390fd5b6001600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600b82908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b80549050611b5c9190613287565b600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fe82acf77c2686315e6aeaa43ccec710936b819cb5d01a31fadb2bf2a928c934260405160405180910390a2611c3c611d8b565b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611cba81611cb5611d95565b61226e565b50565b600260065403611d02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf990613469565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d7c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d739190612c5e565b60405180910390fd5b611d875f83836122bf565b5050565b6001600681905550565b5f33905090565b611da98383836001612362565b505050565b600a60149054906101000a900460ff1615611dfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df59061351d565b60405180910390fd5b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7e90613585565b60405180910390fd5b600c5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611f10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f07906135ed565b60405180910390fd5b5050565b5f80611f1e611d95565b9050611f2b858285612531565b611f368585856125c4565b60019150509392505050565b6001600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f611fa183610d34565b11600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612069575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016120609190612c5e565b60405180910390fd5b612074825f836122bf565b5050565b5f6120838383610da1565b61215857600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506120f5611d95565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061215c565b5f90505b92915050565b5f61216d8383610da1565b15612242575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506121df611d95565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050612246565b5f90505b92915050565b5f80612256611d95565b90506122638185856125c4565b600191505092915050565b6122788282610da1565b6122bb5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016122b292919061360b565b60405180910390fd5b5050565b6122ca8383836126b4565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361235d575f612306610c5e565b90505f612311610ab8565b90508181111561235a5780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401612351929190613632565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036123d2575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016123c99190612c5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612442575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016124399190612c5e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561252b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516125229190612aee565b60405180910390a35b50505050565b5f61253c848461116f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156125be57818110156125af578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016125a693929190613659565b60405180910390fd5b6125bd84848484035f612362565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612634575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161262b9190612c5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036126a4575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161269b9190612c5e565b60405180910390fd5b6126af8383836122bf565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612704578060025f8282546126f8919061368e565b925050819055506127d2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561278d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161278493929190613659565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612819578060025f8282540392505081905550612863565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128c09190612aee565b60405180910390a3505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612905816128d1565b811461290f575f80fd5b50565b5f81359050612920816128fc565b92915050565b5f6020828403121561293b5761293a6128cd565b5b5f61294884828501612912565b91505092915050565b5f8115159050919050565b61296581612951565b82525050565b5f60208201905061297e5f83018461295c565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6129ad82612984565b9050919050565b6129bd816129a3565b81146129c7575f80fd5b50565b5f813590506129d8816129b4565b92915050565b5f819050919050565b6129f0816129de565b81146129fa575f80fd5b50565b5f81359050612a0b816129e7565b92915050565b5f8060408385031215612a2757612a266128cd565b5b5f612a34858286016129ca565b9250506020612a45858286016129fd565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612a9182612a4f565b612a9b8185612a59565b9350612aab818560208601612a69565b612ab481612a77565b840191505092915050565b5f6020820190508181035f830152612ad78184612a87565b905092915050565b612ae8816129de565b82525050565b5f602082019050612b015f830184612adf565b92915050565b5f805f60608486031215612b1e57612b1d6128cd565b5b5f612b2b868287016129ca565b9350506020612b3c868287016129ca565b9250506040612b4d868287016129fd565b9150509250925092565b5f819050919050565b612b6981612b57565b8114612b73575f80fd5b50565b5f81359050612b8481612b60565b92915050565b5f60208284031215612b9f57612b9e6128cd565b5b5f612bac84828501612b76565b91505092915050565b612bbe81612b57565b82525050565b5f602082019050612bd75f830184612bb5565b92915050565b5f8060408385031215612bf357612bf26128cd565b5b5f612c0085828601612b76565b9250506020612c11858286016129ca565b9150509250929050565b5f60ff82169050919050565b612c3081612c1b565b82525050565b5f602082019050612c495f830184612c27565b92915050565b612c58816129a3565b82525050565b5f602082019050612c715f830184612c4f565b92915050565b5f60208284031215612c8c57612c8b6128cd565b5b5f612c99848285016129ca565b91505092915050565b5f612cac82612984565b9050919050565b612cbc81612ca2565b82525050565b5f602082019050612cd55f830184612cb3565b92915050565b612ce481612951565b8114612cee575f80fd5b50565b5f81359050612cff81612cdb565b92915050565b5f60208284031215612d1a57612d196128cd565b5b5f612d2784828501612cf1565b91505092915050565b5f8060408385031215612d4657612d456128cd565b5b5f612d53858286016129ca565b9250506020612d64858286016129ca565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612da0816129a3565b82525050565b5f612db18383612d97565b60208301905092915050565b5f602082019050919050565b5f612dd382612d6e565b612ddd8185612d78565b9350612de883612d88565b805f5b83811015612e18578151612dff8882612da6565b9750612e0a83612dbd565b925050600181019050612deb565b5085935050505092915050565b5f6020820190508181035f830152612e3d8184612dc9565b905092915050565b7f62757965722069732061207a65726f20616464726573730000000000000000005f82015250565b5f612e79601783612a59565b9150612e8482612e45565b602082019050919050565b5f6020820190508181035f830152612ea681612e6d565b9050919050565b7f776569416d6f756e7420697320300000000000000000000000000000000000005f82015250565b5f612ee1600e83612a59565b9150612eec82612ead565b602082019050919050565b5f6020820190508181035f830152612f0e81612ed5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612f4c826129de565b9150612f57836129de565b9250828202612f65816129de565b91508282048414831517612f7c57612f7b612f15565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612fc757607f821691505b602082108103612fda57612fd9612f83565b5b50919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61303a602183612a59565b915061304582612fe0565b604082019050919050565b5f6020820190508181035f8301526130678161302e565b9050919050565b7f4f6e6c7920746865204f776e65722063616e2063616c6c20746869732066756e5f8201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b5f6130c8602583612a59565b91506130d38261306e565b604082019050919050565b5f6020820190508181035f8301526130f5816130bc565b9050919050565b7f55736572206973206e6f74204b594365640000000000000000000000000000005f82015250565b5f613130601183612a59565b915061313b826130fc565b602082019050919050565b5f6020820190508181035f83015261315d81613124565b9050919050565b7f55736572206f776e7320746f6b656e732c2063616e6e6f742072656d6f7665205f8201527f66726f6d204b5943206c69737400000000000000000000000000000000000000602082015250565b5f6131be602d83612a59565b91506131c982613164565b604082019050919050565b5f6020820190508181035f8301526131eb816131b2565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f55736572206e6f7420666f756e6420696e204b5943206c6973740000000000005f82015250565b5f613253601a83612a59565b915061325e8261321f565b602082019050919050565b5f6020820190508181035f83015261328081613247565b9050919050565b5f613291826129de565b915061329c836129de565b92508282039050818111156132b4576132b3612f15565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f496e76616c6964206e6577206f776e657220616464726573732e0000000000005f82015250565b5f61331b601a83612a59565b9150613326826132e7565b602082019050919050565b5f6020820190508181035f8301526133488161330f565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f613383600f83612a59565b915061338e8261334f565b602082019050919050565b5f6020820190508181035f8301526133b081613377565b9050919050565b7f5573657220697320616c7265616479204b5943656400000000000000000000005f82015250565b5f6133eb601583612a59565b91506133f6826133b7565b602082019050919050565b5f6020820190508181035f830152613418816133df565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f613453601f83612a59565b915061345e8261341f565b602082019050919050565b5f6020820190508181035f83015261348081613447565b9050919050565b7f4469766964656e6420506572696f64206973206f6e676f696e672c20616c6c205f8201527f7472616e73666572732077696c6c20726573756d65206166746572206469766960208201527f64656e6420706572696f642e0000000000000000000000000000000000000000604082015250565b5f613507604c83612a59565b915061351282613487565b606082019050919050565b5f6020820190508181035f830152613534816134fb565b9050919050565b7f53656e646572206973206e6f74204b59436564000000000000000000000000005f82015250565b5f61356f601383612a59565b915061357a8261353b565b602082019050919050565b5f6020820190508181035f83015261359c81613563565b9050919050565b7f526563697069656e74206973206e6f74204b59436564000000000000000000005f82015250565b5f6135d7601683612a59565b91506135e2826135a3565b602082019050919050565b5f6020820190508181035f830152613604816135cb565b9050919050565b5f60408201905061361e5f830185612c4f565b61362b6020830184612bb5565b9392505050565b5f6040820190506136455f830185612adf565b6136526020830184612adf565b9392505050565b5f60608201905061366c5f830186612c4f565b6136796020830185612adf565b6136866040830184612adf565b949350505050565b5f613698826129de565b91506136a3836129de565b92508282019050808211156136bb576136ba612f15565b5b9291505056fea2646970667358221220f62b535c09414dc1ba0c918005917eb08c19d29319220f7ce4414627587dd4a364736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x41F8 CODESIZE SUB DUP1 PUSH2 0x41F8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x68B JUMP JUMPDEST DUP3 DUP7 DUP7 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x950 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x950 JUMP JUMPDEST POP POP POP PUSH0 DUP2 SUB PUSH2 0x9A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x392E1E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110 SWAP1 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1CC PUSH0 DUP1 SHL CALLER PUSH2 0x29E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1FD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x29E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x22E PUSH32 0xDB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7 CALLER PUSH2 0x29E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x261 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH0 DUP1 SHL PUSH2 0x394 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x293 PUSH32 0xDB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7 PUSH0 DUP1 SHL PUSH2 0x394 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH0 PUSH2 0x2AF DUP4 DUP4 PUSH2 0x3F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x38A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x327 PUSH2 0x457 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x38E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A4 DUP4 PUSH2 0x45E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP5 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x4DA DUP3 PUSH2 0x494 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x50B PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x517 DUP3 DUP3 PUSH2 0x4D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x536 JUMPI PUSH2 0x535 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH2 0x53F DUP3 PUSH2 0x494 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x56C PUSH2 0x567 DUP5 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x588 JUMPI PUSH2 0x587 PUSH2 0x490 JUMP JUMPDEST JUMPDEST PUSH2 0x593 DUP5 DUP3 DUP6 PUSH2 0x54C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5AF JUMPI PUSH2 0x5AE PUSH2 0x48C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x55A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DD DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F8 DUP2 PUSH2 0x5D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x5FE JUMP JUMPDEST DUP2 EQ PUSH2 0x61A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x62B DUP2 PUSH2 0x607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x65A DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66A DUP2 PUSH2 0x650 JUMP JUMPDEST DUP2 EQ PUSH2 0x674 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x685 DUP2 PUSH2 0x661 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6A5 JUMPI PUSH2 0x6A4 PUSH2 0x484 JUMP JUMPDEST JUMPDEST PUSH0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C2 JUMPI PUSH2 0x6C1 PUSH2 0x488 JUMP JUMPDEST JUMPDEST PUSH2 0x6CE DUP10 DUP3 DUP11 ADD PUSH2 0x59B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EE PUSH2 0x488 JUMP JUMPDEST JUMPDEST PUSH2 0x6FB DUP10 DUP3 DUP11 ADD PUSH2 0x59B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x70C DUP10 DUP3 DUP11 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x71D DUP10 DUP3 DUP11 ADD PUSH2 0x61D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x72E DUP10 DUP3 DUP11 ADD PUSH2 0x61D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x73F DUP10 DUP3 DUP11 ADD PUSH2 0x677 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x79A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7AD JUMPI PUSH2 0x7AC PUSH2 0x756 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x80F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x819 DUP7 DUP4 PUSH2 0x7D4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x854 PUSH2 0x84F PUSH2 0x84A DUP5 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86D DUP4 PUSH2 0x83A JUMP JUMPDEST PUSH2 0x881 PUSH2 0x879 DUP3 PUSH2 0x85B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7E0 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x895 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x8A0 DUP2 DUP5 DUP5 PUSH2 0x864 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8C3 JUMPI PUSH2 0x8B8 PUSH0 DUP3 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x8D9 DUP2 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x8E2 DUP5 PUSH2 0x7C5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8F1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x905 PUSH2 0x8FD DUP6 PUSH2 0x7C5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8A5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x928 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x90D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x940 DUP4 DUP4 PUSH2 0x919 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x959 DUP3 PUSH2 0x74C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x972 JUMPI PUSH2 0x971 PUSH2 0x4A4 JUMP JUMPDEST JUMPDEST PUSH2 0x97C DUP3 SLOAD PUSH2 0x783 JUMP JUMPDEST PUSH2 0x987 DUP3 DUP3 DUP6 PUSH2 0x8C7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9B8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9A6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9B0 DUP6 DUP3 PUSH2 0x935 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x9C6 DUP7 PUSH2 0x7B3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9ED JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9C8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA0A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA06 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x919 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA42 PUSH2 0xA3D PUSH2 0xA38 DUP5 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA52 DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA6B PUSH0 DUP4 ADD DUP5 PUSH2 0xA49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642062656E656669636961727920616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAB5 PUSH1 0x1B DUP4 PUSH2 0xA71 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC0 DUP3 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAE2 DUP2 PUSH2 0xAA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x36F7 PUSH2 0xB01 PUSH0 CODECOPY PUSH0 PUSH2 0xC61 ADD MSTORE PUSH2 0x36F7 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x207 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0xD5DD4C02 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xED831FA4 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xED831FA4 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xF2F2A8EF EQ PUSH2 0x7DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0xF9C8DEC3 EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0xFB4900FC EQ PUSH2 0x85A JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0xD5DD4C02 EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xD8326A18 EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xD9D61655 EQ PUSH2 0x73E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x77A JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xA9EB3F99 EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0xB4C7F1ED EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6C4 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5D0 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x565A2E2C EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x629044D2 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x518 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x436 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x263719C1 EQ PUSH2 0x37E JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x5AB421D EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A0 JUMPI PUSH2 0x20E JUMP JUMPDEST CALLDATASIZE PUSH2 0x20E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x2926 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2B07 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2B8A JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2C36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49C PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C6 PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52C PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x2CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x592 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0xE95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E4 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x605 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x620 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x641 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0xF94 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x684 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AE PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH2 0x10AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x728 PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x764 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x785 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79B SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x11F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F2 PUSH2 0x177C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x2E25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x813 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x82E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x1807 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x844 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x880 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x196B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8F4 JUMPI POP PUSH2 0x8F3 DUP3 PUSH2 0x1C40 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x925 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x92D PUSH2 0x1CBD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x992 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP1 PUSH2 0x2EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x2F42 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F8 DUP5 DUP3 PUSH2 0x1D0C JUMP JUMPDEST POP PUSH2 0xA01 PUSH2 0x1D8B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA15 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA41 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA8C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA63 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAA0 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP PUSH2 0xAAD DUP2 DUP6 DUP6 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xACC DUP5 DUP5 PUSH2 0x1DAE JUMP JUMPDEST PUSH0 PUSH2 0xAD8 DUP6 DUP6 DUP6 PUSH2 0x1F14 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE4 DUP6 DUP6 PUSH2 0x1F42 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xB37 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9C SWAP1 PUSH2 0x3050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAF DUP5 DUP5 PUSH2 0x1FF9 JUMP JUMPDEST PUSH0 PUSH2 0xBB9 DUP6 PUSH2 0xD34 JUMP JUMPDEST SUB PUSH2 0xC13 JUMPI PUSH0 PUSH1 0xE PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC30 DUP3 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0xC39 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0xC43 DUP4 DUP4 PUSH2 0x2078 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC8D PUSH2 0x1D95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFB DUP3 DUP3 PUSH2 0x2162 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE14 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE40 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE8B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE62 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE8B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE6E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP1 PUSH2 0x30DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF2C PUSH2 0x1CBD JUMP JUMPDEST PUSH2 0xF56 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x2078 JUMP JUMPDEST POP PUSH2 0xF5F PUSH2 0x1D8B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xF73 CALLER DUP5 PUSH2 0x1DAE JUMP JUMPDEST PUSH0 PUSH2 0xF7E DUP5 DUP5 PUSH2 0x224C JUMP JUMPDEST SWAP1 POP PUSH2 0xF8A CALLER DUP6 PUSH2 0x1F42 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xFBE DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1096 DUP3 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x109F DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x10A9 DUP4 DUP4 PUSH2 0x2162 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x10D9 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x1CBD JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1103 PUSH2 0x1D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xDB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7 PUSH2 0x121B DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x1223 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A3 SWAP1 PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB DUP1 SLOAD SWAP1 POP PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x142B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0x31F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP JUMPDEST DUP1 PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1462 SWAP1 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xB DUP1 SLOAD SWAP1 POP PUSH2 0x147E SWAP2 SWAP1 PUSH2 0x3287 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x1651 JUMPI PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14D8 JUMPI PUSH2 0x14D7 PUSH2 0x31F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH1 0xD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x31F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xD PUSH0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x31F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP1 PUSH2 0x1663 JUMPI PUSH2 0x1662 PUSH2 0x32BA JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH0 PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8CE60EC723C7FCC3C3F6B1FFAA7B814B03DF348C312BB6E41929417162565664 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1778 PUSH2 0x1D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x17FD JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x17B4 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1896 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188D SWAP1 PUSH2 0x30DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FB SWAP1 PUSH2 0x3331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0xDB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7 DUP2 JUMP JUMPDEST PUSH32 0xDB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7 PUSH2 0x1995 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x199D PUSH2 0x1CBD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A02 SWAP1 PUSH2 0x3399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8C SWAP1 PUSH2 0x3401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB DUP1 SLOAD SWAP1 POP PUSH2 0x1B5C SWAP2 SWAP1 PUSH2 0x3287 JUMP JUMPDEST PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE82ACF77C2686315E6AEAA43CCEC710936B819CB5D01A31FADB2BF2A928C9342 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1C3C PUSH2 0x1D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CBA DUP2 PUSH2 0x1CB5 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x226E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1D02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF9 SWAP1 PUSH2 0x3469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D7C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D73 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D87 PUSH0 DUP4 DUP4 PUSH2 0x22BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DA9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2362 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1DFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF5 SWAP1 PUSH2 0x351D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7E SWAP1 PUSH2 0x3585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F07 SWAP1 PUSH2 0x35ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1F1E PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F2B DUP6 DUP3 DUP6 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x1F36 DUP6 DUP6 DUP6 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x1FA1 DUP4 PUSH2 0xD34 JUMP JUMPDEST GT PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2069 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2060 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2074 DUP3 PUSH0 DUP4 PUSH2 0x22BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2083 DUP4 DUP4 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x2158 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x20F5 PUSH2 0x1D95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x215C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x216D DUP4 DUP4 PUSH2 0xDA1 JUMP JUMPDEST ISZERO PUSH2 0x2242 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x21DF PUSH2 0x1D95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2246 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2256 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP PUSH2 0x2263 DUP2 DUP6 DUP6 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2278 DUP3 DUP3 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x22BB JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B2 SWAP3 SWAP2 SWAP1 PUSH2 0x360B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x22CA DUP4 DUP4 DUP4 PUSH2 0x26B4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x235D JUMPI PUSH0 PUSH2 0x2306 PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2311 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x235A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2351 SWAP3 SWAP2 SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23D2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C9 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2442 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2439 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x252B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2522 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x253C DUP5 DUP5 PUSH2 0x116F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x25BE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x25AF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25BD DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2362 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2634 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262B SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26A4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269B SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26AF DUP4 DUP4 DUP4 PUSH2 0x22BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2704 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x26F8 SWAP2 SWAP1 PUSH2 0x368E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x27D2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x278D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2784 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2819 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2863 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x28C0 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2905 DUP2 PUSH2 0x28D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x290F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2920 DUP2 PUSH2 0x28FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x293B JUMPI PUSH2 0x293A PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2948 DUP5 DUP3 DUP6 ADD PUSH2 0x2912 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2965 DUP2 PUSH2 0x2951 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x297E PUSH0 DUP4 ADD DUP5 PUSH2 0x295C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29AD DUP3 PUSH2 0x2984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29BD DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29D8 DUP2 PUSH2 0x29B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F0 DUP2 PUSH2 0x29DE JUMP JUMPDEST DUP2 EQ PUSH2 0x29FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A0B DUP2 PUSH2 0x29E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A34 DUP6 DUP3 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A45 DUP6 DUP3 DUP7 ADD PUSH2 0x29FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A91 DUP3 PUSH2 0x2A4F JUMP JUMPDEST PUSH2 0x2A9B DUP2 DUP6 PUSH2 0x2A59 JUMP JUMPDEST SWAP4 POP PUSH2 0x2AAB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A69 JUMP JUMPDEST PUSH2 0x2AB4 DUP2 PUSH2 0x2A77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AD7 DUP2 DUP5 PUSH2 0x2A87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AE8 DUP2 PUSH2 0x29DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B01 PUSH0 DUP4 ADD DUP5 PUSH2 0x2ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B1E JUMPI PUSH2 0x2B1D PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B2B DUP7 DUP3 DUP8 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B3C DUP7 DUP3 DUP8 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B4D DUP7 DUP3 DUP8 ADD PUSH2 0x29FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B69 DUP2 PUSH2 0x2B57 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B73 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B84 DUP2 PUSH2 0x2B60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B9F JUMPI PUSH2 0x2B9E PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BAC DUP5 DUP3 DUP6 ADD PUSH2 0x2B76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BBE DUP2 PUSH2 0x2B57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BF3 JUMPI PUSH2 0x2BF2 PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C00 DUP6 DUP3 DUP7 ADD PUSH2 0x2B76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C11 DUP6 DUP3 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C30 DUP2 PUSH2 0x2C1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C49 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C58 DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C71 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8C JUMPI PUSH2 0x2C8B PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C99 DUP5 DUP3 DUP6 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CAC DUP3 PUSH2 0x2984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CBC DUP2 PUSH2 0x2CA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CD5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2CB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CE4 DUP2 PUSH2 0x2951 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CFF DUP2 PUSH2 0x2CDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1A JUMPI PUSH2 0x2D19 PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D27 DUP5 DUP3 DUP6 ADD PUSH2 0x2CF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D46 JUMPI PUSH2 0x2D45 PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D53 DUP6 DUP3 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D64 DUP6 DUP3 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DA0 DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB1 DUP4 DUP4 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2DD3 DUP3 PUSH2 0x2D6E JUMP JUMPDEST PUSH2 0x2DDD DUP2 DUP6 PUSH2 0x2D78 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DE8 DUP4 PUSH2 0x2D88 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E18 JUMPI DUP2 MLOAD PUSH2 0x2DFF DUP9 DUP3 PUSH2 0x2DA6 JUMP JUMPDEST SWAP8 POP PUSH2 0x2E0A DUP4 PUSH2 0x2DBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2DEB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E3D DUP2 DUP5 PUSH2 0x2DC9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62757965722069732061207A65726F2061646472657373000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E79 PUSH1 0x17 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E84 DUP3 PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EA6 DUP2 PUSH2 0x2E6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x776569416D6F756E742069732030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE1 PUSH1 0xE DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EEC DUP3 PUSH2 0x2EAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F0E DUP2 PUSH2 0x2ED5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2F4C DUP3 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F57 DUP4 PUSH2 0x29DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2F65 DUP2 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2F7C JUMPI PUSH2 0x2F7B PUSH2 0x2F15 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2FC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2FDA JUMPI PUSH2 0x2FD9 PUSH2 0x2F83 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x303A PUSH1 0x21 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3045 DUP3 PUSH2 0x2FE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3067 DUP2 PUSH2 0x302E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865204F776E65722063616E2063616C6C20746869732066756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30C8 PUSH1 0x25 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x30D3 DUP3 PUSH2 0x306E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30F5 DUP2 PUSH2 0x30BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55736572206973206E6F74204B59436564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3130 PUSH1 0x11 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x313B DUP3 PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x315D DUP2 PUSH2 0x3124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55736572206F776E7320746F6B656E732C2063616E6E6F742072656D6F766520 PUSH0 DUP3 ADD MSTORE PUSH32 0x66726F6D204B5943206C69737400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31BE PUSH1 0x2D DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x31C9 DUP3 PUSH2 0x3164 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31EB DUP2 PUSH2 0x31B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x55736572206E6F7420666F756E6420696E204B5943206C697374000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3253 PUSH1 0x1A DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x325E DUP3 PUSH2 0x321F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3280 DUP2 PUSH2 0x3247 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3291 DUP3 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP PUSH2 0x329C DUP4 PUSH2 0x29DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x32B4 JUMPI PUSH2 0x32B3 PUSH2 0x2F15 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C6964206E6577206F776E657220616464726573732E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x331B PUSH1 0x1A DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3326 DUP3 PUSH2 0x32E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3348 DUP2 PUSH2 0x330F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3383 PUSH1 0xF DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x338E DUP3 PUSH2 0x334F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33B0 DUP2 PUSH2 0x3377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5573657220697320616C7265616479204B594365640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x33EB PUSH1 0x15 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x33F6 DUP3 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3418 DUP2 PUSH2 0x33DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3453 PUSH1 0x1F DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x345E DUP3 PUSH2 0x341F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3480 DUP2 PUSH2 0x3447 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469766964656E6420506572696F64206973206F6E676F696E672C20616C6C20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7472616E73666572732077696C6C20726573756D652061667465722064697669 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x64656E6420706572696F642E0000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3507 PUSH1 0x4C DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3512 DUP3 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3534 DUP2 PUSH2 0x34FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206973206E6F74204B5943656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x356F PUSH1 0x13 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x357A DUP3 PUSH2 0x353B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x359C DUP2 PUSH2 0x3563 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E74206973206E6F74204B5943656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35D7 PUSH1 0x16 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x35E2 DUP3 PUSH2 0x35A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3604 DUP2 PUSH2 0x35CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x361E PUSH0 DUP4 ADD DUP6 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0x362B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3645 PUSH0 DUP4 ADD DUP6 PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x3652 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2ADF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x366C PUSH0 DUP4 ADD DUP7 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0x3679 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x3686 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2ADF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3698 DUP3 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP PUSH2 0x36A3 DUP4 PUSH2 0x29DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x36BB JUMPI PUSH2 0x36BA PUSH2 0x2F15 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0x2B MSTORE8 TLOAD MULMOD COINBASE 0x4D 0xC1 0xBA 0xC SWAP2 DUP1 SDIV SWAP2 PUSH31 0xB08C19D29319220F7CE4414627587DD4A364736F6C634300081A0033000000 ",
							"sourceMap": "438:6654:11:-:0;;;1186:755;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1398:4;1370:5;1377:7;1656:5:4;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;764:1:6;756:4;:9;752:65;;804:1;788:18;;;;;;;;;;;:::i;:::-;;;;;;;;752:65;833:4;826:11;;;;;;716:128;1716:1:3;1821:7;:22;;;;1446:1:11::2;1422:26;;:12;:26;;::::0;1414:66:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1511:9;1499;;:21;;;;;;;;;;;;;;;;;;1538:5;1530;:13;;;;1568:12;1553;;:27;;;;;;;;;;;;;;;;;;1607:10;1590:6;;:28;;;;;;;;;;;;;;;;;;1660:42;2232:4:0;1671:18:11::0;::::2;1691:10;1660;;;:42;;:::i;:::-;;1712:35;547:24;1736:10;1712;;;:35;;:::i;:::-;;1757:32;612:21;1778:10;1757;;;:32;;:::i;:::-;;1835:46;547:24;2232:4:0;1862:18:11::0;::::2;1835:13;;;:46;;:::i;:::-;1891:43;612:21;2232:4:0;1915:18:11::0;::::2;1891:13;;;:43;;:::i;:::-;1186:755:::0;;;;;;438:6654;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;5698:247::-;5781:25;5809:18;5822:4;5809:12;;;:18;;:::i;:::-;5781:46;;5862:9;5837:6;:12;5844:4;5837:12;;;;;;;;;;;:22;;:34;;;;5928:9;5909:17;5903:4;5886:52;;;;;;;;;;5771:174;5698:247;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:86::-;2605:7;2645:4;2638:5;2634:16;2623:27;;2570:86;;;:::o;2662:118::-;2733:22;2749:5;2733:22;:::i;:::-;2726:5;2723:33;2713:61;;2770:1;2767;2760:12;2713:61;2662:118;:::o;2786:139::-;2841:5;2872:6;2866:13;2857:22;;2888:31;2913:5;2888:31;:::i;:::-;2786:139;;;;:::o;2931:77::-;2968:7;2997:5;2986:16;;2931:77;;;:::o;3014:122::-;3087:24;3105:5;3087:24;:::i;:::-;3080:5;3077:35;3067:63;;3126:1;3123;3116:12;3067:63;3014:122;:::o;3142:143::-;3199:5;3230:6;3224:13;3215:22;;3246:33;3273:5;3246:33;:::i;:::-;3142:143;;;;:::o;3291:126::-;3328:7;3368:42;3361:5;3357:54;3346:65;;3291:126;;;:::o;3423:96::-;3460:7;3489:24;3507:5;3489:24;:::i;:::-;3478:35;;3423:96;;;:::o;3525:122::-;3598:24;3616:5;3598:24;:::i;:::-;3591:5;3588:35;3578:63;;3637:1;3634;3627:12;3578:63;3525:122;:::o;3653:143::-;3710:5;3741:6;3735:13;3726:22;;3757:33;3784:5;3757:33;:::i;:::-;3653:143;;;;:::o;3802:1476::-;3935:6;3943;3951;3959;3967;3975;4024:3;4012:9;4003:7;3999:23;3995:33;3992:120;;;4031:79;;:::i;:::-;3992:120;4172:1;4161:9;4157:17;4151:24;4202:18;4194:6;4191:30;4188:117;;;4224:79;;:::i;:::-;4188:117;4329:74;4395:7;4386:6;4375:9;4371:22;4329:74;:::i;:::-;4319:84;;4122:291;4473:2;4462:9;4458:18;4452:25;4504:18;4496:6;4493:30;4490:117;;;4526:79;;:::i;:::-;4490:117;4631:74;4697:7;4688:6;4677:9;4673:22;4631:74;:::i;:::-;4621:84;;4423:292;4754:2;4780:62;4834:7;4825:6;4814:9;4810:22;4780:62;:::i;:::-;4770:72;;4725:127;4891:2;4917:64;4973:7;4964:6;4953:9;4949:22;4917:64;:::i;:::-;4907:74;;4862:129;5030:3;5057:64;5113:7;5104:6;5093:9;5089:22;5057:64;:::i;:::-;5047:74;;5001:130;5170:3;5197:64;5253:7;5244:6;5233:9;5229:22;5197:64;:::i;:::-;5187:74;;5141:130;3802:1476;;;;;;;;:::o;5284:99::-;5336:6;5370:5;5364:12;5354:22;;5284:99;;;:::o;5389:180::-;5437:77;5434:1;5427:88;5534:4;5531:1;5524:15;5558:4;5555:1;5548:15;5575:320;5619:6;5656:1;5650:4;5646:12;5636:22;;5703:1;5697:4;5693:12;5724:18;5714:81;;5780:4;5772:6;5768:17;5758:27;;5714:81;5842:2;5834:6;5831:14;5811:18;5808:38;5805:84;;5861:18;;:::i;:::-;5805:84;5626:269;5575:320;;;:::o;5901:141::-;5950:4;5973:3;5965:11;;5996:3;5993:1;5986:14;6030:4;6027:1;6017:18;6009:26;;5901:141;;;:::o;6048:93::-;6085:6;6132:2;6127;6120:5;6116:14;6112:23;6102:33;;6048:93;;;:::o;6147:107::-;6191:8;6241:5;6235:4;6231:16;6210:37;;6147:107;;;;:::o;6260:393::-;6329:6;6379:1;6367:10;6363:18;6402:97;6432:66;6421:9;6402:97;:::i;:::-;6520:39;6550:8;6539:9;6520:39;:::i;:::-;6508:51;;6592:4;6588:9;6581:5;6577:21;6568:30;;6641:4;6631:8;6627:19;6620:5;6617:30;6607:40;;6336:317;;6260:393;;;;;:::o;6659:60::-;6687:3;6708:5;6701:12;;6659:60;;;:::o;6725:142::-;6775:9;6808:53;6826:34;6835:24;6853:5;6835:24;:::i;:::-;6826:34;:::i;:::-;6808:53;:::i;:::-;6795:66;;6725:142;;;:::o;6873:75::-;6916:3;6937:5;6930:12;;6873:75;;;:::o;6954:269::-;7064:39;7095:7;7064:39;:::i;:::-;7125:91;7174:41;7198:16;7174:41;:::i;:::-;7166:6;7159:4;7153:11;7125:91;:::i;:::-;7119:4;7112:105;7030:193;6954:269;;;:::o;7229:73::-;7274:3;7229:73;:::o;7308:189::-;7385:32;;:::i;:::-;7426:65;7484:6;7476;7470:4;7426:65;:::i;:::-;7361:136;7308:189;;:::o;7503:186::-;7563:120;7580:3;7573:5;7570:14;7563:120;;;7634:39;7671:1;7664:5;7634:39;:::i;:::-;7607:1;7600:5;7596:13;7587:22;;7563:120;;;7503:186;;:::o;7695:543::-;7796:2;7791:3;7788:11;7785:446;;;7830:38;7862:5;7830:38;:::i;:::-;7914:29;7932:10;7914:29;:::i;:::-;7904:8;7900:44;8097:2;8085:10;8082:18;8079:49;;;8118:8;8103:23;;8079:49;8141:80;8197:22;8215:3;8197:22;:::i;:::-;8187:8;8183:37;8170:11;8141:80;:::i;:::-;7800:431;;7785:446;7695:543;;;:::o;8244:117::-;8298:8;8348:5;8342:4;8338:16;8317:37;;8244:117;;;;:::o;8367:169::-;8411:6;8444:51;8492:1;8488:6;8480:5;8477:1;8473:13;8444:51;:::i;:::-;8440:56;8525:4;8519;8515:15;8505:25;;8418:118;8367:169;;;;:::o;8541:295::-;8617:4;8763:29;8788:3;8782:4;8763:29;:::i;:::-;8755:37;;8825:3;8822:1;8818:11;8812:4;8809:21;8801:29;;8541:295;;;;:::o;8841:1395::-;8958:37;8991:3;8958:37;:::i;:::-;9060:18;9052:6;9049:30;9046:56;;;9082:18;;:::i;:::-;9046:56;9126:38;9158:4;9152:11;9126:38;:::i;:::-;9211:67;9271:6;9263;9257:4;9211:67;:::i;:::-;9305:1;9329:4;9316:17;;9361:2;9353:6;9350:14;9378:1;9373:618;;;;10035:1;10052:6;10049:77;;;10101:9;10096:3;10092:19;10086:26;10077:35;;10049:77;10152:67;10212:6;10205:5;10152:67;:::i;:::-;10146:4;10139:81;10008:222;9343:887;;9373:618;9425:4;9421:9;9413:6;9409:22;9459:37;9491:4;9459:37;:::i;:::-;9518:1;9532:208;9546:7;9543:1;9540:14;9532:208;;;9625:9;9620:3;9616:19;9610:26;9602:6;9595:42;9676:1;9668:6;9664:14;9654:24;;9723:2;9712:9;9708:18;9695:31;;9569:4;9566:1;9562:12;9557:17;;9532:208;;;9768:6;9759:7;9756:19;9753:179;;;9826:9;9821:3;9817:19;9811:26;9869:48;9911:4;9903:6;9899:17;9888:9;9869:48;:::i;:::-;9861:6;9854:64;9776:156;9753:179;9978:1;9974;9966:6;9962:14;9958:22;9952:4;9945:36;9380:611;;;9343:887;;8933:1303;;;8841:1395;;:::o;10242:85::-;10287:7;10316:5;10305:16;;10242:85;;;:::o;10333:158::-;10391:9;10424:61;10442:42;10451:32;10477:5;10451:32;:::i;:::-;10442:42;:::i;:::-;10424:61;:::i;:::-;10411:74;;10333:158;;;:::o;10497:147::-;10592:45;10631:5;10592:45;:::i;:::-;10587:3;10580:58;10497:147;;:::o;10650:238::-;10751:4;10789:2;10778:9;10774:18;10766:26;;10802:79;10878:1;10867:9;10863:17;10854:6;10802:79;:::i;:::-;10650:238;;;;:::o;10894:169::-;10978:11;11012:6;11007:3;11000:19;11052:4;11047:3;11043:14;11028:29;;10894:169;;;;:::o;11069:177::-;11209:29;11205:1;11197:6;11193:14;11186:53;11069:177;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;438:6654:11:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3938,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@KYC_ROLE_1387": {
									"entryPoint": 6471,
									"id": 1387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1382": {
									"entryPoint": 4201,
									"id": 1382,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1538": {
									"entryPoint": null,
									"id": 1538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1046": {
									"entryPoint": 9058,
									"id": 1046,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_986": {
									"entryPoint": 7580,
									"id": 986,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_968": {
									"entryPoint": 8185,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 8814,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 7337,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 8312,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_935": {
									"entryPoint": 7436,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1310": {
									"entryPoint": 7573,
									"id": 1310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_568": {
									"entryPoint": 7563,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_560": {
									"entryPoint": 7357,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 8546,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1094": {
									"entryPoint": 9521,
									"id": 1094,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_825": {
									"entryPoint": 9668,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateTokenOwnership_1754": {
									"entryPoint": 8002,
									"id": 1754,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_1271": {
									"entryPoint": 8895,
									"id": 1271,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_902": {
									"entryPoint": 9908,
									"id": 902,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_validateTransfer_1729": {
									"entryPoint": 7598,
									"id": 1729,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addKYCUser_1880": {
									"entryPoint": 6507,
									"id": 1880,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addMinter_1590": {
									"entryPoint": 3733,
									"id": 1590,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_722": {
									"entryPoint": 4463,
									"id": 722,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_746": {
									"entryPoint": 2710,
									"id": 746,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_681": {
									"entryPoint": 3380,
									"id": 681,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnMyBalance_1797": {
									"entryPoint": 2828,
									"id": 1797,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@cap_1223": {
									"entryPoint": 3166,
									"id": 1223,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1510": {
									"entryPoint": 3145,
									"id": 1510,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBeneficiary_1534": {
									"entryPoint": 3328,
									"id": 1534,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDividendPaymentPeriodState_1820": {
									"entryPoint": 4359,
									"id": 1820,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getKYCList_2009": {
									"entryPoint": 6012,
									"id": 2009,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOwnedTokens_2030": {
									"entryPoint": 4381,
									"id": 2030,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2799,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 3111,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3489,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isKYCed_2000": {
									"entryPoint": 4119,
									"id": 2000,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@kycUsersListLength_2018": {
									"entryPoint": 3368,
									"id": 2018,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_641": {
									"entryPoint": 2566,
									"id": 641,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1526": {
									"entryPoint": 3449,
									"id": 1526,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rate_1518": {
									"entryPoint": 3102,
									"id": 1518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeKYCUser_1988": {
									"entryPoint": 4593,
									"id": 1988,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 3205,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4237,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sendTokens_1631": {
									"entryPoint": 2299,
									"id": 1631,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1351": {
									"entryPoint": 7232,
									"id": 1351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 2178,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_650": {
									"entryPoint": 3589,
									"id": 650,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_668": {
									"entryPoint": 2744,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1700": {
									"entryPoint": 2753,
									"id": 1700,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_778": {
									"entryPoint": 7956,
									"id": 778,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1575": {
									"entryPoint": 6151,
									"id": 1575,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1665": {
									"entryPoint": 3944,
									"id": 1665,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_705": {
									"entryPoint": 8780,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateDividendPeriodStatus_1812": {
									"entryPoint": 4271,
									"id": 1812,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateOwnsToken_2045": {
									"entryPoint": 3988,
									"id": 2045,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 10698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 11505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 11126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 10514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 11015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 11525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 11146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 11229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 10534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 11686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 11443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 11671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 11721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 11189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 11303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 11458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 13835,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13913,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 11813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 11204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13874,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 11656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 11630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 11709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 11640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 13966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 12098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 11426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 11095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 10449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10857,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 12208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 12163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 12986,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10445,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf": {
									"entryPoint": 11845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387": {
									"entryPoint": 13731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 13135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7": {
									"entryPoint": 12644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3": {
									"entryPoint": 12540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e": {
									"entryPoint": 13627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200": {
									"entryPoint": 13031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52": {
									"entryPoint": 12831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11": {
									"entryPoint": 12398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e": {
									"entryPoint": 13239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb": {
									"entryPoint": 13447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
									"entryPoint": 12256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027": {
									"entryPoint": 11949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 13343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 11104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 10492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28250:12",
										"nodeType": "YulBlock",
										"src": "0:28250:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1563:81:12",
													"nodeType": "YulBlock",
													"src": "1563:81:12",
													"statements": [
														{
															"nativeSrc": "1573:65:12",
															"nodeType": "YulAssignment",
															"src": "1573:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:12"
																},
																"nativeSrc": "1584:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:12",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:12",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:126:12"
											},
											{
												"body": {
													"nativeSrc": "1695:51:12",
													"nodeType": "YulBlock",
													"src": "1695:51:12",
													"statements": [
														{
															"nativeSrc": "1705:35:12",
															"nodeType": "YulAssignment",
															"src": "1705:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:12"
																},
																"nativeSrc": "1716:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:12",
														"nodeType": "YulTypedName",
														"src": "1677:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:12",
														"nodeType": "YulTypedName",
														"src": "1687:7:12",
														"type": ""
													}
												],
												"src": "1650:96:12"
											},
											{
												"body": {
													"nativeSrc": "1795:79:12",
													"nodeType": "YulBlock",
													"src": "1795:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:12",
																"nodeType": "YulBlock",
																"src": "1852:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:12"
																			},
																			"nativeSrc": "1854:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:12"
																		},
																		"nativeSrc": "1854:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:12"
																				},
																				"nativeSrc": "1825:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:12"
																		},
																		"nativeSrc": "1815:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:12"
																},
																"nativeSrc": "1808:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:12"
															},
															"nativeSrc": "1805:63:12",
															"nodeType": "YulIf",
															"src": "1805:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:12",
														"nodeType": "YulTypedName",
														"src": "1788:5:12",
														"type": ""
													}
												],
												"src": "1752:122:12"
											},
											{
												"body": {
													"nativeSrc": "1932:87:12",
													"nodeType": "YulBlock",
													"src": "1932:87:12",
													"statements": [
														{
															"nativeSrc": "1942:29:12",
															"nodeType": "YulAssignment",
															"src": "1942:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:12"
																},
																"nativeSrc": "1951:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:12"
																},
																"nativeSrc": "1980:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:12"
															},
															"nativeSrc": "1980:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:12",
														"nodeType": "YulTypedName",
														"src": "1910:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:12",
														"nodeType": "YulTypedName",
														"src": "1918:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:12",
														"nodeType": "YulTypedName",
														"src": "1926:5:12",
														"type": ""
													}
												],
												"src": "1880:139:12"
											},
											{
												"body": {
													"nativeSrc": "2070:32:12",
													"nodeType": "YulBlock",
													"src": "2070:32:12",
													"statements": [
														{
															"nativeSrc": "2080:16:12",
															"nodeType": "YulAssignment",
															"src": "2080:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2091:5:12",
																"nodeType": "YulIdentifier",
																"src": "2091:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2080:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2080:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2025:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2052:5:12",
														"nodeType": "YulTypedName",
														"src": "2052:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2062:7:12",
														"nodeType": "YulTypedName",
														"src": "2062:7:12",
														"type": ""
													}
												],
												"src": "2025:77:12"
											},
											{
												"body": {
													"nativeSrc": "2151:79:12",
													"nodeType": "YulBlock",
													"src": "2151:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2208:16:12",
																"nodeType": "YulBlock",
																"src": "2208:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2210:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:12"
																			},
																			"nativeSrc": "2210:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:12"
																		},
																		"nativeSrc": "2210:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2174:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2199:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2181:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:12"
																				},
																				"nativeSrc": "2181:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2171:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:12"
																		},
																		"nativeSrc": "2171:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2164:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:12"
																},
																"nativeSrc": "2164:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2164:43:12"
															},
															"nativeSrc": "2161:63:12",
															"nodeType": "YulIf",
															"src": "2161:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2108:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2144:5:12",
														"nodeType": "YulTypedName",
														"src": "2144:5:12",
														"type": ""
													}
												],
												"src": "2108:122:12"
											},
											{
												"body": {
													"nativeSrc": "2288:87:12",
													"nodeType": "YulBlock",
													"src": "2288:87:12",
													"statements": [
														{
															"nativeSrc": "2298:29:12",
															"nodeType": "YulAssignment",
															"src": "2298:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2320:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2307:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:12"
																},
																"nativeSrc": "2307:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2307:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2298:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2363:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2336:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:12"
																},
																"nativeSrc": "2336:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2336:33:12"
															},
															"nativeSrc": "2336:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2236:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2266:6:12",
														"nodeType": "YulTypedName",
														"src": "2266:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2274:3:12",
														"nodeType": "YulTypedName",
														"src": "2274:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2282:5:12",
														"nodeType": "YulTypedName",
														"src": "2282:5:12",
														"type": ""
													}
												],
												"src": "2236:139:12"
											},
											{
												"body": {
													"nativeSrc": "2464:391:12",
													"nodeType": "YulBlock",
													"src": "2464:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:83:12",
																"nodeType": "YulBlock",
																"src": "2510:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2512:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2512:77:12"
																			},
																			"nativeSrc": "2512:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:79:12"
																		},
																		"nativeSrc": "2512:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:12"
																		},
																		"nativeSrc": "2481:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:12"
																},
																"nativeSrc": "2477:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:12"
															},
															"nativeSrc": "2474:119:12",
															"nodeType": "YulIf",
															"src": "2474:119:12"
														},
														{
															"nativeSrc": "2603:117:12",
															"nodeType": "YulBlock",
															"src": "2603:117:12",
															"statements": [
																{
																	"nativeSrc": "2618:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2618:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2632:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2632:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2622:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2622:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2647:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2647:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2682:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2682:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2693:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2693:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2678:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2678:3:12"
																				},
																				"nativeSrc": "2678:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2678:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2702:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2702:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2657:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2657:20:12"
																		},
																		"nativeSrc": "2657:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2647:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2647:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2730:118:12",
															"nodeType": "YulBlock",
															"src": "2730:118:12",
															"statements": [
																{
																	"nativeSrc": "2745:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2745:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2759:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2759:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2749:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2749:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2775:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2775:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2810:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2810:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2806:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2806:3:12"
																				},
																				"nativeSrc": "2806:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2806:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2830:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2830:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2785:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2785:20:12"
																		},
																		"nativeSrc": "2785:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2785:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2775:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2775:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2381:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2426:9:12",
														"nodeType": "YulTypedName",
														"src": "2426:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2437:7:12",
														"nodeType": "YulTypedName",
														"src": "2437:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2449:6:12",
														"nodeType": "YulTypedName",
														"src": "2449:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2457:6:12",
														"nodeType": "YulTypedName",
														"src": "2457:6:12",
														"type": ""
													}
												],
												"src": "2381:474:12"
											},
											{
												"body": {
													"nativeSrc": "2920:40:12",
													"nodeType": "YulBlock",
													"src": "2920:40:12",
													"statements": [
														{
															"nativeSrc": "2931:22:12",
															"nodeType": "YulAssignment",
															"src": "2931:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2947:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2947:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2941:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2941:5:12"
																},
																"nativeSrc": "2941:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2941:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2931:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2861:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2903:5:12",
														"nodeType": "YulTypedName",
														"src": "2903:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2913:6:12",
														"nodeType": "YulTypedName",
														"src": "2913:6:12",
														"type": ""
													}
												],
												"src": "2861:99:12"
											},
											{
												"body": {
													"nativeSrc": "3062:73:12",
													"nodeType": "YulBlock",
													"src": "3062:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3079:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3079:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3084:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3072:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:12"
																},
																"nativeSrc": "3072:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3072:19:12"
															},
															"nativeSrc": "3072:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "3072:19:12"
														},
														{
															"nativeSrc": "3100:29:12",
															"nodeType": "YulAssignment",
															"src": "3100:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3119:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3119:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3124:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3124:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3115:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3115:3:12"
																},
																"nativeSrc": "3115:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3115:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3100:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "3100:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2966:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3034:3:12",
														"nodeType": "YulTypedName",
														"src": "3034:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3039:6:12",
														"nodeType": "YulTypedName",
														"src": "3039:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3050:11:12",
														"nodeType": "YulTypedName",
														"src": "3050:11:12",
														"type": ""
													}
												],
												"src": "2966:169:12"
											},
											{
												"body": {
													"nativeSrc": "3203:77:12",
													"nodeType": "YulBlock",
													"src": "3203:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3220:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3220:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3225:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3225:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3230:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3214:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3214:5:12"
																},
																"nativeSrc": "3214:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3214:23:12"
															},
															"nativeSrc": "3214:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "3214:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3257:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3262:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3262:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3253:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3253:3:12"
																		},
																		"nativeSrc": "3253:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3253:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3271:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:12"
																},
																"nativeSrc": "3246:27:12",
																"nodeType": "YulFunctionCall",
																"src": "3246:27:12"
															},
															"nativeSrc": "3246:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "3246:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3141:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3185:3:12",
														"nodeType": "YulTypedName",
														"src": "3185:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3190:3:12",
														"nodeType": "YulTypedName",
														"src": "3190:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3195:6:12",
														"nodeType": "YulTypedName",
														"src": "3195:6:12",
														"type": ""
													}
												],
												"src": "3141:139:12"
											},
											{
												"body": {
													"nativeSrc": "3334:54:12",
													"nodeType": "YulBlock",
													"src": "3334:54:12",
													"statements": [
														{
															"nativeSrc": "3344:38:12",
															"nodeType": "YulAssignment",
															"src": "3344:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3362:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3362:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3369:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3369:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3358:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:12"
																		},
																		"nativeSrc": "3358:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3358:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3378:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3378:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3374:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3374:3:12"
																		},
																		"nativeSrc": "3374:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3374:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3354:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3354:3:12"
																},
																"nativeSrc": "3354:28:12",
																"nodeType": "YulFunctionCall",
																"src": "3354:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3344:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3286:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3317:5:12",
														"nodeType": "YulTypedName",
														"src": "3317:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3327:6:12",
														"nodeType": "YulTypedName",
														"src": "3327:6:12",
														"type": ""
													}
												],
												"src": "3286:102:12"
											},
											{
												"body": {
													"nativeSrc": "3486:285:12",
													"nodeType": "YulBlock",
													"src": "3486:285:12",
													"statements": [
														{
															"nativeSrc": "3496:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3496:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3543:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3543:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3510:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3510:32:12"
																},
																"nativeSrc": "3510:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3510:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3500:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3500:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3558:78:12",
															"nodeType": "YulAssignment",
															"src": "3558:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3624:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3624:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3629:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3629:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3565:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "3565:58:12"
																},
																"nativeSrc": "3565:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3565:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3558:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3558:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3684:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3684:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3691:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3691:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3680:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3680:3:12"
																		},
																		"nativeSrc": "3680:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3680:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3698:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3698:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3703:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3703:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3645:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "3645:34:12"
																},
																"nativeSrc": "3645:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3645:65:12"
															},
															"nativeSrc": "3645:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3645:65:12"
														},
														{
															"nativeSrc": "3719:46:12",
															"nodeType": "YulAssignment",
															"src": "3719:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3730:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3730:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3757:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3735:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "3735:21:12"
																		},
																		"nativeSrc": "3735:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3735:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3726:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:12"
																},
																"nativeSrc": "3726:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3726:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3719:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3719:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3394:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3467:5:12",
														"nodeType": "YulTypedName",
														"src": "3467:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3474:3:12",
														"nodeType": "YulTypedName",
														"src": "3474:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3482:3:12",
														"nodeType": "YulTypedName",
														"src": "3482:3:12",
														"type": ""
													}
												],
												"src": "3394:377:12"
											},
											{
												"body": {
													"nativeSrc": "3895:195:12",
													"nodeType": "YulBlock",
													"src": "3895:195:12",
													"statements": [
														{
															"nativeSrc": "3905:26:12",
															"nodeType": "YulAssignment",
															"src": "3905:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3917:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3917:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3928:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3928:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3913:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:12"
																},
																"nativeSrc": "3913:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3913:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3905:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3905:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3952:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3952:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3963:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3963:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3948:3:12"
																		},
																		"nativeSrc": "3948:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3948:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3971:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3971:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3977:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3977:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3967:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3967:3:12"
																		},
																		"nativeSrc": "3967:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3967:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3941:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3941:6:12"
																},
																"nativeSrc": "3941:47:12",
																"nodeType": "YulFunctionCall",
																"src": "3941:47:12"
															},
															"nativeSrc": "3941:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "3941:47:12"
														},
														{
															"nativeSrc": "3997:86:12",
															"nodeType": "YulAssignment",
															"src": "3997:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4069:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4069:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4078:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4078:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4005:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "4005:63:12"
																},
																"nativeSrc": "4005:78:12",
																"nodeType": "YulFunctionCall",
																"src": "4005:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3997:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3997:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3777:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3867:9:12",
														"nodeType": "YulTypedName",
														"src": "3867:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3879:6:12",
														"nodeType": "YulTypedName",
														"src": "3879:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3890:4:12",
														"nodeType": "YulTypedName",
														"src": "3890:4:12",
														"type": ""
													}
												],
												"src": "3777:313:12"
											},
											{
												"body": {
													"nativeSrc": "4161:53:12",
													"nodeType": "YulBlock",
													"src": "4161:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:12"
																		},
																		"nativeSrc": "4183:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:12"
																},
																"nativeSrc": "4171:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:12"
															},
															"nativeSrc": "4171:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:12",
														"nodeType": "YulTypedName",
														"src": "4149:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:12",
														"nodeType": "YulTypedName",
														"src": "4156:3:12",
														"type": ""
													}
												],
												"src": "4096:118:12"
											},
											{
												"body": {
													"nativeSrc": "4318:124:12",
													"nodeType": "YulBlock",
													"src": "4318:124:12",
													"statements": [
														{
															"nativeSrc": "4328:26:12",
															"nodeType": "YulAssignment",
															"src": "4328:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:12"
																},
																"nativeSrc": "4336:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:12"
																		},
																		"nativeSrc": "4417:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:12"
																},
																"nativeSrc": "4364:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:12"
															},
															"nativeSrc": "4364:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:12",
														"nodeType": "YulTypedName",
														"src": "4290:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:12",
														"nodeType": "YulTypedName",
														"src": "4302:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:12",
														"nodeType": "YulTypedName",
														"src": "4313:4:12",
														"type": ""
													}
												],
												"src": "4220:222:12"
											},
											{
												"body": {
													"nativeSrc": "4548:519:12",
													"nodeType": "YulBlock",
													"src": "4548:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:12",
																"nodeType": "YulBlock",
																"src": "4594:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:12"
																			},
																			"nativeSrc": "4596:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:12"
																		},
																		"nativeSrc": "4596:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:12"
																		},
																		"nativeSrc": "4565:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:12"
																},
																"nativeSrc": "4561:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:12"
															},
															"nativeSrc": "4558:119:12",
															"nodeType": "YulIf",
															"src": "4558:119:12"
														},
														{
															"nativeSrc": "4687:117:12",
															"nodeType": "YulBlock",
															"src": "4687:117:12",
															"statements": [
																{
																	"nativeSrc": "4702:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:12"
																				},
																				"nativeSrc": "4762:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:12"
																		},
																		"nativeSrc": "4741:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:12",
															"nodeType": "YulBlock",
															"src": "4814:118:12",
															"statements": [
																{
																	"nativeSrc": "4829:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:12"
																				},
																				"nativeSrc": "4890:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:12"
																		},
																		"nativeSrc": "4869:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:12",
															"nodeType": "YulBlock",
															"src": "4942:118:12",
															"statements": [
																{
																	"nativeSrc": "4957:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:12"
																				},
																				"nativeSrc": "5018:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:12"
																		},
																		"nativeSrc": "4997:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:12",
														"nodeType": "YulTypedName",
														"src": "4502:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:12",
														"nodeType": "YulTypedName",
														"src": "4513:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:12",
														"nodeType": "YulTypedName",
														"src": "4525:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:12",
														"nodeType": "YulTypedName",
														"src": "4533:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:12",
														"nodeType": "YulTypedName",
														"src": "4541:6:12",
														"type": ""
													}
												],
												"src": "4448:619:12"
											},
											{
												"body": {
													"nativeSrc": "5118:32:12",
													"nodeType": "YulBlock",
													"src": "5118:32:12",
													"statements": [
														{
															"nativeSrc": "5128:16:12",
															"nodeType": "YulAssignment",
															"src": "5128:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:12",
																"nodeType": "YulIdentifier",
																"src": "5139:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:12",
														"nodeType": "YulTypedName",
														"src": "5100:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:12",
														"nodeType": "YulTypedName",
														"src": "5110:7:12",
														"type": ""
													}
												],
												"src": "5073:77:12"
											},
											{
												"body": {
													"nativeSrc": "5199:79:12",
													"nodeType": "YulBlock",
													"src": "5199:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:12",
																"nodeType": "YulBlock",
																"src": "5256:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:12"
																			},
																			"nativeSrc": "5258:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:12"
																		},
																		"nativeSrc": "5258:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:12"
																				},
																				"nativeSrc": "5229:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:12"
																		},
																		"nativeSrc": "5219:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:12"
																},
																"nativeSrc": "5212:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:12"
															},
															"nativeSrc": "5209:63:12",
															"nodeType": "YulIf",
															"src": "5209:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:12",
														"nodeType": "YulTypedName",
														"src": "5192:5:12",
														"type": ""
													}
												],
												"src": "5156:122:12"
											},
											{
												"body": {
													"nativeSrc": "5336:87:12",
													"nodeType": "YulBlock",
													"src": "5336:87:12",
													"statements": [
														{
															"nativeSrc": "5346:29:12",
															"nodeType": "YulAssignment",
															"src": "5346:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:12"
																},
																"nativeSrc": "5355:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:12"
																},
																"nativeSrc": "5384:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:12"
															},
															"nativeSrc": "5384:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:12",
														"nodeType": "YulTypedName",
														"src": "5314:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:12",
														"nodeType": "YulTypedName",
														"src": "5322:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:12",
														"nodeType": "YulTypedName",
														"src": "5330:5:12",
														"type": ""
													}
												],
												"src": "5284:139:12"
											},
											{
												"body": {
													"nativeSrc": "5495:263:12",
													"nodeType": "YulBlock",
													"src": "5495:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:12",
																"nodeType": "YulBlock",
																"src": "5541:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:12"
																			},
																			"nativeSrc": "5543:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:12"
																		},
																		"nativeSrc": "5543:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:12"
																		},
																		"nativeSrc": "5512:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:12"
																},
																"nativeSrc": "5508:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:12"
															},
															"nativeSrc": "5505:119:12",
															"nodeType": "YulIf",
															"src": "5505:119:12"
														},
														{
															"nativeSrc": "5634:117:12",
															"nodeType": "YulBlock",
															"src": "5634:117:12",
															"statements": [
																{
																	"nativeSrc": "5649:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:12"
																				},
																				"nativeSrc": "5709:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:12"
																		},
																		"nativeSrc": "5688:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:12",
														"nodeType": "YulTypedName",
														"src": "5465:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:12",
														"nodeType": "YulTypedName",
														"src": "5476:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:12",
														"nodeType": "YulTypedName",
														"src": "5488:6:12",
														"type": ""
													}
												],
												"src": "5429:329:12"
											},
											{
												"body": {
													"nativeSrc": "5829:53:12",
													"nodeType": "YulBlock",
													"src": "5829:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:12"
																		},
																		"nativeSrc": "5851:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:12"
																},
																"nativeSrc": "5839:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:12"
															},
															"nativeSrc": "5839:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:12",
														"nodeType": "YulTypedName",
														"src": "5817:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:12",
														"nodeType": "YulTypedName",
														"src": "5824:3:12",
														"type": ""
													}
												],
												"src": "5764:118:12"
											},
											{
												"body": {
													"nativeSrc": "5986:124:12",
													"nodeType": "YulBlock",
													"src": "5986:124:12",
													"statements": [
														{
															"nativeSrc": "5996:26:12",
															"nodeType": "YulAssignment",
															"src": "5996:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:12"
																},
																"nativeSrc": "6004:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:12"
																		},
																		"nativeSrc": "6085:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:12"
																},
																"nativeSrc": "6032:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:12"
															},
															"nativeSrc": "6032:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:12",
														"nodeType": "YulTypedName",
														"src": "5958:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:12",
														"nodeType": "YulTypedName",
														"src": "5970:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:12",
														"nodeType": "YulTypedName",
														"src": "5981:4:12",
														"type": ""
													}
												],
												"src": "5888:222:12"
											},
											{
												"body": {
													"nativeSrc": "6199:391:12",
													"nodeType": "YulBlock",
													"src": "6199:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6245:83:12",
																"nodeType": "YulBlock",
																"src": "6245:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6247:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6247:77:12"
																			},
																			"nativeSrc": "6247:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6247:79:12"
																		},
																		"nativeSrc": "6247:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6220:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6220:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6229:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6229:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6216:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:12"
																		},
																		"nativeSrc": "6216:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6212:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:12"
																},
																"nativeSrc": "6212:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6212:32:12"
															},
															"nativeSrc": "6209:119:12",
															"nodeType": "YulIf",
															"src": "6209:119:12"
														},
														{
															"nativeSrc": "6338:117:12",
															"nodeType": "YulBlock",
															"src": "6338:117:12",
															"statements": [
																{
																	"nativeSrc": "6353:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6353:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6367:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6357:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6357:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6382:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6382:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6417:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6417:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6428:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6428:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6413:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6413:3:12"
																				},
																				"nativeSrc": "6413:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6413:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6437:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6437:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6392:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6392:20:12"
																		},
																		"nativeSrc": "6392:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6382:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6465:118:12",
															"nodeType": "YulBlock",
															"src": "6465:118:12",
															"statements": [
																{
																	"nativeSrc": "6480:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6494:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6484:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6510:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6510:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6545:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6556:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6541:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:12"
																				},
																				"nativeSrc": "6541:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6520:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6520:20:12"
																		},
																		"nativeSrc": "6520:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6510:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6510:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6116:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:12",
														"nodeType": "YulTypedName",
														"src": "6161:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:12",
														"nodeType": "YulTypedName",
														"src": "6172:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:12",
														"nodeType": "YulTypedName",
														"src": "6184:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6192:6:12",
														"nodeType": "YulTypedName",
														"src": "6192:6:12",
														"type": ""
													}
												],
												"src": "6116:474:12"
											},
											{
												"body": {
													"nativeSrc": "6639:43:12",
													"nodeType": "YulBlock",
													"src": "6639:43:12",
													"statements": [
														{
															"nativeSrc": "6649:27:12",
															"nodeType": "YulAssignment",
															"src": "6649:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6664:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6660:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:12"
																},
																"nativeSrc": "6660:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6660:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6649:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6596:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6621:5:12",
														"nodeType": "YulTypedName",
														"src": "6621:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6631:7:12",
														"nodeType": "YulTypedName",
														"src": "6631:7:12",
														"type": ""
													}
												],
												"src": "6596:86:12"
											},
											{
												"body": {
													"nativeSrc": "6749:51:12",
													"nodeType": "YulBlock",
													"src": "6749:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6787:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6771:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "6771:15:12"
																		},
																		"nativeSrc": "6771:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:12"
																},
																"nativeSrc": "6759:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6759:35:12"
															},
															"nativeSrc": "6759:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6759:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6688:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:12",
														"nodeType": "YulTypedName",
														"src": "6737:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:12",
														"nodeType": "YulTypedName",
														"src": "6744:3:12",
														"type": ""
													}
												],
												"src": "6688:112:12"
											},
											{
												"body": {
													"nativeSrc": "6900:120:12",
													"nodeType": "YulBlock",
													"src": "6900:120:12",
													"statements": [
														{
															"nativeSrc": "6910:26:12",
															"nodeType": "YulAssignment",
															"src": "6910:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:12"
																},
																"nativeSrc": "6918:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6986:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:12"
																		},
																		"nativeSrc": "6995:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:12"
																},
																"nativeSrc": "6946:67:12",
																"nodeType": "YulFunctionCall",
																"src": "6946:67:12"
															},
															"nativeSrc": "6946:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "6946:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6806:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6872:9:12",
														"nodeType": "YulTypedName",
														"src": "6872:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6884:6:12",
														"nodeType": "YulTypedName",
														"src": "6884:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6895:4:12",
														"nodeType": "YulTypedName",
														"src": "6895:4:12",
														"type": ""
													}
												],
												"src": "6806:214:12"
											},
											{
												"body": {
													"nativeSrc": "7091:53:12",
													"nodeType": "YulBlock",
													"src": "7091:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7108:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7108:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7131:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7131:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7113:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "7113:17:12"
																		},
																		"nativeSrc": "7113:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7113:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7101:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7101:6:12"
																},
																"nativeSrc": "7101:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7101:37:12"
															},
															"nativeSrc": "7101:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "7101:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7026:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7079:5:12",
														"nodeType": "YulTypedName",
														"src": "7079:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7086:3:12",
														"nodeType": "YulTypedName",
														"src": "7086:3:12",
														"type": ""
													}
												],
												"src": "7026:118:12"
											},
											{
												"body": {
													"nativeSrc": "7248:124:12",
													"nodeType": "YulBlock",
													"src": "7248:124:12",
													"statements": [
														{
															"nativeSrc": "7258:26:12",
															"nodeType": "YulAssignment",
															"src": "7258:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7270:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7270:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7281:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7281:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7266:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7266:3:12"
																},
																"nativeSrc": "7266:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7266:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7258:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7258:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7338:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7338:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7351:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7351:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7362:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7362:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7347:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7347:3:12"
																		},
																		"nativeSrc": "7347:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7347:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7294:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7294:43:12"
																},
																"nativeSrc": "7294:71:12",
																"nodeType": "YulFunctionCall",
																"src": "7294:71:12"
															},
															"nativeSrc": "7294:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "7294:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7150:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7220:9:12",
														"nodeType": "YulTypedName",
														"src": "7220:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7232:6:12",
														"nodeType": "YulTypedName",
														"src": "7232:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7243:4:12",
														"nodeType": "YulTypedName",
														"src": "7243:4:12",
														"type": ""
													}
												],
												"src": "7150:222:12"
											},
											{
												"body": {
													"nativeSrc": "7444:263:12",
													"nodeType": "YulBlock",
													"src": "7444:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7490:83:12",
																"nodeType": "YulBlock",
																"src": "7490:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7492:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7492:77:12"
																			},
																			"nativeSrc": "7492:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7492:79:12"
																		},
																		"nativeSrc": "7492:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7492:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7465:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7465:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7474:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7461:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:12"
																		},
																		"nativeSrc": "7461:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7486:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:12"
																},
																"nativeSrc": "7457:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7457:32:12"
															},
															"nativeSrc": "7454:119:12",
															"nodeType": "YulIf",
															"src": "7454:119:12"
														},
														{
															"nativeSrc": "7583:117:12",
															"nodeType": "YulBlock",
															"src": "7583:117:12",
															"statements": [
																{
																	"nativeSrc": "7598:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7598:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7602:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7602:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7627:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7627:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7662:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7662:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7673:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7673:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7658:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:12"
																				},
																				"nativeSrc": "7658:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7658:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7682:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7682:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7637:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7637:20:12"
																		},
																		"nativeSrc": "7637:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7627:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7627:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7378:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7414:9:12",
														"nodeType": "YulTypedName",
														"src": "7414:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7425:7:12",
														"nodeType": "YulTypedName",
														"src": "7425:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7437:6:12",
														"nodeType": "YulTypedName",
														"src": "7437:6:12",
														"type": ""
													}
												],
												"src": "7378:329:12"
											},
											{
												"body": {
													"nativeSrc": "7766:51:12",
													"nodeType": "YulBlock",
													"src": "7766:51:12",
													"statements": [
														{
															"nativeSrc": "7776:35:12",
															"nodeType": "YulAssignment",
															"src": "7776:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7805:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7805:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7787:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7787:17:12"
																},
																"nativeSrc": "7787:24:12",
																"nodeType": "YulFunctionCall",
																"src": "7787:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7776:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7776:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "7713:104:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7748:5:12",
														"nodeType": "YulTypedName",
														"src": "7748:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7758:7:12",
														"nodeType": "YulTypedName",
														"src": "7758:7:12",
														"type": ""
													}
												],
												"src": "7713:104:12"
											},
											{
												"body": {
													"nativeSrc": "7904:61:12",
													"nodeType": "YulBlock",
													"src": "7904:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7921:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7921:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7952:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7952:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "7926:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "7926:25:12"
																		},
																		"nativeSrc": "7926:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7926:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7914:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:12"
																},
																"nativeSrc": "7914:45:12",
																"nodeType": "YulFunctionCall",
																"src": "7914:45:12"
															},
															"nativeSrc": "7914:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "7914:45:12"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "7823:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7892:5:12",
														"nodeType": "YulTypedName",
														"src": "7892:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7899:3:12",
														"nodeType": "YulTypedName",
														"src": "7899:3:12",
														"type": ""
													}
												],
												"src": "7823:142:12"
											},
											{
												"body": {
													"nativeSrc": "8085:140:12",
													"nodeType": "YulBlock",
													"src": "8085:140:12",
													"statements": [
														{
															"nativeSrc": "8095:26:12",
															"nodeType": "YulAssignment",
															"src": "8095:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8107:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8107:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8118:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8118:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8103:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8103:3:12"
																},
																"nativeSrc": "8103:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8103:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8095:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8095:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8191:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8191:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8204:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8204:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8215:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8215:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8200:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8200:3:12"
																		},
																		"nativeSrc": "8200:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8200:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "8131:59:12",
																	"nodeType": "YulIdentifier",
																	"src": "8131:59:12"
																},
																"nativeSrc": "8131:87:12",
																"nodeType": "YulFunctionCall",
																"src": "8131:87:12"
															},
															"nativeSrc": "8131:87:12",
															"nodeType": "YulExpressionStatement",
															"src": "8131:87:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "7971:254:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8057:9:12",
														"nodeType": "YulTypedName",
														"src": "8057:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8069:6:12",
														"nodeType": "YulTypedName",
														"src": "8069:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8080:4:12",
														"nodeType": "YulTypedName",
														"src": "8080:4:12",
														"type": ""
													}
												],
												"src": "7971:254:12"
											},
											{
												"body": {
													"nativeSrc": "8271:76:12",
													"nodeType": "YulBlock",
													"src": "8271:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8325:16:12",
																"nodeType": "YulBlock",
																"src": "8325:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8334:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8334:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8337:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8337:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8327:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8327:6:12"
																			},
																			"nativeSrc": "8327:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8327:12:12"
																		},
																		"nativeSrc": "8327:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8327:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8294:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8294:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8316:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "8316:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8301:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "8301:14:12"
																				},
																				"nativeSrc": "8301:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8301:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8291:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8291:2:12"
																		},
																		"nativeSrc": "8291:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8291:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8284:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8284:6:12"
																},
																"nativeSrc": "8284:40:12",
																"nodeType": "YulFunctionCall",
																"src": "8284:40:12"
															},
															"nativeSrc": "8281:60:12",
															"nodeType": "YulIf",
															"src": "8281:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8231:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8264:5:12",
														"nodeType": "YulTypedName",
														"src": "8264:5:12",
														"type": ""
													}
												],
												"src": "8231:116:12"
											},
											{
												"body": {
													"nativeSrc": "8402:84:12",
													"nodeType": "YulBlock",
													"src": "8402:84:12",
													"statements": [
														{
															"nativeSrc": "8412:29:12",
															"nodeType": "YulAssignment",
															"src": "8412:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8434:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8434:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8421:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8421:12:12"
																},
																"nativeSrc": "8421:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8421:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8412:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8412:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8474:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8474:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8450:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "8450:23:12"
																},
																"nativeSrc": "8450:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8450:30:12"
															},
															"nativeSrc": "8450:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8450:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "8353:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8380:6:12",
														"nodeType": "YulTypedName",
														"src": "8380:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8388:3:12",
														"nodeType": "YulTypedName",
														"src": "8388:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8396:5:12",
														"nodeType": "YulTypedName",
														"src": "8396:5:12",
														"type": ""
													}
												],
												"src": "8353:133:12"
											},
											{
												"body": {
													"nativeSrc": "8555:260:12",
													"nodeType": "YulBlock",
													"src": "8555:260:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8601:83:12",
																"nodeType": "YulBlock",
																"src": "8601:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8603:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8603:77:12"
																			},
																			"nativeSrc": "8603:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8603:79:12"
																		},
																		"nativeSrc": "8603:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8603:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8576:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8576:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8585:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8585:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8572:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:12"
																		},
																		"nativeSrc": "8572:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8597:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8597:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8568:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8568:3:12"
																},
																"nativeSrc": "8568:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8568:32:12"
															},
															"nativeSrc": "8565:119:12",
															"nodeType": "YulIf",
															"src": "8565:119:12"
														},
														{
															"nativeSrc": "8694:114:12",
															"nodeType": "YulBlock",
															"src": "8694:114:12",
															"statements": [
																{
																	"nativeSrc": "8709:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8709:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8723:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8723:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8713:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8713:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8738:60:12",
																	"nodeType": "YulAssignment",
																	"src": "8738:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8770:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8770:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8781:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8781:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8766:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8766:3:12"
																				},
																				"nativeSrc": "8766:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8766:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8790:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8790:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8748:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "8748:17:12"
																		},
																		"nativeSrc": "8748:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8748:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8738:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8738:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "8492:323:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8525:9:12",
														"nodeType": "YulTypedName",
														"src": "8525:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8536:7:12",
														"nodeType": "YulTypedName",
														"src": "8536:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8548:6:12",
														"nodeType": "YulTypedName",
														"src": "8548:6:12",
														"type": ""
													}
												],
												"src": "8492:323:12"
											},
											{
												"body": {
													"nativeSrc": "8904:391:12",
													"nodeType": "YulBlock",
													"src": "8904:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8950:83:12",
																"nodeType": "YulBlock",
																"src": "8950:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8952:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8952:77:12"
																			},
																			"nativeSrc": "8952:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8952:79:12"
																		},
																		"nativeSrc": "8952:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8952:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8925:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8925:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8934:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8934:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8921:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8921:3:12"
																		},
																		"nativeSrc": "8921:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8921:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8946:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8946:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8917:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8917:3:12"
																},
																"nativeSrc": "8917:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8917:32:12"
															},
															"nativeSrc": "8914:119:12",
															"nodeType": "YulIf",
															"src": "8914:119:12"
														},
														{
															"nativeSrc": "9043:117:12",
															"nodeType": "YulBlock",
															"src": "9043:117:12",
															"statements": [
																{
																	"nativeSrc": "9058:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9058:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9072:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9072:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9062:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9062:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9087:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9087:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9122:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9122:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9133:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9133:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9118:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9118:3:12"
																				},
																				"nativeSrc": "9118:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9118:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9142:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9142:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9097:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9097:20:12"
																		},
																		"nativeSrc": "9097:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9097:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9087:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9087:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9170:118:12",
															"nodeType": "YulBlock",
															"src": "9170:118:12",
															"statements": [
																{
																	"nativeSrc": "9185:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9185:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9199:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9199:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9189:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9189:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9215:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9215:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9250:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9250:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9261:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9261:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9246:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9246:3:12"
																				},
																				"nativeSrc": "9246:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9246:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9270:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9270:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9225:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9225:20:12"
																		},
																		"nativeSrc": "9225:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9225:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9215:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9215:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8821:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8866:9:12",
														"nodeType": "YulTypedName",
														"src": "8866:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8877:7:12",
														"nodeType": "YulTypedName",
														"src": "8877:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8889:6:12",
														"nodeType": "YulTypedName",
														"src": "8889:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8897:6:12",
														"nodeType": "YulTypedName",
														"src": "8897:6:12",
														"type": ""
													}
												],
												"src": "8821:474:12"
											},
											{
												"body": {
													"nativeSrc": "9375:40:12",
													"nodeType": "YulBlock",
													"src": "9375:40:12",
													"statements": [
														{
															"nativeSrc": "9386:22:12",
															"nodeType": "YulAssignment",
															"src": "9386:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9402:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9402:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9396:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9396:5:12"
																},
																"nativeSrc": "9396:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9396:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9386:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9386:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "9301:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9358:5:12",
														"nodeType": "YulTypedName",
														"src": "9358:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9368:6:12",
														"nodeType": "YulTypedName",
														"src": "9368:6:12",
														"type": ""
													}
												],
												"src": "9301:114:12"
											},
											{
												"body": {
													"nativeSrc": "9532:73:12",
													"nodeType": "YulBlock",
													"src": "9532:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9549:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9549:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9554:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9554:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9542:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9542:6:12"
																},
																"nativeSrc": "9542:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9542:19:12"
															},
															"nativeSrc": "9542:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "9542:19:12"
														},
														{
															"nativeSrc": "9570:29:12",
															"nodeType": "YulAssignment",
															"src": "9570:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9589:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9589:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9594:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9594:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9585:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9585:3:12"
																},
																"nativeSrc": "9585:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9585:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9570:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "9570:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "9421:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9504:3:12",
														"nodeType": "YulTypedName",
														"src": "9504:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9509:6:12",
														"nodeType": "YulTypedName",
														"src": "9509:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9520:11:12",
														"nodeType": "YulTypedName",
														"src": "9520:11:12",
														"type": ""
													}
												],
												"src": "9421:184:12"
											},
											{
												"body": {
													"nativeSrc": "9683:60:12",
													"nodeType": "YulBlock",
													"src": "9683:60:12",
													"statements": [
														{
															"nativeSrc": "9693:11:12",
															"nodeType": "YulAssignment",
															"src": "9693:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "9701:3:12",
																"nodeType": "YulIdentifier",
																"src": "9701:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9693:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9693:4:12"
																}
															]
														},
														{
															"nativeSrc": "9714:22:12",
															"nodeType": "YulAssignment",
															"src": "9714:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9726:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9726:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9731:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9731:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9722:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9722:3:12"
																},
																"nativeSrc": "9722:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9722:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9714:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9714:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "9611:132:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9670:3:12",
														"nodeType": "YulTypedName",
														"src": "9670:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9678:4:12",
														"nodeType": "YulTypedName",
														"src": "9678:4:12",
														"type": ""
													}
												],
												"src": "9611:132:12"
											},
											{
												"body": {
													"nativeSrc": "9804:53:12",
													"nodeType": "YulBlock",
													"src": "9804:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9821:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9821:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9844:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9844:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9826:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9826:17:12"
																		},
																		"nativeSrc": "9826:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9826:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9814:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9814:6:12"
																},
																"nativeSrc": "9814:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9814:37:12"
															},
															"nativeSrc": "9814:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9814:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "9749:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9792:5:12",
														"nodeType": "YulTypedName",
														"src": "9792:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9799:3:12",
														"nodeType": "YulTypedName",
														"src": "9799:3:12",
														"type": ""
													}
												],
												"src": "9749:108:12"
											},
											{
												"body": {
													"nativeSrc": "9943:99:12",
													"nodeType": "YulBlock",
													"src": "9943:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9987:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9987:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9995:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9995:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "9953:33:12",
																	"nodeType": "YulIdentifier",
																	"src": "9953:33:12"
																},
																"nativeSrc": "9953:46:12",
																"nodeType": "YulFunctionCall",
																"src": "9953:46:12"
															},
															"nativeSrc": "9953:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "9953:46:12"
														},
														{
															"nativeSrc": "10008:28:12",
															"nodeType": "YulAssignment",
															"src": "10008:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10026:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10026:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10031:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10031:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10022:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10022:3:12"
																},
																"nativeSrc": "10022:14:12",
																"nodeType": "YulFunctionCall",
																"src": "10022:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "10008:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "10008:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "9863:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "9916:6:12",
														"nodeType": "YulTypedName",
														"src": "9916:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9924:3:12",
														"nodeType": "YulTypedName",
														"src": "9924:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "9932:10:12",
														"nodeType": "YulTypedName",
														"src": "9932:10:12",
														"type": ""
													}
												],
												"src": "9863:179:12"
											},
											{
												"body": {
													"nativeSrc": "10123:38:12",
													"nodeType": "YulBlock",
													"src": "10123:38:12",
													"statements": [
														{
															"nativeSrc": "10133:22:12",
															"nodeType": "YulAssignment",
															"src": "10133:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "10145:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10145:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10150:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10150:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10141:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10141:3:12"
																},
																"nativeSrc": "10141:14:12",
																"nodeType": "YulFunctionCall",
																"src": "10141:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "10133:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10133:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10048:113:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10110:3:12",
														"nodeType": "YulTypedName",
														"src": "10110:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "10118:4:12",
														"nodeType": "YulTypedName",
														"src": "10118:4:12",
														"type": ""
													}
												],
												"src": "10048:113:12"
											},
											{
												"body": {
													"nativeSrc": "10321:608:12",
													"nodeType": "YulBlock",
													"src": "10321:608:12",
													"statements": [
														{
															"nativeSrc": "10331:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10331:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10393:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10393:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "10345:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "10345:47:12"
																},
																"nativeSrc": "10345:54:12",
																"nodeType": "YulFunctionCall",
																"src": "10345:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10335:6:12",
																	"nodeType": "YulTypedName",
																	"src": "10335:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10408:93:12",
															"nodeType": "YulAssignment",
															"src": "10408:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10489:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10489:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10494:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10494:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10415:73:12",
																	"nodeType": "YulIdentifier",
																	"src": "10415:73:12"
																},
																"nativeSrc": "10415:86:12",
																"nodeType": "YulFunctionCall",
																"src": "10415:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10408:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:12"
																}
															]
														},
														{
															"nativeSrc": "10510:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10510:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10575:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10575:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "10525:49:12",
																	"nodeType": "YulIdentifier",
																	"src": "10525:49:12"
																},
																"nativeSrc": "10525:56:12",
																"nodeType": "YulFunctionCall",
																"src": "10525:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "10514:7:12",
																	"nodeType": "YulTypedName",
																	"src": "10514:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10590:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10590:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "10604:7:12",
																"nodeType": "YulIdentifier",
																"src": "10604:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "10594:6:12",
																	"nodeType": "YulTypedName",
																	"src": "10594:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10680:224:12",
																"nodeType": "YulBlock",
																"src": "10680:224:12",
																"statements": [
																	{
																		"nativeSrc": "10694:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10694:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10721:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10721:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "10715:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10715:5:12"
																			},
																			"nativeSrc": "10715:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10715:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "10698:13:12",
																				"nodeType": "YulTypedName",
																				"src": "10698:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10741:70:12",
																		"nodeType": "YulAssignment",
																		"src": "10741:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "10792:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "10792:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "10807:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10807:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "10748:43:12",
																				"nodeType": "YulIdentifier",
																				"src": "10748:43:12"
																			},
																			"nativeSrc": "10748:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10748:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "10741:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10741:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10824:70:12",
																		"nodeType": "YulAssignment",
																		"src": "10824:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10887:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10887:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "10834:52:12",
																				"nodeType": "YulIdentifier",
																				"src": "10834:52:12"
																			},
																			"nativeSrc": "10834:60:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10834:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "10824:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10824:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "10642:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10642:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10645:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10645:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10639:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10639:2:12"
																},
																"nativeSrc": "10639:13:12",
																"nodeType": "YulFunctionCall",
																"src": "10639:13:12"
															},
															"nativeSrc": "10620:284:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10653:18:12",
																"nodeType": "YulBlock",
																"src": "10653:18:12",
																"statements": [
																	{
																		"nativeSrc": "10655:14:12",
																		"nodeType": "YulAssignment",
																		"src": "10655:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "10664:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "10664:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10667:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10667:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10660:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10660:3:12"
																			},
																			"nativeSrc": "10660:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10660:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "10655:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "10655:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10624:14:12",
																"nodeType": "YulBlock",
																"src": "10624:14:12",
																"statements": [
																	{
																		"nativeSrc": "10626:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10626:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10635:1:12",
																			"nodeType": "YulLiteral",
																			"src": "10635:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "10630:1:12",
																				"nodeType": "YulTypedName",
																				"src": "10630:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10620:284:12"
														},
														{
															"nativeSrc": "10913:10:12",
															"nodeType": "YulAssignment",
															"src": "10913:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "10920:3:12",
																"nodeType": "YulIdentifier",
																"src": "10920:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10913:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10913:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "10197:732:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10300:5:12",
														"nodeType": "YulTypedName",
														"src": "10300:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10307:3:12",
														"nodeType": "YulTypedName",
														"src": "10307:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10316:3:12",
														"nodeType": "YulTypedName",
														"src": "10316:3:12",
														"type": ""
													}
												],
												"src": "10197:732:12"
											},
											{
												"body": {
													"nativeSrc": "11083:225:12",
													"nodeType": "YulBlock",
													"src": "11083:225:12",
													"statements": [
														{
															"nativeSrc": "11093:26:12",
															"nodeType": "YulAssignment",
															"src": "11093:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11105:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11105:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11116:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11116:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11101:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11101:3:12"
																},
																"nativeSrc": "11101:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11101:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11093:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11093:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11140:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11140:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11151:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11151:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11136:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11136:3:12"
																		},
																		"nativeSrc": "11136:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11136:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11159:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11159:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11165:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11165:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11155:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11155:3:12"
																		},
																		"nativeSrc": "11155:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11155:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11129:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11129:6:12"
																},
																"nativeSrc": "11129:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11129:47:12"
															},
															"nativeSrc": "11129:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11129:47:12"
														},
														{
															"nativeSrc": "11185:116:12",
															"nodeType": "YulAssignment",
															"src": "11185:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11287:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11287:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11296:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11296:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "11193:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "11193:93:12"
																},
																"nativeSrc": "11193:108:12",
																"nodeType": "YulFunctionCall",
																"src": "11193:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11185:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11185:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "10935:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11055:9:12",
														"nodeType": "YulTypedName",
														"src": "11055:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11067:6:12",
														"nodeType": "YulTypedName",
														"src": "11067:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11078:4:12",
														"nodeType": "YulTypedName",
														"src": "11078:4:12",
														"type": ""
													}
												],
												"src": "10935:373:12"
											},
											{
												"body": {
													"nativeSrc": "11420:67:12",
													"nodeType": "YulBlock",
													"src": "11420:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11442:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11442:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11450:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11450:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11438:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11438:3:12"
																		},
																		"nativeSrc": "11438:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11438:14:12"
																	},
																	{
																		"hexValue": "62757965722069732061207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "11454:25:12",
																		"nodeType": "YulLiteral",
																		"src": "11454:25:12",
																		"type": "",
																		"value": "buyer is a zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11431:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11431:6:12"
																},
																"nativeSrc": "11431:49:12",
																"nodeType": "YulFunctionCall",
																"src": "11431:49:12"
															},
															"nativeSrc": "11431:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "11431:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf",
												"nativeSrc": "11314:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11412:6:12",
														"nodeType": "YulTypedName",
														"src": "11412:6:12",
														"type": ""
													}
												],
												"src": "11314:173:12"
											},
											{
												"body": {
													"nativeSrc": "11639:220:12",
													"nodeType": "YulBlock",
													"src": "11639:220:12",
													"statements": [
														{
															"nativeSrc": "11649:74:12",
															"nodeType": "YulAssignment",
															"src": "11649:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11715:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11715:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11720:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11720:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11656:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11656:58:12"
																},
																"nativeSrc": "11656:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11656:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11649:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11649:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11821:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11821:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf",
																	"nativeSrc": "11732:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11732:88:12"
																},
																"nativeSrc": "11732:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11732:93:12"
															},
															"nativeSrc": "11732:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11732:93:12"
														},
														{
															"nativeSrc": "11834:19:12",
															"nodeType": "YulAssignment",
															"src": "11834:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11845:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11845:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11850:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11850:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11841:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11841:3:12"
																},
																"nativeSrc": "11841:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11841:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11834:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11834:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11493:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11627:3:12",
														"nodeType": "YulTypedName",
														"src": "11627:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11635:3:12",
														"nodeType": "YulTypedName",
														"src": "11635:3:12",
														"type": ""
													}
												],
												"src": "11493:366:12"
											},
											{
												"body": {
													"nativeSrc": "12036:248:12",
													"nodeType": "YulBlock",
													"src": "12036:248:12",
													"statements": [
														{
															"nativeSrc": "12046:26:12",
															"nodeType": "YulAssignment",
															"src": "12046:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12058:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12058:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12069:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12069:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12054:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12054:3:12"
																},
																"nativeSrc": "12054:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12054:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12046:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12046:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12093:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12093:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12104:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12104:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12089:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12089:3:12"
																		},
																		"nativeSrc": "12089:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12089:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12112:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12112:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12118:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12118:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12108:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12108:3:12"
																		},
																		"nativeSrc": "12108:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12108:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12082:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12082:6:12"
																},
																"nativeSrc": "12082:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12082:47:12"
															},
															"nativeSrc": "12082:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12082:47:12"
														},
														{
															"nativeSrc": "12138:139:12",
															"nodeType": "YulAssignment",
															"src": "12138:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12272:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12272:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12146:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12146:124:12"
																},
																"nativeSrc": "12146:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12146:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12138:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12138:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11865:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12016:9:12",
														"nodeType": "YulTypedName",
														"src": "12016:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12031:4:12",
														"nodeType": "YulTypedName",
														"src": "12031:4:12",
														"type": ""
													}
												],
												"src": "11865:419:12"
											},
											{
												"body": {
													"nativeSrc": "12396:58:12",
													"nodeType": "YulBlock",
													"src": "12396:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12418:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12418:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12426:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12426:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12414:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12414:3:12"
																		},
																		"nativeSrc": "12414:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12414:14:12"
																	},
																	{
																		"hexValue": "776569416d6f756e742069732030",
																		"kind": "string",
																		"nativeSrc": "12430:16:12",
																		"nodeType": "YulLiteral",
																		"src": "12430:16:12",
																		"type": "",
																		"value": "weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12407:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12407:6:12"
																},
																"nativeSrc": "12407:40:12",
																"nodeType": "YulFunctionCall",
																"src": "12407:40:12"
															},
															"nativeSrc": "12407:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "12407:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027",
												"nativeSrc": "12290:164:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12388:6:12",
														"nodeType": "YulTypedName",
														"src": "12388:6:12",
														"type": ""
													}
												],
												"src": "12290:164:12"
											},
											{
												"body": {
													"nativeSrc": "12606:220:12",
													"nodeType": "YulBlock",
													"src": "12606:220:12",
													"statements": [
														{
															"nativeSrc": "12616:74:12",
															"nodeType": "YulAssignment",
															"src": "12616:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12682:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12682:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12687:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12687:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12623:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12623:58:12"
																},
																"nativeSrc": "12623:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12623:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12616:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12616:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12788:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12788:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027",
																	"nativeSrc": "12699:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12699:88:12"
																},
																"nativeSrc": "12699:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12699:93:12"
															},
															"nativeSrc": "12699:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12699:93:12"
														},
														{
															"nativeSrc": "12801:19:12",
															"nodeType": "YulAssignment",
															"src": "12801:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12812:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12812:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12817:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12817:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12808:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12808:3:12"
																},
																"nativeSrc": "12808:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12808:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12801:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12801:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12460:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12594:3:12",
														"nodeType": "YulTypedName",
														"src": "12594:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12602:3:12",
														"nodeType": "YulTypedName",
														"src": "12602:3:12",
														"type": ""
													}
												],
												"src": "12460:366:12"
											},
											{
												"body": {
													"nativeSrc": "13003:248:12",
													"nodeType": "YulBlock",
													"src": "13003:248:12",
													"statements": [
														{
															"nativeSrc": "13013:26:12",
															"nodeType": "YulAssignment",
															"src": "13013:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13025:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13025:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13036:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13036:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13021:3:12"
																},
																"nativeSrc": "13021:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13021:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13013:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13013:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13060:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13060:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13071:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13071:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13056:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13056:3:12"
																		},
																		"nativeSrc": "13056:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13056:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13079:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13079:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13085:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13085:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13075:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13075:3:12"
																		},
																		"nativeSrc": "13075:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13075:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13049:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13049:6:12"
																},
																"nativeSrc": "13049:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13049:47:12"
															},
															"nativeSrc": "13049:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13049:47:12"
														},
														{
															"nativeSrc": "13105:139:12",
															"nodeType": "YulAssignment",
															"src": "13105:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13239:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13239:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13113:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13113:124:12"
																},
																"nativeSrc": "13113:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13113:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13105:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13105:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12832:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12983:9:12",
														"nodeType": "YulTypedName",
														"src": "12983:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12998:4:12",
														"nodeType": "YulTypedName",
														"src": "12998:4:12",
														"type": ""
													}
												],
												"src": "12832:419:12"
											},
											{
												"body": {
													"nativeSrc": "13285:152:12",
													"nodeType": "YulBlock",
													"src": "13285:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13302:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13302:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13305:77:12",
																		"nodeType": "YulLiteral",
																		"src": "13305:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13295:6:12"
																},
																"nativeSrc": "13295:88:12",
																"nodeType": "YulFunctionCall",
																"src": "13295:88:12"
															},
															"nativeSrc": "13295:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "13295:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13399:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13399:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13402:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13402:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13392:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13392:6:12"
																},
																"nativeSrc": "13392:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13392:15:12"
															},
															"nativeSrc": "13392:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "13392:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13423:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13423:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13426:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13426:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13416:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13416:6:12"
																},
																"nativeSrc": "13416:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13416:15:12"
															},
															"nativeSrc": "13416:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "13416:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13257:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "13257:180:12"
											},
											{
												"body": {
													"nativeSrc": "13491:362:12",
													"nodeType": "YulBlock",
													"src": "13491:362:12",
													"statements": [
														{
															"nativeSrc": "13501:25:12",
															"nodeType": "YulAssignment",
															"src": "13501:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13524:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13524:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13506:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "13506:17:12"
																},
																"nativeSrc": "13506:20:12",
																"nodeType": "YulFunctionCall",
																"src": "13506:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13501:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "13501:1:12"
																}
															]
														},
														{
															"nativeSrc": "13535:25:12",
															"nodeType": "YulAssignment",
															"src": "13535:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13558:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13558:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13540:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "13540:17:12"
																},
																"nativeSrc": "13540:20:12",
																"nodeType": "YulFunctionCall",
																"src": "13540:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13535:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "13535:1:12"
																}
															]
														},
														{
															"nativeSrc": "13569:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13569:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13592:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13592:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13595:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13595:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13588:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13588:3:12"
																},
																"nativeSrc": "13588:9:12",
																"nodeType": "YulFunctionCall",
																"src": "13588:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13573:11:12",
																	"nodeType": "YulTypedName",
																	"src": "13573:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13606:41:12",
															"nodeType": "YulAssignment",
															"src": "13606:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13635:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "13635:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13617:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "13617:17:12"
																},
																"nativeSrc": "13617:30:12",
																"nodeType": "YulFunctionCall",
																"src": "13617:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13606:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "13606:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13824:22:12",
																"nodeType": "YulBlock",
																"src": "13824:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13826:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "13826:16:12"
																			},
																			"nativeSrc": "13826:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13826:18:12"
																		},
																		"nativeSrc": "13826:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13826:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13757:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "13757:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13750:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "13750:6:12"
																				},
																				"nativeSrc": "13750:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13750:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13780:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "13780:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13787:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "13787:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13796:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "13796:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13783:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "13783:3:12"
																						},
																						"nativeSrc": "13783:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "13783:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13777:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "13777:2:12"
																				},
																				"nativeSrc": "13777:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13777:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13730:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "13730:2:12"
																		},
																		"nativeSrc": "13730:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13730:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13710:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13710:6:12"
																},
																"nativeSrc": "13710:113:12",
																"nodeType": "YulFunctionCall",
																"src": "13710:113:12"
															},
															"nativeSrc": "13707:139:12",
															"nodeType": "YulIf",
															"src": "13707:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13443:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13474:1:12",
														"nodeType": "YulTypedName",
														"src": "13474:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13477:1:12",
														"nodeType": "YulTypedName",
														"src": "13477:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13483:7:12",
														"nodeType": "YulTypedName",
														"src": "13483:7:12",
														"type": ""
													}
												],
												"src": "13443:410:12"
											},
											{
												"body": {
													"nativeSrc": "13887:152:12",
													"nodeType": "YulBlock",
													"src": "13887:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13904:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13904:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13907:77:12",
																		"nodeType": "YulLiteral",
																		"src": "13907:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13897:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13897:6:12"
																},
																"nativeSrc": "13897:88:12",
																"nodeType": "YulFunctionCall",
																"src": "13897:88:12"
															},
															"nativeSrc": "13897:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "13897:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14001:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14001:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14004:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14004:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13994:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13994:6:12"
																},
																"nativeSrc": "13994:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13994:15:12"
															},
															"nativeSrc": "13994:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "13994:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14025:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14025:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14028:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14028:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14018:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14018:6:12"
																},
																"nativeSrc": "14018:15:12",
																"nodeType": "YulFunctionCall",
																"src": "14018:15:12"
															},
															"nativeSrc": "14018:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "14018:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13859:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "13859:180:12"
											},
											{
												"body": {
													"nativeSrc": "14096:269:12",
													"nodeType": "YulBlock",
													"src": "14096:269:12",
													"statements": [
														{
															"nativeSrc": "14106:22:12",
															"nodeType": "YulAssignment",
															"src": "14106:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14120:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14120:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14126:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14126:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14116:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14116:3:12"
																},
																"nativeSrc": "14116:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14116:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14106:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14106:6:12"
																}
															]
														},
														{
															"nativeSrc": "14137:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14137:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14167:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14167:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14173:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14173:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14163:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14163:3:12"
																},
																"nativeSrc": "14163:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14163:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14141:18:12",
																	"nodeType": "YulTypedName",
																	"src": "14141:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14214:51:12",
																"nodeType": "YulBlock",
																"src": "14214:51:12",
																"statements": [
																	{
																		"nativeSrc": "14228:27:12",
																		"nodeType": "YulAssignment",
																		"src": "14228:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14242:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "14242:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14250:4:12",
																					"nodeType": "YulLiteral",
																					"src": "14250:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14238:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "14238:3:12"
																			},
																			"nativeSrc": "14238:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14238:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14228:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14228:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14194:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "14194:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14187:6:12"
																},
																"nativeSrc": "14187:26:12",
																"nodeType": "YulFunctionCall",
																"src": "14187:26:12"
															},
															"nativeSrc": "14184:81:12",
															"nodeType": "YulIf",
															"src": "14184:81:12"
														},
														{
															"body": {
																"nativeSrc": "14317:42:12",
																"nodeType": "YulBlock",
																"src": "14317:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14331:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "14331:16:12"
																			},
																			"nativeSrc": "14331:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14331:18:12"
																		},
																		"nativeSrc": "14331:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14331:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14281:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "14281:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14304:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14304:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14312:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14312:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14301:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "14301:2:12"
																		},
																		"nativeSrc": "14301:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14301:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14278:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "14278:2:12"
																},
																"nativeSrc": "14278:38:12",
																"nodeType": "YulFunctionCall",
																"src": "14278:38:12"
															},
															"nativeSrc": "14275:84:12",
															"nodeType": "YulIf",
															"src": "14275:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "14045:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14080:4:12",
														"nodeType": "YulTypedName",
														"src": "14080:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14089:6:12",
														"nodeType": "YulTypedName",
														"src": "14089:6:12",
														"type": ""
													}
												],
												"src": "14045:320:12"
											},
											{
												"body": {
													"nativeSrc": "14477:114:12",
													"nodeType": "YulBlock",
													"src": "14477:114:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14499:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14499:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14507:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14507:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14495:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14495:3:12"
																		},
																		"nativeSrc": "14495:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14495:14:12"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "14511:34:12",
																		"nodeType": "YulLiteral",
																		"src": "14511:34:12",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14488:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14488:6:12"
																},
																"nativeSrc": "14488:58:12",
																"nodeType": "YulFunctionCall",
																"src": "14488:58:12"
															},
															"nativeSrc": "14488:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "14488:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14567:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14567:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14575:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14575:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14563:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14563:3:12"
																		},
																		"nativeSrc": "14563:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14563:15:12"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "14580:3:12",
																		"nodeType": "YulLiteral",
																		"src": "14580:3:12",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14556:6:12"
																},
																"nativeSrc": "14556:28:12",
																"nodeType": "YulFunctionCall",
																"src": "14556:28:12"
															},
															"nativeSrc": "14556:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "14556:28:12"
														}
													]
												},
												"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
												"nativeSrc": "14371:220:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14469:6:12",
														"nodeType": "YulTypedName",
														"src": "14469:6:12",
														"type": ""
													}
												],
												"src": "14371:220:12"
											},
											{
												"body": {
													"nativeSrc": "14743:220:12",
													"nodeType": "YulBlock",
													"src": "14743:220:12",
													"statements": [
														{
															"nativeSrc": "14753:74:12",
															"nodeType": "YulAssignment",
															"src": "14753:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14819:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14819:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14824:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14824:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14760:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14760:58:12"
																},
																"nativeSrc": "14760:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14760:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14753:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14753:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14925:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14925:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																	"nativeSrc": "14836:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14836:88:12"
																},
																"nativeSrc": "14836:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14836:93:12"
															},
															"nativeSrc": "14836:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14836:93:12"
														},
														{
															"nativeSrc": "14938:19:12",
															"nodeType": "YulAssignment",
															"src": "14938:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14949:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14949:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14954:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14954:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14945:3:12"
																},
																"nativeSrc": "14945:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14945:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14938:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14938:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14597:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14731:3:12",
														"nodeType": "YulTypedName",
														"src": "14731:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14739:3:12",
														"nodeType": "YulTypedName",
														"src": "14739:3:12",
														"type": ""
													}
												],
												"src": "14597:366:12"
											},
											{
												"body": {
													"nativeSrc": "15140:248:12",
													"nodeType": "YulBlock",
													"src": "15140:248:12",
													"statements": [
														{
															"nativeSrc": "15150:26:12",
															"nodeType": "YulAssignment",
															"src": "15150:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15162:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15162:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15173:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15173:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15158:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15158:3:12"
																},
																"nativeSrc": "15158:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15158:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15150:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15150:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15197:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15197:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15208:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15208:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15193:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15193:3:12"
																		},
																		"nativeSrc": "15193:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15193:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15216:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15216:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15222:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15222:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15212:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15212:3:12"
																		},
																		"nativeSrc": "15212:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15212:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15186:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15186:6:12"
																},
																"nativeSrc": "15186:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15186:47:12"
															},
															"nativeSrc": "15186:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15186:47:12"
														},
														{
															"nativeSrc": "15242:139:12",
															"nodeType": "YulAssignment",
															"src": "15242:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15376:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15376:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15250:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15250:124:12"
																},
																"nativeSrc": "15250:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15250:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15242:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15242:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14969:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15120:9:12",
														"nodeType": "YulTypedName",
														"src": "15120:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15135:4:12",
														"nodeType": "YulTypedName",
														"src": "15135:4:12",
														"type": ""
													}
												],
												"src": "14969:419:12"
											},
											{
												"body": {
													"nativeSrc": "15500:118:12",
													"nodeType": "YulBlock",
													"src": "15500:118:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15522:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15522:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15530:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15530:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15518:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15518:3:12"
																		},
																		"nativeSrc": "15518:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15518:14:12"
																	},
																	{
																		"hexValue": "4f6e6c7920746865204f776e65722063616e2063616c6c20746869732066756e",
																		"kind": "string",
																		"nativeSrc": "15534:34:12",
																		"nodeType": "YulLiteral",
																		"src": "15534:34:12",
																		"type": "",
																		"value": "Only the Owner can call this fun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15511:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15511:6:12"
																},
																"nativeSrc": "15511:58:12",
																"nodeType": "YulFunctionCall",
																"src": "15511:58:12"
															},
															"nativeSrc": "15511:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "15511:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15590:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15590:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15598:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15598:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15586:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15586:3:12"
																		},
																		"nativeSrc": "15586:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15586:15:12"
																	},
																	{
																		"hexValue": "6374696f6e",
																		"kind": "string",
																		"nativeSrc": "15603:7:12",
																		"nodeType": "YulLiteral",
																		"src": "15603:7:12",
																		"type": "",
																		"value": "ction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15579:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15579:6:12"
																},
																"nativeSrc": "15579:32:12",
																"nodeType": "YulFunctionCall",
																"src": "15579:32:12"
															},
															"nativeSrc": "15579:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "15579:32:12"
														}
													]
												},
												"name": "store_literal_in_memory_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11",
												"nativeSrc": "15394:224:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15492:6:12",
														"nodeType": "YulTypedName",
														"src": "15492:6:12",
														"type": ""
													}
												],
												"src": "15394:224:12"
											},
											{
												"body": {
													"nativeSrc": "15770:220:12",
													"nodeType": "YulBlock",
													"src": "15770:220:12",
													"statements": [
														{
															"nativeSrc": "15780:74:12",
															"nodeType": "YulAssignment",
															"src": "15780:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15846:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15846:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15851:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15851:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15787:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15787:58:12"
																},
																"nativeSrc": "15787:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15787:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15780:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15780:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15952:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15952:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11",
																	"nativeSrc": "15863:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15863:88:12"
																},
																"nativeSrc": "15863:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15863:93:12"
															},
															"nativeSrc": "15863:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15863:93:12"
														},
														{
															"nativeSrc": "15965:19:12",
															"nodeType": "YulAssignment",
															"src": "15965:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15976:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15976:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15981:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15972:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15972:3:12"
																},
																"nativeSrc": "15972:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15972:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15965:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15965:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15624:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15758:3:12",
														"nodeType": "YulTypedName",
														"src": "15758:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15766:3:12",
														"nodeType": "YulTypedName",
														"src": "15766:3:12",
														"type": ""
													}
												],
												"src": "15624:366:12"
											},
											{
												"body": {
													"nativeSrc": "16167:248:12",
													"nodeType": "YulBlock",
													"src": "16167:248:12",
													"statements": [
														{
															"nativeSrc": "16177:26:12",
															"nodeType": "YulAssignment",
															"src": "16177:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16189:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16189:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16200:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16200:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16185:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16185:3:12"
																},
																"nativeSrc": "16185:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16185:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16177:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16177:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16224:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16224:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16235:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16235:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16220:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16220:3:12"
																		},
																		"nativeSrc": "16220:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16220:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16243:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16243:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16249:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16249:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16239:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16239:3:12"
																		},
																		"nativeSrc": "16239:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16239:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16213:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16213:6:12"
																},
																"nativeSrc": "16213:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16213:47:12"
															},
															"nativeSrc": "16213:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16213:47:12"
														},
														{
															"nativeSrc": "16269:139:12",
															"nodeType": "YulAssignment",
															"src": "16269:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16403:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16403:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16277:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16277:124:12"
																},
																"nativeSrc": "16277:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16277:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16269:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16269:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15996:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16147:9:12",
														"nodeType": "YulTypedName",
														"src": "16147:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16162:4:12",
														"nodeType": "YulTypedName",
														"src": "16162:4:12",
														"type": ""
													}
												],
												"src": "15996:419:12"
											},
											{
												"body": {
													"nativeSrc": "16527:61:12",
													"nodeType": "YulBlock",
													"src": "16527:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16549:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16549:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16557:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16557:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16545:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16545:3:12"
																		},
																		"nativeSrc": "16545:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16545:14:12"
																	},
																	{
																		"hexValue": "55736572206973206e6f74204b59436564",
																		"kind": "string",
																		"nativeSrc": "16561:19:12",
																		"nodeType": "YulLiteral",
																		"src": "16561:19:12",
																		"type": "",
																		"value": "User is not KYCed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16538:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16538:6:12"
																},
																"nativeSrc": "16538:43:12",
																"nodeType": "YulFunctionCall",
																"src": "16538:43:12"
															},
															"nativeSrc": "16538:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "16538:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3",
												"nativeSrc": "16421:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16519:6:12",
														"nodeType": "YulTypedName",
														"src": "16519:6:12",
														"type": ""
													}
												],
												"src": "16421:167:12"
											},
											{
												"body": {
													"nativeSrc": "16740:220:12",
													"nodeType": "YulBlock",
													"src": "16740:220:12",
													"statements": [
														{
															"nativeSrc": "16750:74:12",
															"nodeType": "YulAssignment",
															"src": "16750:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16816:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16816:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16821:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16821:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16757:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16757:58:12"
																},
																"nativeSrc": "16757:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16757:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16750:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16750:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16922:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16922:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3",
																	"nativeSrc": "16833:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16833:88:12"
																},
																"nativeSrc": "16833:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16833:93:12"
															},
															"nativeSrc": "16833:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16833:93:12"
														},
														{
															"nativeSrc": "16935:19:12",
															"nodeType": "YulAssignment",
															"src": "16935:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16946:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16946:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16951:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16951:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16942:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16942:3:12"
																},
																"nativeSrc": "16942:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16942:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16935:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16935:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16594:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16728:3:12",
														"nodeType": "YulTypedName",
														"src": "16728:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16736:3:12",
														"nodeType": "YulTypedName",
														"src": "16736:3:12",
														"type": ""
													}
												],
												"src": "16594:366:12"
											},
											{
												"body": {
													"nativeSrc": "17137:248:12",
													"nodeType": "YulBlock",
													"src": "17137:248:12",
													"statements": [
														{
															"nativeSrc": "17147:26:12",
															"nodeType": "YulAssignment",
															"src": "17147:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17159:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17159:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17170:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17170:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17155:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17155:3:12"
																},
																"nativeSrc": "17155:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17155:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17147:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17147:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17194:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17194:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17205:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17205:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17190:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17190:3:12"
																		},
																		"nativeSrc": "17190:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17190:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17213:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17213:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17219:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17219:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17209:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17209:3:12"
																		},
																		"nativeSrc": "17209:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17209:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17183:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17183:6:12"
																},
																"nativeSrc": "17183:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17183:47:12"
															},
															"nativeSrc": "17183:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17183:47:12"
														},
														{
															"nativeSrc": "17239:139:12",
															"nodeType": "YulAssignment",
															"src": "17239:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17373:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17373:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17247:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17247:124:12"
																},
																"nativeSrc": "17247:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17247:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17239:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17239:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16966:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17117:9:12",
														"nodeType": "YulTypedName",
														"src": "17117:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17132:4:12",
														"nodeType": "YulTypedName",
														"src": "17132:4:12",
														"type": ""
													}
												],
												"src": "16966:419:12"
											},
											{
												"body": {
													"nativeSrc": "17497:126:12",
													"nodeType": "YulBlock",
													"src": "17497:126:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17519:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17519:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17527:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17527:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17515:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17515:3:12"
																		},
																		"nativeSrc": "17515:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17515:14:12"
																	},
																	{
																		"hexValue": "55736572206f776e7320746f6b656e732c2063616e6e6f742072656d6f766520",
																		"kind": "string",
																		"nativeSrc": "17531:34:12",
																		"nodeType": "YulLiteral",
																		"src": "17531:34:12",
																		"type": "",
																		"value": "User owns tokens, cannot remove "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17508:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17508:6:12"
																},
																"nativeSrc": "17508:58:12",
																"nodeType": "YulFunctionCall",
																"src": "17508:58:12"
															},
															"nativeSrc": "17508:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "17508:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17587:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17587:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17595:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17595:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17583:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17583:3:12"
																		},
																		"nativeSrc": "17583:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17583:15:12"
																	},
																	{
																		"hexValue": "66726f6d204b5943206c697374",
																		"kind": "string",
																		"nativeSrc": "17600:15:12",
																		"nodeType": "YulLiteral",
																		"src": "17600:15:12",
																		"type": "",
																		"value": "from KYC list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17576:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17576:6:12"
																},
																"nativeSrc": "17576:40:12",
																"nodeType": "YulFunctionCall",
																"src": "17576:40:12"
															},
															"nativeSrc": "17576:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "17576:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7",
												"nativeSrc": "17391:232:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17489:6:12",
														"nodeType": "YulTypedName",
														"src": "17489:6:12",
														"type": ""
													}
												],
												"src": "17391:232:12"
											},
											{
												"body": {
													"nativeSrc": "17775:220:12",
													"nodeType": "YulBlock",
													"src": "17775:220:12",
													"statements": [
														{
															"nativeSrc": "17785:74:12",
															"nodeType": "YulAssignment",
															"src": "17785:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17851:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17851:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17856:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17856:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17792:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17792:58:12"
																},
																"nativeSrc": "17792:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17792:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17785:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17785:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17957:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17957:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7",
																	"nativeSrc": "17868:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17868:88:12"
																},
																"nativeSrc": "17868:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17868:93:12"
															},
															"nativeSrc": "17868:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17868:93:12"
														},
														{
															"nativeSrc": "17970:19:12",
															"nodeType": "YulAssignment",
															"src": "17970:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17981:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17981:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17986:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17986:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17977:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17977:3:12"
																},
																"nativeSrc": "17977:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17977:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17970:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17970:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17629:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17763:3:12",
														"nodeType": "YulTypedName",
														"src": "17763:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17771:3:12",
														"nodeType": "YulTypedName",
														"src": "17771:3:12",
														"type": ""
													}
												],
												"src": "17629:366:12"
											},
											{
												"body": {
													"nativeSrc": "18172:248:12",
													"nodeType": "YulBlock",
													"src": "18172:248:12",
													"statements": [
														{
															"nativeSrc": "18182:26:12",
															"nodeType": "YulAssignment",
															"src": "18182:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18194:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18194:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18205:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18205:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18190:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18190:3:12"
																},
																"nativeSrc": "18190:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18190:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18182:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18182:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18229:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18229:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18240:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18240:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18225:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18225:3:12"
																		},
																		"nativeSrc": "18225:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18225:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18248:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18248:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18254:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18254:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18244:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18244:3:12"
																		},
																		"nativeSrc": "18244:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18244:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18218:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18218:6:12"
																},
																"nativeSrc": "18218:47:12",
																"nodeType": "YulFunctionCall",
																"src": "18218:47:12"
															},
															"nativeSrc": "18218:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "18218:47:12"
														},
														{
															"nativeSrc": "18274:139:12",
															"nodeType": "YulAssignment",
															"src": "18274:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18408:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18408:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18282:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "18282:124:12"
																},
																"nativeSrc": "18282:131:12",
																"nodeType": "YulFunctionCall",
																"src": "18282:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18274:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18274:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18001:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18152:9:12",
														"nodeType": "YulTypedName",
														"src": "18152:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18167:4:12",
														"nodeType": "YulTypedName",
														"src": "18167:4:12",
														"type": ""
													}
												],
												"src": "18001:419:12"
											},
											{
												"body": {
													"nativeSrc": "18454:152:12",
													"nodeType": "YulBlock",
													"src": "18454:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18471:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18471:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18474:77:12",
																		"nodeType": "YulLiteral",
																		"src": "18474:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18464:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18464:6:12"
																},
																"nativeSrc": "18464:88:12",
																"nodeType": "YulFunctionCall",
																"src": "18464:88:12"
															},
															"nativeSrc": "18464:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "18464:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18568:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18568:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18571:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18571:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18561:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18561:6:12"
																},
																"nativeSrc": "18561:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18561:15:12"
															},
															"nativeSrc": "18561:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18561:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18592:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18592:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18595:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18595:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18585:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18585:6:12"
																},
																"nativeSrc": "18585:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18585:15:12"
															},
															"nativeSrc": "18585:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18585:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18426:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "18426:180:12"
											},
											{
												"body": {
													"nativeSrc": "18718:70:12",
													"nodeType": "YulBlock",
													"src": "18718:70:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18740:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18740:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18748:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18748:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18736:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18736:3:12"
																		},
																		"nativeSrc": "18736:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18736:14:12"
																	},
																	{
																		"hexValue": "55736572206e6f7420666f756e6420696e204b5943206c697374",
																		"kind": "string",
																		"nativeSrc": "18752:28:12",
																		"nodeType": "YulLiteral",
																		"src": "18752:28:12",
																		"type": "",
																		"value": "User not found in KYC list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18729:6:12"
																},
																"nativeSrc": "18729:52:12",
																"nodeType": "YulFunctionCall",
																"src": "18729:52:12"
															},
															"nativeSrc": "18729:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "18729:52:12"
														}
													]
												},
												"name": "store_literal_in_memory_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52",
												"nativeSrc": "18612:176:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18710:6:12",
														"nodeType": "YulTypedName",
														"src": "18710:6:12",
														"type": ""
													}
												],
												"src": "18612:176:12"
											},
											{
												"body": {
													"nativeSrc": "18940:220:12",
													"nodeType": "YulBlock",
													"src": "18940:220:12",
													"statements": [
														{
															"nativeSrc": "18950:74:12",
															"nodeType": "YulAssignment",
															"src": "18950:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19016:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19016:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19021:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19021:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18957:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "18957:58:12"
																},
																"nativeSrc": "18957:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18957:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18950:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18950:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19122:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19122:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52",
																	"nativeSrc": "19033:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "19033:88:12"
																},
																"nativeSrc": "19033:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19033:93:12"
															},
															"nativeSrc": "19033:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "19033:93:12"
														},
														{
															"nativeSrc": "19135:19:12",
															"nodeType": "YulAssignment",
															"src": "19135:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19146:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19146:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19151:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19151:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19142:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19142:3:12"
																},
																"nativeSrc": "19142:12:12",
																"nodeType": "YulFunctionCall",
																"src": "19142:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19135:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19135:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18794:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18928:3:12",
														"nodeType": "YulTypedName",
														"src": "18928:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18936:3:12",
														"nodeType": "YulTypedName",
														"src": "18936:3:12",
														"type": ""
													}
												],
												"src": "18794:366:12"
											},
											{
												"body": {
													"nativeSrc": "19337:248:12",
													"nodeType": "YulBlock",
													"src": "19337:248:12",
													"statements": [
														{
															"nativeSrc": "19347:26:12",
															"nodeType": "YulAssignment",
															"src": "19347:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19359:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19359:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19370:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19370:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19355:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19355:3:12"
																},
																"nativeSrc": "19355:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19355:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19347:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19347:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19394:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19394:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19405:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19405:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19390:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19390:3:12"
																		},
																		"nativeSrc": "19390:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19390:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19413:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19413:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19419:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19419:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19409:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19409:3:12"
																		},
																		"nativeSrc": "19409:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19409:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19383:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19383:6:12"
																},
																"nativeSrc": "19383:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19383:47:12"
															},
															"nativeSrc": "19383:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19383:47:12"
														},
														{
															"nativeSrc": "19439:139:12",
															"nodeType": "YulAssignment",
															"src": "19439:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19573:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19573:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19447:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "19447:124:12"
																},
																"nativeSrc": "19447:131:12",
																"nodeType": "YulFunctionCall",
																"src": "19447:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19439:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19439:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19166:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19317:9:12",
														"nodeType": "YulTypedName",
														"src": "19317:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19332:4:12",
														"nodeType": "YulTypedName",
														"src": "19332:4:12",
														"type": ""
													}
												],
												"src": "19166:419:12"
											},
											{
												"body": {
													"nativeSrc": "19636:149:12",
													"nodeType": "YulBlock",
													"src": "19636:149:12",
													"statements": [
														{
															"nativeSrc": "19646:25:12",
															"nodeType": "YulAssignment",
															"src": "19646:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19669:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19669:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19651:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19651:17:12"
																},
																"nativeSrc": "19651:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19651:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19646:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19646:1:12"
																}
															]
														},
														{
															"nativeSrc": "19680:25:12",
															"nodeType": "YulAssignment",
															"src": "19680:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19703:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19703:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19685:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19685:17:12"
																},
																"nativeSrc": "19685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19685:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19680:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19680:1:12"
																}
															]
														},
														{
															"nativeSrc": "19714:17:12",
															"nodeType": "YulAssignment",
															"src": "19714:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19726:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19726:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19729:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19729:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "19722:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19722:3:12"
																},
																"nativeSrc": "19722:9:12",
																"nodeType": "YulFunctionCall",
																"src": "19722:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "19714:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19714:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19756:22:12",
																"nodeType": "YulBlock",
																"src": "19756:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19758:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "19758:16:12"
																			},
																			"nativeSrc": "19758:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19758:18:12"
																		},
																		"nativeSrc": "19758:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19758:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "19747:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19747:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "19753:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19753:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19744:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19744:2:12"
																},
																"nativeSrc": "19744:11:12",
																"nodeType": "YulFunctionCall",
																"src": "19744:11:12"
															},
															"nativeSrc": "19741:37:12",
															"nodeType": "YulIf",
															"src": "19741:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "19591:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19622:1:12",
														"nodeType": "YulTypedName",
														"src": "19622:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19625:1:12",
														"nodeType": "YulTypedName",
														"src": "19625:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "19631:4:12",
														"nodeType": "YulTypedName",
														"src": "19631:4:12",
														"type": ""
													}
												],
												"src": "19591:194:12"
											},
											{
												"body": {
													"nativeSrc": "19819:152:12",
													"nodeType": "YulBlock",
													"src": "19819:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19836:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19836:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19839:77:12",
																		"nodeType": "YulLiteral",
																		"src": "19839:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19829:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19829:6:12"
																},
																"nativeSrc": "19829:88:12",
																"nodeType": "YulFunctionCall",
																"src": "19829:88:12"
															},
															"nativeSrc": "19829:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "19829:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19933:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19933:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19936:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19936:4:12",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19926:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19926:6:12"
																},
																"nativeSrc": "19926:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19926:15:12"
															},
															"nativeSrc": "19926:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19926:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19957:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19957:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19960:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19960:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19950:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19950:6:12"
																},
																"nativeSrc": "19950:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19950:15:12"
															},
															"nativeSrc": "19950:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19950:15:12"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "19791:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "19791:180:12"
											},
											{
												"body": {
													"nativeSrc": "20083:70:12",
													"nodeType": "YulBlock",
													"src": "20083:70:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20105:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20105:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20113:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20113:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20101:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20101:3:12"
																		},
																		"nativeSrc": "20101:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20101:14:12"
																	},
																	{
																		"hexValue": "496e76616c6964206e6577206f776e657220616464726573732e",
																		"kind": "string",
																		"nativeSrc": "20117:28:12",
																		"nodeType": "YulLiteral",
																		"src": "20117:28:12",
																		"type": "",
																		"value": "Invalid new owner address."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20094:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20094:6:12"
																},
																"nativeSrc": "20094:52:12",
																"nodeType": "YulFunctionCall",
																"src": "20094:52:12"
															},
															"nativeSrc": "20094:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "20094:52:12"
														}
													]
												},
												"name": "store_literal_in_memory_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200",
												"nativeSrc": "19977:176:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20075:6:12",
														"nodeType": "YulTypedName",
														"src": "20075:6:12",
														"type": ""
													}
												],
												"src": "19977:176:12"
											},
											{
												"body": {
													"nativeSrc": "20305:220:12",
													"nodeType": "YulBlock",
													"src": "20305:220:12",
													"statements": [
														{
															"nativeSrc": "20315:74:12",
															"nodeType": "YulAssignment",
															"src": "20315:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20381:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20381:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20386:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20386:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20322:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "20322:58:12"
																},
																"nativeSrc": "20322:67:12",
																"nodeType": "YulFunctionCall",
																"src": "20322:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20315:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20315:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20487:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20487:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200",
																	"nativeSrc": "20398:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "20398:88:12"
																},
																"nativeSrc": "20398:93:12",
																"nodeType": "YulFunctionCall",
																"src": "20398:93:12"
															},
															"nativeSrc": "20398:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "20398:93:12"
														},
														{
															"nativeSrc": "20500:19:12",
															"nodeType": "YulAssignment",
															"src": "20500:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20511:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20511:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20516:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20516:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20507:3:12"
																},
																"nativeSrc": "20507:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20507:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20500:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20500:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20159:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20293:3:12",
														"nodeType": "YulTypedName",
														"src": "20293:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20301:3:12",
														"nodeType": "YulTypedName",
														"src": "20301:3:12",
														"type": ""
													}
												],
												"src": "20159:366:12"
											},
											{
												"body": {
													"nativeSrc": "20702:248:12",
													"nodeType": "YulBlock",
													"src": "20702:248:12",
													"statements": [
														{
															"nativeSrc": "20712:26:12",
															"nodeType": "YulAssignment",
															"src": "20712:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20724:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20724:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20735:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20735:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20720:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20720:3:12"
																},
																"nativeSrc": "20720:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20720:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20712:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20712:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20759:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20759:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20770:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20770:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20755:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20755:3:12"
																		},
																		"nativeSrc": "20755:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20755:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20778:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20778:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20784:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20784:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20774:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20774:3:12"
																		},
																		"nativeSrc": "20774:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20774:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20748:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20748:6:12"
																},
																"nativeSrc": "20748:47:12",
																"nodeType": "YulFunctionCall",
																"src": "20748:47:12"
															},
															"nativeSrc": "20748:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "20748:47:12"
														},
														{
															"nativeSrc": "20804:139:12",
															"nodeType": "YulAssignment",
															"src": "20804:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20938:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20938:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20812:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "20812:124:12"
																},
																"nativeSrc": "20812:131:12",
																"nodeType": "YulFunctionCall",
																"src": "20812:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20804:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20804:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20531:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20682:9:12",
														"nodeType": "YulTypedName",
														"src": "20682:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20697:4:12",
														"nodeType": "YulTypedName",
														"src": "20697:4:12",
														"type": ""
													}
												],
												"src": "20531:419:12"
											},
											{
												"body": {
													"nativeSrc": "21062:59:12",
													"nodeType": "YulBlock",
													"src": "21062:59:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21084:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21084:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21092:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21092:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21080:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21080:3:12"
																		},
																		"nativeSrc": "21080:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21080:14:12"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "21096:17:12",
																		"nodeType": "YulLiteral",
																		"src": "21096:17:12",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21073:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21073:6:12"
																},
																"nativeSrc": "21073:41:12",
																"nodeType": "YulFunctionCall",
																"src": "21073:41:12"
															},
															"nativeSrc": "21073:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "21073:41:12"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "20956:165:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21054:6:12",
														"nodeType": "YulTypedName",
														"src": "21054:6:12",
														"type": ""
													}
												],
												"src": "20956:165:12"
											},
											{
												"body": {
													"nativeSrc": "21273:220:12",
													"nodeType": "YulBlock",
													"src": "21273:220:12",
													"statements": [
														{
															"nativeSrc": "21283:74:12",
															"nodeType": "YulAssignment",
															"src": "21283:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21349:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21349:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21354:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21354:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21290:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "21290:58:12"
																},
																"nativeSrc": "21290:67:12",
																"nodeType": "YulFunctionCall",
																"src": "21290:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21283:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21283:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21455:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21455:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "21366:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "21366:88:12"
																},
																"nativeSrc": "21366:93:12",
																"nodeType": "YulFunctionCall",
																"src": "21366:93:12"
															},
															"nativeSrc": "21366:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "21366:93:12"
														},
														{
															"nativeSrc": "21468:19:12",
															"nodeType": "YulAssignment",
															"src": "21468:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21479:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21479:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21484:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21484:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21475:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21475:3:12"
																},
																"nativeSrc": "21475:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21475:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21468:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21468:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21127:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21261:3:12",
														"nodeType": "YulTypedName",
														"src": "21261:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21269:3:12",
														"nodeType": "YulTypedName",
														"src": "21269:3:12",
														"type": ""
													}
												],
												"src": "21127:366:12"
											},
											{
												"body": {
													"nativeSrc": "21670:248:12",
													"nodeType": "YulBlock",
													"src": "21670:248:12",
													"statements": [
														{
															"nativeSrc": "21680:26:12",
															"nodeType": "YulAssignment",
															"src": "21680:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21692:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21692:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21703:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21703:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21688:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21688:3:12"
																},
																"nativeSrc": "21688:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21688:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21680:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21680:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21727:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21727:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21738:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21738:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21723:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21723:3:12"
																		},
																		"nativeSrc": "21723:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21723:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21746:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21746:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21752:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21752:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21742:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21742:3:12"
																		},
																		"nativeSrc": "21742:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21742:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21716:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21716:6:12"
																},
																"nativeSrc": "21716:47:12",
																"nodeType": "YulFunctionCall",
																"src": "21716:47:12"
															},
															"nativeSrc": "21716:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "21716:47:12"
														},
														{
															"nativeSrc": "21772:139:12",
															"nodeType": "YulAssignment",
															"src": "21772:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21906:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21906:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21780:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "21780:124:12"
																},
																"nativeSrc": "21780:131:12",
																"nodeType": "YulFunctionCall",
																"src": "21780:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21772:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21772:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21499:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21650:9:12",
														"nodeType": "YulTypedName",
														"src": "21650:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21665:4:12",
														"nodeType": "YulTypedName",
														"src": "21665:4:12",
														"type": ""
													}
												],
												"src": "21499:419:12"
											},
											{
												"body": {
													"nativeSrc": "22030:65:12",
													"nodeType": "YulBlock",
													"src": "22030:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22052:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "22052:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22060:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22060:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22048:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22048:3:12"
																		},
																		"nativeSrc": "22048:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22048:14:12"
																	},
																	{
																		"hexValue": "5573657220697320616c7265616479204b59436564",
																		"kind": "string",
																		"nativeSrc": "22064:23:12",
																		"nodeType": "YulLiteral",
																		"src": "22064:23:12",
																		"type": "",
																		"value": "User is already KYCed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22041:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22041:6:12"
																},
																"nativeSrc": "22041:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22041:47:12"
															},
															"nativeSrc": "22041:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22041:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e",
												"nativeSrc": "21924:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22022:6:12",
														"nodeType": "YulTypedName",
														"src": "22022:6:12",
														"type": ""
													}
												],
												"src": "21924:171:12"
											},
											{
												"body": {
													"nativeSrc": "22247:220:12",
													"nodeType": "YulBlock",
													"src": "22247:220:12",
													"statements": [
														{
															"nativeSrc": "22257:74:12",
															"nodeType": "YulAssignment",
															"src": "22257:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22323:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22323:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22328:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22328:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22264:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "22264:58:12"
																},
																"nativeSrc": "22264:67:12",
																"nodeType": "YulFunctionCall",
																"src": "22264:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22257:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22257:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22429:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22429:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e",
																	"nativeSrc": "22340:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "22340:88:12"
																},
																"nativeSrc": "22340:93:12",
																"nodeType": "YulFunctionCall",
																"src": "22340:93:12"
															},
															"nativeSrc": "22340:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "22340:93:12"
														},
														{
															"nativeSrc": "22442:19:12",
															"nodeType": "YulAssignment",
															"src": "22442:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22453:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22453:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22458:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22458:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22449:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22449:3:12"
																},
																"nativeSrc": "22449:12:12",
																"nodeType": "YulFunctionCall",
																"src": "22449:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22442:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22442:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22101:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22235:3:12",
														"nodeType": "YulTypedName",
														"src": "22235:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22243:3:12",
														"nodeType": "YulTypedName",
														"src": "22243:3:12",
														"type": ""
													}
												],
												"src": "22101:366:12"
											},
											{
												"body": {
													"nativeSrc": "22644:248:12",
													"nodeType": "YulBlock",
													"src": "22644:248:12",
													"statements": [
														{
															"nativeSrc": "22654:26:12",
															"nodeType": "YulAssignment",
															"src": "22654:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22666:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22666:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22677:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22677:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22662:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22662:3:12"
																},
																"nativeSrc": "22662:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22662:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22654:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22701:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22701:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22712:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22712:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22697:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22697:3:12"
																		},
																		"nativeSrc": "22697:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22697:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22720:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22720:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22726:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22726:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22716:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22716:3:12"
																		},
																		"nativeSrc": "22716:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22716:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22690:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22690:6:12"
																},
																"nativeSrc": "22690:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22690:47:12"
															},
															"nativeSrc": "22690:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22690:47:12"
														},
														{
															"nativeSrc": "22746:139:12",
															"nodeType": "YulAssignment",
															"src": "22746:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22880:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22880:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22754:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "22754:124:12"
																},
																"nativeSrc": "22754:131:12",
																"nodeType": "YulFunctionCall",
																"src": "22754:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22746:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22746:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22473:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22624:9:12",
														"nodeType": "YulTypedName",
														"src": "22624:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22639:4:12",
														"nodeType": "YulTypedName",
														"src": "22639:4:12",
														"type": ""
													}
												],
												"src": "22473:419:12"
											},
											{
												"body": {
													"nativeSrc": "23004:75:12",
													"nodeType": "YulBlock",
													"src": "23004:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23026:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "23026:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23034:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23034:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23022:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23022:3:12"
																		},
																		"nativeSrc": "23022:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23022:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "23038:33:12",
																		"nodeType": "YulLiteral",
																		"src": "23038:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23015:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23015:6:12"
																},
																"nativeSrc": "23015:57:12",
																"nodeType": "YulFunctionCall",
																"src": "23015:57:12"
															},
															"nativeSrc": "23015:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "23015:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "22898:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22996:6:12",
														"nodeType": "YulTypedName",
														"src": "22996:6:12",
														"type": ""
													}
												],
												"src": "22898:181:12"
											},
											{
												"body": {
													"nativeSrc": "23231:220:12",
													"nodeType": "YulBlock",
													"src": "23231:220:12",
													"statements": [
														{
															"nativeSrc": "23241:74:12",
															"nodeType": "YulAssignment",
															"src": "23241:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23307:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23307:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23312:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23312:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23248:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "23248:58:12"
																},
																"nativeSrc": "23248:67:12",
																"nodeType": "YulFunctionCall",
																"src": "23248:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23241:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23241:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23413:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23413:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "23324:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "23324:88:12"
																},
																"nativeSrc": "23324:93:12",
																"nodeType": "YulFunctionCall",
																"src": "23324:93:12"
															},
															"nativeSrc": "23324:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "23324:93:12"
														},
														{
															"nativeSrc": "23426:19:12",
															"nodeType": "YulAssignment",
															"src": "23426:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23437:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23437:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23442:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23442:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23433:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23433:3:12"
																},
																"nativeSrc": "23433:12:12",
																"nodeType": "YulFunctionCall",
																"src": "23433:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23426:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23426:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23085:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23219:3:12",
														"nodeType": "YulTypedName",
														"src": "23219:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23227:3:12",
														"nodeType": "YulTypedName",
														"src": "23227:3:12",
														"type": ""
													}
												],
												"src": "23085:366:12"
											},
											{
												"body": {
													"nativeSrc": "23628:248:12",
													"nodeType": "YulBlock",
													"src": "23628:248:12",
													"statements": [
														{
															"nativeSrc": "23638:26:12",
															"nodeType": "YulAssignment",
															"src": "23638:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23650:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "23650:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23661:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23661:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23646:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23646:3:12"
																},
																"nativeSrc": "23646:18:12",
																"nodeType": "YulFunctionCall",
																"src": "23646:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23638:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23638:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23685:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23685:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23696:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23696:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23681:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23681:3:12"
																		},
																		"nativeSrc": "23681:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23681:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23704:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "23704:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23710:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23710:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23700:3:12"
																		},
																		"nativeSrc": "23700:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23700:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23674:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23674:6:12"
																},
																"nativeSrc": "23674:47:12",
																"nodeType": "YulFunctionCall",
																"src": "23674:47:12"
															},
															"nativeSrc": "23674:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "23674:47:12"
														},
														{
															"nativeSrc": "23730:139:12",
															"nodeType": "YulAssignment",
															"src": "23730:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23864:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23864:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23738:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "23738:124:12"
																},
																"nativeSrc": "23738:131:12",
																"nodeType": "YulFunctionCall",
																"src": "23738:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23730:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23730:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23457:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23608:9:12",
														"nodeType": "YulTypedName",
														"src": "23608:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23623:4:12",
														"nodeType": "YulTypedName",
														"src": "23623:4:12",
														"type": ""
													}
												],
												"src": "23457:419:12"
											},
											{
												"body": {
													"nativeSrc": "23988:194:12",
													"nodeType": "YulBlock",
													"src": "23988:194:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24010:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "24010:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24018:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24018:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24006:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24006:3:12"
																		},
																		"nativeSrc": "24006:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24006:14:12"
																	},
																	{
																		"hexValue": "4469766964656e6420506572696f64206973206f6e676f696e672c20616c6c20",
																		"kind": "string",
																		"nativeSrc": "24022:34:12",
																		"nodeType": "YulLiteral",
																		"src": "24022:34:12",
																		"type": "",
																		"value": "Dividend Period is ongoing, all "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23999:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23999:6:12"
																},
																"nativeSrc": "23999:58:12",
																"nodeType": "YulFunctionCall",
																"src": "23999:58:12"
															},
															"nativeSrc": "23999:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "23999:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24078:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "24078:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24086:2:12",
																				"nodeType": "YulLiteral",
																				"src": "24086:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24074:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24074:3:12"
																		},
																		"nativeSrc": "24074:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24074:15:12"
																	},
																	{
																		"hexValue": "7472616e73666572732077696c6c20726573756d652061667465722064697669",
																		"kind": "string",
																		"nativeSrc": "24091:34:12",
																		"nodeType": "YulLiteral",
																		"src": "24091:34:12",
																		"type": "",
																		"value": "transfers will resume after divi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24067:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24067:6:12"
																},
																"nativeSrc": "24067:59:12",
																"nodeType": "YulFunctionCall",
																"src": "24067:59:12"
															},
															"nativeSrc": "24067:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "24067:59:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24147:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "24147:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24155:2:12",
																				"nodeType": "YulLiteral",
																				"src": "24155:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24143:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24143:3:12"
																		},
																		"nativeSrc": "24143:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24143:15:12"
																	},
																	{
																		"hexValue": "64656e6420706572696f642e",
																		"kind": "string",
																		"nativeSrc": "24160:14:12",
																		"nodeType": "YulLiteral",
																		"src": "24160:14:12",
																		"type": "",
																		"value": "dend period."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24136:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24136:6:12"
																},
																"nativeSrc": "24136:39:12",
																"nodeType": "YulFunctionCall",
																"src": "24136:39:12"
															},
															"nativeSrc": "24136:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "24136:39:12"
														}
													]
												},
												"name": "store_literal_in_memory_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb",
												"nativeSrc": "23882:300:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23980:6:12",
														"nodeType": "YulTypedName",
														"src": "23980:6:12",
														"type": ""
													}
												],
												"src": "23882:300:12"
											},
											{
												"body": {
													"nativeSrc": "24334:220:12",
													"nodeType": "YulBlock",
													"src": "24334:220:12",
													"statements": [
														{
															"nativeSrc": "24344:74:12",
															"nodeType": "YulAssignment",
															"src": "24344:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24410:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24410:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24415:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24415:2:12",
																		"type": "",
																		"value": "76"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24351:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "24351:58:12"
																},
																"nativeSrc": "24351:67:12",
																"nodeType": "YulFunctionCall",
																"src": "24351:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24344:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24344:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24516:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24516:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb",
																	"nativeSrc": "24427:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "24427:88:12"
																},
																"nativeSrc": "24427:93:12",
																"nodeType": "YulFunctionCall",
																"src": "24427:93:12"
															},
															"nativeSrc": "24427:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "24427:93:12"
														},
														{
															"nativeSrc": "24529:19:12",
															"nodeType": "YulAssignment",
															"src": "24529:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24540:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24540:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24545:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24545:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24536:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24536:3:12"
																},
																"nativeSrc": "24536:12:12",
																"nodeType": "YulFunctionCall",
																"src": "24536:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24529:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24529:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24188:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24322:3:12",
														"nodeType": "YulTypedName",
														"src": "24322:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24330:3:12",
														"nodeType": "YulTypedName",
														"src": "24330:3:12",
														"type": ""
													}
												],
												"src": "24188:366:12"
											},
											{
												"body": {
													"nativeSrc": "24731:248:12",
													"nodeType": "YulBlock",
													"src": "24731:248:12",
													"statements": [
														{
															"nativeSrc": "24741:26:12",
															"nodeType": "YulAssignment",
															"src": "24741:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24753:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "24753:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24764:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24764:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24749:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24749:3:12"
																},
																"nativeSrc": "24749:18:12",
																"nodeType": "YulFunctionCall",
																"src": "24749:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24741:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24741:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24788:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24788:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24799:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24799:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24784:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24784:3:12"
																		},
																		"nativeSrc": "24784:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24784:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24807:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "24807:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24813:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24813:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24803:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24803:3:12"
																		},
																		"nativeSrc": "24803:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24803:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24777:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24777:6:12"
																},
																"nativeSrc": "24777:47:12",
																"nodeType": "YulFunctionCall",
																"src": "24777:47:12"
															},
															"nativeSrc": "24777:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "24777:47:12"
														},
														{
															"nativeSrc": "24833:139:12",
															"nodeType": "YulAssignment",
															"src": "24833:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24967:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24967:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24841:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "24841:124:12"
																},
																"nativeSrc": "24841:131:12",
																"nodeType": "YulFunctionCall",
																"src": "24841:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24833:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24833:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24560:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24711:9:12",
														"nodeType": "YulTypedName",
														"src": "24711:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24726:4:12",
														"nodeType": "YulTypedName",
														"src": "24726:4:12",
														"type": ""
													}
												],
												"src": "24560:419:12"
											},
											{
												"body": {
													"nativeSrc": "25091:63:12",
													"nodeType": "YulBlock",
													"src": "25091:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25113:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "25113:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25121:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25121:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25109:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25109:3:12"
																		},
																		"nativeSrc": "25109:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25109:14:12"
																	},
																	{
																		"hexValue": "53656e646572206973206e6f74204b59436564",
																		"kind": "string",
																		"nativeSrc": "25125:21:12",
																		"nodeType": "YulLiteral",
																		"src": "25125:21:12",
																		"type": "",
																		"value": "Sender is not KYCed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25102:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25102:6:12"
																},
																"nativeSrc": "25102:45:12",
																"nodeType": "YulFunctionCall",
																"src": "25102:45:12"
															},
															"nativeSrc": "25102:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "25102:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e",
												"nativeSrc": "24985:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25083:6:12",
														"nodeType": "YulTypedName",
														"src": "25083:6:12",
														"type": ""
													}
												],
												"src": "24985:169:12"
											},
											{
												"body": {
													"nativeSrc": "25306:220:12",
													"nodeType": "YulBlock",
													"src": "25306:220:12",
													"statements": [
														{
															"nativeSrc": "25316:74:12",
															"nodeType": "YulAssignment",
															"src": "25316:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25382:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25382:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25387:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25387:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25323:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "25323:58:12"
																},
																"nativeSrc": "25323:67:12",
																"nodeType": "YulFunctionCall",
																"src": "25323:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25316:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25316:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25488:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25488:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e",
																	"nativeSrc": "25399:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "25399:88:12"
																},
																"nativeSrc": "25399:93:12",
																"nodeType": "YulFunctionCall",
																"src": "25399:93:12"
															},
															"nativeSrc": "25399:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "25399:93:12"
														},
														{
															"nativeSrc": "25501:19:12",
															"nodeType": "YulAssignment",
															"src": "25501:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25512:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25512:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25517:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25517:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25508:3:12"
																},
																"nativeSrc": "25508:12:12",
																"nodeType": "YulFunctionCall",
																"src": "25508:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25501:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25501:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25160:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25294:3:12",
														"nodeType": "YulTypedName",
														"src": "25294:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25302:3:12",
														"nodeType": "YulTypedName",
														"src": "25302:3:12",
														"type": ""
													}
												],
												"src": "25160:366:12"
											},
											{
												"body": {
													"nativeSrc": "25703:248:12",
													"nodeType": "YulBlock",
													"src": "25703:248:12",
													"statements": [
														{
															"nativeSrc": "25713:26:12",
															"nodeType": "YulAssignment",
															"src": "25713:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25725:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "25725:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25736:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25736:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25721:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25721:3:12"
																},
																"nativeSrc": "25721:18:12",
																"nodeType": "YulFunctionCall",
																"src": "25721:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25713:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25713:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25760:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25760:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25771:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25771:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25756:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25756:3:12"
																		},
																		"nativeSrc": "25756:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25756:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25779:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "25779:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25785:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25785:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25775:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25775:3:12"
																		},
																		"nativeSrc": "25775:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25775:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25749:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25749:6:12"
																},
																"nativeSrc": "25749:47:12",
																"nodeType": "YulFunctionCall",
																"src": "25749:47:12"
															},
															"nativeSrc": "25749:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "25749:47:12"
														},
														{
															"nativeSrc": "25805:139:12",
															"nodeType": "YulAssignment",
															"src": "25805:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25939:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25939:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25813:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "25813:124:12"
																},
																"nativeSrc": "25813:131:12",
																"nodeType": "YulFunctionCall",
																"src": "25813:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25805:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25805:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25532:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25683:9:12",
														"nodeType": "YulTypedName",
														"src": "25683:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25698:4:12",
														"nodeType": "YulTypedName",
														"src": "25698:4:12",
														"type": ""
													}
												],
												"src": "25532:419:12"
											},
											{
												"body": {
													"nativeSrc": "26063:66:12",
													"nodeType": "YulBlock",
													"src": "26063:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26085:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "26085:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26093:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26093:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26081:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26081:3:12"
																		},
																		"nativeSrc": "26081:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26081:14:12"
																	},
																	{
																		"hexValue": "526563697069656e74206973206e6f74204b59436564",
																		"kind": "string",
																		"nativeSrc": "26097:24:12",
																		"nodeType": "YulLiteral",
																		"src": "26097:24:12",
																		"type": "",
																		"value": "Recipient is not KYCed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26074:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26074:6:12"
																},
																"nativeSrc": "26074:48:12",
																"nodeType": "YulFunctionCall",
																"src": "26074:48:12"
															},
															"nativeSrc": "26074:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "26074:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387",
												"nativeSrc": "25957:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26055:6:12",
														"nodeType": "YulTypedName",
														"src": "26055:6:12",
														"type": ""
													}
												],
												"src": "25957:172:12"
											},
											{
												"body": {
													"nativeSrc": "26281:220:12",
													"nodeType": "YulBlock",
													"src": "26281:220:12",
													"statements": [
														{
															"nativeSrc": "26291:74:12",
															"nodeType": "YulAssignment",
															"src": "26291:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26357:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26357:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26362:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26362:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26298:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "26298:58:12"
																},
																"nativeSrc": "26298:67:12",
																"nodeType": "YulFunctionCall",
																"src": "26298:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26291:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26291:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26463:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26463:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387",
																	"nativeSrc": "26374:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "26374:88:12"
																},
																"nativeSrc": "26374:93:12",
																"nodeType": "YulFunctionCall",
																"src": "26374:93:12"
															},
															"nativeSrc": "26374:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "26374:93:12"
														},
														{
															"nativeSrc": "26476:19:12",
															"nodeType": "YulAssignment",
															"src": "26476:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26487:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26487:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26492:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26492:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26483:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26483:3:12"
																},
																"nativeSrc": "26483:12:12",
																"nodeType": "YulFunctionCall",
																"src": "26483:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26476:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26476:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26135:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26269:3:12",
														"nodeType": "YulTypedName",
														"src": "26269:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26277:3:12",
														"nodeType": "YulTypedName",
														"src": "26277:3:12",
														"type": ""
													}
												],
												"src": "26135:366:12"
											},
											{
												"body": {
													"nativeSrc": "26678:248:12",
													"nodeType": "YulBlock",
													"src": "26678:248:12",
													"statements": [
														{
															"nativeSrc": "26688:26:12",
															"nodeType": "YulAssignment",
															"src": "26688:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26700:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26700:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26711:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26711:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26696:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26696:3:12"
																},
																"nativeSrc": "26696:18:12",
																"nodeType": "YulFunctionCall",
																"src": "26696:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26688:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26688:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26735:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26735:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26746:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26746:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26731:3:12"
																		},
																		"nativeSrc": "26731:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26731:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26754:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "26754:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26760:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26760:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26750:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26750:3:12"
																		},
																		"nativeSrc": "26750:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26750:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26724:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26724:6:12"
																},
																"nativeSrc": "26724:47:12",
																"nodeType": "YulFunctionCall",
																"src": "26724:47:12"
															},
															"nativeSrc": "26724:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "26724:47:12"
														},
														{
															"nativeSrc": "26780:139:12",
															"nodeType": "YulAssignment",
															"src": "26780:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26914:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "26914:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26788:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "26788:124:12"
																},
																"nativeSrc": "26788:131:12",
																"nodeType": "YulFunctionCall",
																"src": "26788:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26780:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26780:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26507:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26658:9:12",
														"nodeType": "YulTypedName",
														"src": "26658:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26673:4:12",
														"nodeType": "YulTypedName",
														"src": "26673:4:12",
														"type": ""
													}
												],
												"src": "26507:419:12"
											},
											{
												"body": {
													"nativeSrc": "27058:206:12",
													"nodeType": "YulBlock",
													"src": "27058:206:12",
													"statements": [
														{
															"nativeSrc": "27068:26:12",
															"nodeType": "YulAssignment",
															"src": "27068:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27080:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "27080:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27091:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27091:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27076:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27076:3:12"
																},
																"nativeSrc": "27076:18:12",
																"nodeType": "YulFunctionCall",
																"src": "27076:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27068:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27068:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27148:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27148:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27161:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27161:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27172:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27172:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27157:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27157:3:12"
																		},
																		"nativeSrc": "27157:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27157:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27104:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "27104:43:12"
																},
																"nativeSrc": "27104:71:12",
																"nodeType": "YulFunctionCall",
																"src": "27104:71:12"
															},
															"nativeSrc": "27104:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "27104:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27229:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27229:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27242:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27242:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27253:2:12",
																				"nodeType": "YulLiteral",
																				"src": "27253:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27238:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27238:3:12"
																		},
																		"nativeSrc": "27238:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27238:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "27185:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "27185:43:12"
																},
																"nativeSrc": "27185:72:12",
																"nodeType": "YulFunctionCall",
																"src": "27185:72:12"
															},
															"nativeSrc": "27185:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "27185:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "26932:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27022:9:12",
														"nodeType": "YulTypedName",
														"src": "27022:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27034:6:12",
														"nodeType": "YulTypedName",
														"src": "27034:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27042:6:12",
														"nodeType": "YulTypedName",
														"src": "27042:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27053:4:12",
														"nodeType": "YulTypedName",
														"src": "27053:4:12",
														"type": ""
													}
												],
												"src": "26932:332:12"
											},
											{
												"body": {
													"nativeSrc": "27396:206:12",
													"nodeType": "YulBlock",
													"src": "27396:206:12",
													"statements": [
														{
															"nativeSrc": "27406:26:12",
															"nodeType": "YulAssignment",
															"src": "27406:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27418:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "27418:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27429:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27429:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27414:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27414:3:12"
																},
																"nativeSrc": "27414:18:12",
																"nodeType": "YulFunctionCall",
																"src": "27414:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27406:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27406:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27486:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27486:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27499:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27499:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27510:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27510:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27495:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27495:3:12"
																		},
																		"nativeSrc": "27495:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27495:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27442:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "27442:43:12"
																},
																"nativeSrc": "27442:71:12",
																"nodeType": "YulFunctionCall",
																"src": "27442:71:12"
															},
															"nativeSrc": "27442:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "27442:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27567:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27567:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27580:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27580:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27591:2:12",
																				"nodeType": "YulLiteral",
																				"src": "27591:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27576:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27576:3:12"
																		},
																		"nativeSrc": "27576:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27576:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27523:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "27523:43:12"
																},
																"nativeSrc": "27523:72:12",
																"nodeType": "YulFunctionCall",
																"src": "27523:72:12"
															},
															"nativeSrc": "27523:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "27523:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "27270:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27360:9:12",
														"nodeType": "YulTypedName",
														"src": "27360:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27372:6:12",
														"nodeType": "YulTypedName",
														"src": "27372:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27380:6:12",
														"nodeType": "YulTypedName",
														"src": "27380:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27391:4:12",
														"nodeType": "YulTypedName",
														"src": "27391:4:12",
														"type": ""
													}
												],
												"src": "27270:332:12"
											},
											{
												"body": {
													"nativeSrc": "27762:288:12",
													"nodeType": "YulBlock",
													"src": "27762:288:12",
													"statements": [
														{
															"nativeSrc": "27772:26:12",
															"nodeType": "YulAssignment",
															"src": "27772:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27784:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "27784:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27795:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27795:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27780:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27780:3:12"
																},
																"nativeSrc": "27780:18:12",
																"nodeType": "YulFunctionCall",
																"src": "27780:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27772:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27772:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27852:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27852:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27865:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27865:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27876:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27876:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27861:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27861:3:12"
																		},
																		"nativeSrc": "27861:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27861:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27808:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "27808:43:12"
																},
																"nativeSrc": "27808:71:12",
																"nodeType": "YulFunctionCall",
																"src": "27808:71:12"
															},
															"nativeSrc": "27808:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "27808:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27933:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27933:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27946:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27946:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27957:2:12",
																				"nodeType": "YulLiteral",
																				"src": "27957:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27942:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27942:3:12"
																		},
																		"nativeSrc": "27942:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27942:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27889:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "27889:43:12"
																},
																"nativeSrc": "27889:72:12",
																"nodeType": "YulFunctionCall",
																"src": "27889:72:12"
															},
															"nativeSrc": "27889:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "27889:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28015:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28015:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28028:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28028:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28039:2:12",
																				"nodeType": "YulLiteral",
																				"src": "28039:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28024:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28024:3:12"
																		},
																		"nativeSrc": "28024:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28024:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27971:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "27971:43:12"
																},
																"nativeSrc": "27971:72:12",
																"nodeType": "YulFunctionCall",
																"src": "27971:72:12"
															},
															"nativeSrc": "27971:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "27971:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "27608:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27718:9:12",
														"nodeType": "YulTypedName",
														"src": "27718:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27730:6:12",
														"nodeType": "YulTypedName",
														"src": "27730:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27738:6:12",
														"nodeType": "YulTypedName",
														"src": "27738:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27746:6:12",
														"nodeType": "YulTypedName",
														"src": "27746:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27757:4:12",
														"nodeType": "YulTypedName",
														"src": "27757:4:12",
														"type": ""
													}
												],
												"src": "27608:442:12"
											},
											{
												"body": {
													"nativeSrc": "28100:147:12",
													"nodeType": "YulBlock",
													"src": "28100:147:12",
													"statements": [
														{
															"nativeSrc": "28110:25:12",
															"nodeType": "YulAssignment",
															"src": "28110:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28133:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "28133:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28115:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "28115:17:12"
																},
																"nativeSrc": "28115:20:12",
																"nodeType": "YulFunctionCall",
																"src": "28115:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "28110:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "28110:1:12"
																}
															]
														},
														{
															"nativeSrc": "28144:25:12",
															"nodeType": "YulAssignment",
															"src": "28144:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "28167:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "28167:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28149:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "28149:17:12"
																},
																"nativeSrc": "28149:20:12",
																"nodeType": "YulFunctionCall",
																"src": "28149:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "28144:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "28144:1:12"
																}
															]
														},
														{
															"nativeSrc": "28178:16:12",
															"nodeType": "YulAssignment",
															"src": "28178:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28189:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "28189:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "28192:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "28192:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28185:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28185:3:12"
																},
																"nativeSrc": "28185:9:12",
																"nodeType": "YulFunctionCall",
																"src": "28185:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "28178:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28178:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28218:22:12",
																"nodeType": "YulBlock",
																"src": "28218:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "28220:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "28220:16:12"
																			},
																			"nativeSrc": "28220:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "28220:18:12"
																		},
																		"nativeSrc": "28220:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "28220:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28210:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "28210:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "28213:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28213:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28207:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "28207:2:12"
																},
																"nativeSrc": "28207:10:12",
																"nodeType": "YulFunctionCall",
																"src": "28207:10:12"
															},
															"nativeSrc": "28204:36:12",
															"nodeType": "YulIf",
															"src": "28204:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "28056:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "28087:1:12",
														"nodeType": "YulTypedName",
														"src": "28087:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "28090:1:12",
														"nodeType": "YulTypedName",
														"src": "28090:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "28096:3:12",
														"nodeType": "YulTypedName",
														"src": "28096:3:12",
														"type": ""
													}
												],
												"src": "28056:191:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf(memPtr) {\n\n        mstore(add(memPtr, 0), \"buyer is a zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027(memPtr) {\n\n        mstore(add(memPtr, 0), \"weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the Owner can call this fun\")\n\n        mstore(add(memPtr, 32), \"ction\")\n\n    }\n\n    function abi_encode_t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3(memPtr) {\n\n        mstore(add(memPtr, 0), \"User is not KYCed\")\n\n    }\n\n    function abi_encode_t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"User owns tokens, cannot remove \")\n\n        mstore(add(memPtr, 32), \"from KYC list\")\n\n    }\n\n    function abi_encode_t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52(memPtr) {\n\n        mstore(add(memPtr, 0), \"User not found in KYC list\")\n\n    }\n\n    function abi_encode_t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid new owner address.\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e(memPtr) {\n\n        mstore(add(memPtr, 0), \"User is already KYCed\")\n\n    }\n\n    function abi_encode_t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dividend Period is ongoing, all \")\n\n        mstore(add(memPtr, 32), \"transfers will resume after divi\")\n\n        mstore(add(memPtr, 64), \"dend period.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 76)\n        store_literal_in_memory_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender is not KYCed\")\n\n    }\n\n    function abi_encode_t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387(memPtr) {\n\n        mstore(add(memPtr, 0), \"Recipient is not KYCed\")\n\n    }\n\n    function abi_encode_t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1182": [
									{
										"length": 32,
										"start": 3169
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610207575f3560e01c806391d1485411610117578063d5dd4c021161009f578063ed831fa41161006e578063ed831fa4146107b6578063f2f2a8ef146107de578063f2fde38b14610808578063f9c8dec314610830578063fb4900fc1461085a5761020e565b8063d5dd4c02146106ec578063d8326a1814610714578063d9d616551461073e578063dd62ed3e1461077a5761020e565b8063a9059cbb116100e6578063a9059cbb146105fa578063a9eb3f9914610636578063b4c7f1ed1461065e578063d53913931461069a578063d547741f146106c45761020e565b806391d148541461054257806395d89b411461057e578063983b2d56146105a8578063a217fddf146105d05761020e565b80632c4e722e1161019a57806336568abe1161016957806336568abe14610460578063565a2e2c14610488578063629044d2146104b257806370a08231146104dc5780638da5cb5b146105185761020e565b80632c4e722e146103ba5780632f2ff15d146103e4578063313ce5671461040c578063355274ea146104365761020e565b806318160ddd116101d657806318160ddd146102dc57806323b872dd14610306578063248a9ca314610342578063263719c11461037e5761020e565b806301ffc9a71461021257806305ab421d1461024e57806306fdde0314610276578063095ea7b3146102a05761020e565b3661020e57005b5f80fd5b34801561021d575f80fd5b5061023860048036038101906102339190612926565b610882565b604051610245919061296b565b60405180910390f35b348015610259575f80fd5b50610274600480360381019061026f9190612a11565b6108fb565b005b348015610281575f80fd5b5061028a610a06565b6040516102979190612abf565b60405180910390f35b3480156102ab575f80fd5b506102c660048036038101906102c19190612a11565b610a96565b6040516102d3919061296b565b60405180910390f35b3480156102e7575f80fd5b506102f0610ab8565b6040516102fd9190612aee565b60405180910390f35b348015610311575f80fd5b5061032c60048036038101906103279190612b07565b610ac1565b604051610339919061296b565b60405180910390f35b34801561034d575f80fd5b5061036860048036038101906103639190612b8a565b610aef565b6040516103759190612bc4565b60405180910390f35b348015610389575f80fd5b506103a4600480360381019061039f9190612a11565b610b0c565b6040516103b1919061296b565b60405180910390f35b3480156103c5575f80fd5b506103ce610c1e565b6040516103db9190612aee565b60405180910390f35b3480156103ef575f80fd5b5061040a60048036038101906104059190612bdd565b610c27565b005b348015610417575f80fd5b50610420610c49565b60405161042d9190612c36565b60405180910390f35b348015610441575f80fd5b5061044a610c5e565b6040516104579190612aee565b60405180910390f35b34801561046b575f80fd5b5061048660048036038101906104819190612bdd565b610c85565b005b348015610493575f80fd5b5061049c610d00565b6040516104a99190612c5e565b60405180910390f35b3480156104bd575f80fd5b506104c6610d28565b6040516104d39190612aee565b60405180910390f35b3480156104e7575f80fd5b5061050260048036038101906104fd9190612c77565b610d34565b60405161050f9190612aee565b60405180910390f35b348015610523575f80fd5b5061052c610d79565b6040516105399190612cc2565b60405180910390f35b34801561054d575f80fd5b5061056860048036038101906105639190612bdd565b610da1565b604051610575919061296b565b60405180910390f35b348015610589575f80fd5b50610592610e05565b60405161059f9190612abf565b60405180910390f35b3480156105b3575f80fd5b506105ce60048036038101906105c99190612c77565b610e95565b005b3480156105db575f80fd5b506105e4610f62565b6040516105f19190612bc4565b60405180910390f35b348015610605575f80fd5b50610620600480360381019061061b9190612a11565b610f68565b60405161062d919061296b565b60405180910390f35b348015610641575f80fd5b5061065c60048036038101906106579190612c77565b610f94565b005b348015610669575f80fd5b50610684600480360381019061067f9190612c77565b611017565b604051610691919061296b565b60405180910390f35b3480156106a5575f80fd5b506106ae611069565b6040516106bb9190612bc4565b60405180910390f35b3480156106cf575f80fd5b506106ea60048036038101906106e59190612bdd565b61108d565b005b3480156106f7575f80fd5b50610712600480360381019061070d9190612d05565b6110af565b005b34801561071f575f80fd5b50610728611107565b604051610735919061296b565b60405180910390f35b348015610749575f80fd5b50610764600480360381019061075f9190612c77565b61111d565b604051610771919061296b565b60405180910390f35b348015610785575f80fd5b506107a0600480360381019061079b9190612d30565b61116f565b6040516107ad9190612aee565b60405180910390f35b3480156107c1575f80fd5b506107dc60048036038101906107d79190612c77565b6111f1565b005b3480156107e9575f80fd5b506107f261177c565b6040516107ff9190612e25565b60405180910390f35b348015610813575f80fd5b5061082e60048036038101906108299190612c77565b611807565b005b34801561083b575f80fd5b50610844611947565b6040516108519190612bc4565b60405180910390f35b348015610865575f80fd5b50610880600480360381019061087b9190612c77565b61196b565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108f457506108f382611c40565b5b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661092581611ca9565b61092d611cbd565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361099b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099290612e8f565b60405180910390fd5b5f82116109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d490612ef7565b60405180910390fd5b5f600854836109ec9190612f42565b90506109f88482611d0c565b50610a01611d8b565b505050565b606060038054610a1590612fb0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4190612fb0565b8015610a8c5780601f10610a6357610100808354040283529160200191610a8c565b820191905f5260205f20905b815481529060010190602001808311610a6f57829003601f168201915b5050505050905090565b5f80610aa0611d95565b9050610aad818585611d9c565b600191505092915050565b5f600254905090565b5f610acc8484611dae565b5f610ad8858585611f14565b9050610ae48585611f42565b809150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b5f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610b3781611ca9565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ba5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9c90613050565b60405180910390fd5b610baf8484611ff9565b5f610bb985610d34565b03610c13575f600e5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b600191505092915050565b5f600854905090565b610c3082610aef565b610c3981611ca9565b610c438383612078565b50505050565b5f60075f9054906101000a900460ff16905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b610c8d611d95565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cf1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cfb8282612162565b505050565b5f600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f600b80549050905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610e1490612fb0565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4090612fb0565b8015610e8b5780601f10610e6257610100808354040283529160200191610e8b565b820191905f5260205f20905b815481529060010190602001808311610e6e57829003601f168201915b5050505050905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1b906130de565b60405180910390fd5b610f2c611cbd565b610f567f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682612078565b50610f5f611d8b565b50565b5f801b81565b5f610f733384611dae565b5f610f7e848461224c565b9050610f8a3385611f42565b8091505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610fbe81611ca9565b6001600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61109682610aef565b61109f81611ca9565b6110a98383612162565b50505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66110d981611ca9565b6110e1611cbd565b81600a60146101000a81548160ff021916908315150217905550611103611d8b565b5050565b5f600a60149054906101000a900460ff16905090565b5f600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7fdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db761121b81611ca9565b611223611cbd565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166112ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a390613146565b60405180910390fd5b600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132d906131d4565b60405180910390fd5b5f600b80549050600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561142b578273ffffffffffffffffffffffffffffffffffffffff16600b600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054815481106113e9576113e86131f2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490505b8061146b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146290613269565b60405180910390fd5b5f6001600b8054905061147e9190613287565b905080600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541461165157600b81815481106114d8576114d76131f2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b600d5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481548110611551576115506131f2565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600d5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600d5f600b84815481106115eb576115ea6131f2565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b600b805480611663576116626132ba565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555f600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f600d5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508373ffffffffffffffffffffffffffffffffffffffff167f8ce60ec723c7fcc3c3f6b1ffaa7b814b03df348c312bb6e4192941716256566460405160405180910390a25050611778611d8b565b5050565b6060600b8054806020026020016040519081016040528092919081815260200182805480156117fd57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116117b4575b5050505050905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188d906130de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fb90613331565b60405180910390fd5b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7fdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db781565b7fdb11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db761199581611ca9565b61199d611cbd565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0290613399565b60405180910390fd5b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8c90613401565b60405180910390fd5b6001600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600b82908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b80549050611b5c9190613287565b600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fe82acf77c2686315e6aeaa43ccec710936b819cb5d01a31fadb2bf2a928c934260405160405180910390a2611c3c611d8b565b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611cba81611cb5611d95565b61226e565b50565b600260065403611d02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf990613469565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d7c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d739190612c5e565b60405180910390fd5b611d875f83836122bf565b5050565b6001600681905550565b5f33905090565b611da98383836001612362565b505050565b600a60149054906101000a900460ff1615611dfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df59061351d565b60405180910390fd5b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7e90613585565b60405180910390fd5b600c5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611f10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f07906135ed565b60405180910390fd5b5050565b5f80611f1e611d95565b9050611f2b858285612531565b611f368585856125c4565b60019150509392505050565b6001600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f611fa183610d34565b11600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612069575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016120609190612c5e565b60405180910390fd5b612074825f836122bf565b5050565b5f6120838383610da1565b61215857600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506120f5611d95565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061215c565b5f90505b92915050565b5f61216d8383610da1565b15612242575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506121df611d95565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050612246565b5f90505b92915050565b5f80612256611d95565b90506122638185856125c4565b600191505092915050565b6122788282610da1565b6122bb5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016122b292919061360b565b60405180910390fd5b5050565b6122ca8383836126b4565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361235d575f612306610c5e565b90505f612311610ab8565b90508181111561235a5780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401612351929190613632565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036123d2575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016123c99190612c5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612442575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016124399190612c5e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561252b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516125229190612aee565b60405180910390a35b50505050565b5f61253c848461116f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156125be57818110156125af578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016125a693929190613659565b60405180910390fd5b6125bd84848484035f612362565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612634575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161262b9190612c5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036126a4575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161269b9190612c5e565b60405180910390fd5b6126af8383836122bf565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612704578060025f8282546126f8919061368e565b925050819055506127d2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561278d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161278493929190613659565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612819578060025f8282540392505081905550612863565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128c09190612aee565b60405180910390a3505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612905816128d1565b811461290f575f80fd5b50565b5f81359050612920816128fc565b92915050565b5f6020828403121561293b5761293a6128cd565b5b5f61294884828501612912565b91505092915050565b5f8115159050919050565b61296581612951565b82525050565b5f60208201905061297e5f83018461295c565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6129ad82612984565b9050919050565b6129bd816129a3565b81146129c7575f80fd5b50565b5f813590506129d8816129b4565b92915050565b5f819050919050565b6129f0816129de565b81146129fa575f80fd5b50565b5f81359050612a0b816129e7565b92915050565b5f8060408385031215612a2757612a266128cd565b5b5f612a34858286016129ca565b9250506020612a45858286016129fd565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612a9182612a4f565b612a9b8185612a59565b9350612aab818560208601612a69565b612ab481612a77565b840191505092915050565b5f6020820190508181035f830152612ad78184612a87565b905092915050565b612ae8816129de565b82525050565b5f602082019050612b015f830184612adf565b92915050565b5f805f60608486031215612b1e57612b1d6128cd565b5b5f612b2b868287016129ca565b9350506020612b3c868287016129ca565b9250506040612b4d868287016129fd565b9150509250925092565b5f819050919050565b612b6981612b57565b8114612b73575f80fd5b50565b5f81359050612b8481612b60565b92915050565b5f60208284031215612b9f57612b9e6128cd565b5b5f612bac84828501612b76565b91505092915050565b612bbe81612b57565b82525050565b5f602082019050612bd75f830184612bb5565b92915050565b5f8060408385031215612bf357612bf26128cd565b5b5f612c0085828601612b76565b9250506020612c11858286016129ca565b9150509250929050565b5f60ff82169050919050565b612c3081612c1b565b82525050565b5f602082019050612c495f830184612c27565b92915050565b612c58816129a3565b82525050565b5f602082019050612c715f830184612c4f565b92915050565b5f60208284031215612c8c57612c8b6128cd565b5b5f612c99848285016129ca565b91505092915050565b5f612cac82612984565b9050919050565b612cbc81612ca2565b82525050565b5f602082019050612cd55f830184612cb3565b92915050565b612ce481612951565b8114612cee575f80fd5b50565b5f81359050612cff81612cdb565b92915050565b5f60208284031215612d1a57612d196128cd565b5b5f612d2784828501612cf1565b91505092915050565b5f8060408385031215612d4657612d456128cd565b5b5f612d53858286016129ca565b9250506020612d64858286016129ca565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612da0816129a3565b82525050565b5f612db18383612d97565b60208301905092915050565b5f602082019050919050565b5f612dd382612d6e565b612ddd8185612d78565b9350612de883612d88565b805f5b83811015612e18578151612dff8882612da6565b9750612e0a83612dbd565b925050600181019050612deb565b5085935050505092915050565b5f6020820190508181035f830152612e3d8184612dc9565b905092915050565b7f62757965722069732061207a65726f20616464726573730000000000000000005f82015250565b5f612e79601783612a59565b9150612e8482612e45565b602082019050919050565b5f6020820190508181035f830152612ea681612e6d565b9050919050565b7f776569416d6f756e7420697320300000000000000000000000000000000000005f82015250565b5f612ee1600e83612a59565b9150612eec82612ead565b602082019050919050565b5f6020820190508181035f830152612f0e81612ed5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612f4c826129de565b9150612f57836129de565b9250828202612f65816129de565b91508282048414831517612f7c57612f7b612f15565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612fc757607f821691505b602082108103612fda57612fd9612f83565b5b50919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61303a602183612a59565b915061304582612fe0565b604082019050919050565b5f6020820190508181035f8301526130678161302e565b9050919050565b7f4f6e6c7920746865204f776e65722063616e2063616c6c20746869732066756e5f8201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b5f6130c8602583612a59565b91506130d38261306e565b604082019050919050565b5f6020820190508181035f8301526130f5816130bc565b9050919050565b7f55736572206973206e6f74204b594365640000000000000000000000000000005f82015250565b5f613130601183612a59565b915061313b826130fc565b602082019050919050565b5f6020820190508181035f83015261315d81613124565b9050919050565b7f55736572206f776e7320746f6b656e732c2063616e6e6f742072656d6f7665205f8201527f66726f6d204b5943206c69737400000000000000000000000000000000000000602082015250565b5f6131be602d83612a59565b91506131c982613164565b604082019050919050565b5f6020820190508181035f8301526131eb816131b2565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f55736572206e6f7420666f756e6420696e204b5943206c6973740000000000005f82015250565b5f613253601a83612a59565b915061325e8261321f565b602082019050919050565b5f6020820190508181035f83015261328081613247565b9050919050565b5f613291826129de565b915061329c836129de565b92508282039050818111156132b4576132b3612f15565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f496e76616c6964206e6577206f776e657220616464726573732e0000000000005f82015250565b5f61331b601a83612a59565b9150613326826132e7565b602082019050919050565b5f6020820190508181035f8301526133488161330f565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f613383600f83612a59565b915061338e8261334f565b602082019050919050565b5f6020820190508181035f8301526133b081613377565b9050919050565b7f5573657220697320616c7265616479204b5943656400000000000000000000005f82015250565b5f6133eb601583612a59565b91506133f6826133b7565b602082019050919050565b5f6020820190508181035f830152613418816133df565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f613453601f83612a59565b915061345e8261341f565b602082019050919050565b5f6020820190508181035f83015261348081613447565b9050919050565b7f4469766964656e6420506572696f64206973206f6e676f696e672c20616c6c205f8201527f7472616e73666572732077696c6c20726573756d65206166746572206469766960208201527f64656e6420706572696f642e0000000000000000000000000000000000000000604082015250565b5f613507604c83612a59565b915061351282613487565b606082019050919050565b5f6020820190508181035f830152613534816134fb565b9050919050565b7f53656e646572206973206e6f74204b59436564000000000000000000000000005f82015250565b5f61356f601383612a59565b915061357a8261353b565b602082019050919050565b5f6020820190508181035f83015261359c81613563565b9050919050565b7f526563697069656e74206973206e6f74204b59436564000000000000000000005f82015250565b5f6135d7601683612a59565b91506135e2826135a3565b602082019050919050565b5f6020820190508181035f830152613604816135cb565b9050919050565b5f60408201905061361e5f830185612c4f565b61362b6020830184612bb5565b9392505050565b5f6040820190506136455f830185612adf565b6136526020830184612adf565b9392505050565b5f60608201905061366c5f830186612c4f565b6136796020830185612adf565b6136866040830184612adf565b949350505050565b5f613698826129de565b91506136a3836129de565b92508282019050808211156136bb576136ba612f15565b5b9291505056fea2646970667358221220f62b535c09414dc1ba0c918005917eb08c19d29319220f7ce4414627587dd4a364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x207 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0xD5DD4C02 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xED831FA4 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xED831FA4 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xF2F2A8EF EQ PUSH2 0x7DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0xF9C8DEC3 EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0xFB4900FC EQ PUSH2 0x85A JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0xD5DD4C02 EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xD8326A18 EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xD9D61655 EQ PUSH2 0x73E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x77A JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xA9EB3F99 EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0xB4C7F1ED EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6C4 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5D0 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x565A2E2C EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x629044D2 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x518 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x436 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x263719C1 EQ PUSH2 0x37E JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x5AB421D EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A0 JUMPI PUSH2 0x20E JUMP JUMPDEST CALLDATASIZE PUSH2 0x20E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x2926 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2B07 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2B8A JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2C36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49C PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C6 PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52C PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x2CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x592 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0xE95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E4 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x605 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x620 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x641 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0xF94 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x684 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AE PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH2 0x10AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x728 PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x764 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x785 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79B SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x11F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F2 PUSH2 0x177C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x2E25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x813 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x82E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x1807 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x844 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x880 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x2C77 JUMP JUMPDEST PUSH2 0x196B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8F4 JUMPI POP PUSH2 0x8F3 DUP3 PUSH2 0x1C40 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x925 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x92D PUSH2 0x1CBD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x992 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP1 PUSH2 0x2EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x2F42 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F8 DUP5 DUP3 PUSH2 0x1D0C JUMP JUMPDEST POP PUSH2 0xA01 PUSH2 0x1D8B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA15 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA41 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA8C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA63 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAA0 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP PUSH2 0xAAD DUP2 DUP6 DUP6 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xACC DUP5 DUP5 PUSH2 0x1DAE JUMP JUMPDEST PUSH0 PUSH2 0xAD8 DUP6 DUP6 DUP6 PUSH2 0x1F14 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE4 DUP6 DUP6 PUSH2 0x1F42 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xB37 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9C SWAP1 PUSH2 0x3050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAF DUP5 DUP5 PUSH2 0x1FF9 JUMP JUMPDEST PUSH0 PUSH2 0xBB9 DUP6 PUSH2 0xD34 JUMP JUMPDEST SUB PUSH2 0xC13 JUMPI PUSH0 PUSH1 0xE PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC30 DUP3 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0xC39 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0xC43 DUP4 DUP4 PUSH2 0x2078 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC8D PUSH2 0x1D95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFB DUP3 DUP3 PUSH2 0x2162 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE14 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE40 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE8B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE62 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE8B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE6E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP1 PUSH2 0x30DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF2C PUSH2 0x1CBD JUMP JUMPDEST PUSH2 0xF56 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x2078 JUMP JUMPDEST POP PUSH2 0xF5F PUSH2 0x1D8B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xF73 CALLER DUP5 PUSH2 0x1DAE JUMP JUMPDEST PUSH0 PUSH2 0xF7E DUP5 DUP5 PUSH2 0x224C JUMP JUMPDEST SWAP1 POP PUSH2 0xF8A CALLER DUP6 PUSH2 0x1F42 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xFBE DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1096 DUP3 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x109F DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x10A9 DUP4 DUP4 PUSH2 0x2162 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x10D9 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x1CBD JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1103 PUSH2 0x1D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xDB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7 PUSH2 0x121B DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x1223 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A3 SWAP1 PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB DUP1 SLOAD SWAP1 POP PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x142B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0x31F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP JUMPDEST DUP1 PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1462 SWAP1 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xB DUP1 SLOAD SWAP1 POP PUSH2 0x147E SWAP2 SWAP1 PUSH2 0x3287 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x1651 JUMPI PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14D8 JUMPI PUSH2 0x14D7 PUSH2 0x31F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH1 0xD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x31F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xD PUSH0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x31F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP1 PUSH2 0x1663 JUMPI PUSH2 0x1662 PUSH2 0x32BA JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH0 PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8CE60EC723C7FCC3C3F6B1FFAA7B814B03DF348C312BB6E41929417162565664 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1778 PUSH2 0x1D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x17FD JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x17B4 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1896 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188D SWAP1 PUSH2 0x30DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FB SWAP1 PUSH2 0x3331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0xDB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7 DUP2 JUMP JUMPDEST PUSH32 0xDB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7 PUSH2 0x1995 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x199D PUSH2 0x1CBD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A02 SWAP1 PUSH2 0x3399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8C SWAP1 PUSH2 0x3401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB DUP1 SLOAD SWAP1 POP PUSH2 0x1B5C SWAP2 SWAP1 PUSH2 0x3287 JUMP JUMPDEST PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE82ACF77C2686315E6AEAA43CCEC710936B819CB5D01A31FADB2BF2A928C9342 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1C3C PUSH2 0x1D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CBA DUP2 PUSH2 0x1CB5 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x226E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1D02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF9 SWAP1 PUSH2 0x3469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D7C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D73 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D87 PUSH0 DUP4 DUP4 PUSH2 0x22BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DA9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2362 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1DFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF5 SWAP1 PUSH2 0x351D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7E SWAP1 PUSH2 0x3585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F07 SWAP1 PUSH2 0x35ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1F1E PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F2B DUP6 DUP3 DUP6 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x1F36 DUP6 DUP6 DUP6 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x1FA1 DUP4 PUSH2 0xD34 JUMP JUMPDEST GT PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2069 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2060 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2074 DUP3 PUSH0 DUP4 PUSH2 0x22BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2083 DUP4 DUP4 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x2158 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x20F5 PUSH2 0x1D95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x215C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x216D DUP4 DUP4 PUSH2 0xDA1 JUMP JUMPDEST ISZERO PUSH2 0x2242 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x21DF PUSH2 0x1D95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2246 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2256 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP PUSH2 0x2263 DUP2 DUP6 DUP6 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2278 DUP3 DUP3 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x22BB JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B2 SWAP3 SWAP2 SWAP1 PUSH2 0x360B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x22CA DUP4 DUP4 DUP4 PUSH2 0x26B4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x235D JUMPI PUSH0 PUSH2 0x2306 PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2311 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x235A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2351 SWAP3 SWAP2 SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23D2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C9 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2442 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2439 SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x252B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2522 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x253C DUP5 DUP5 PUSH2 0x116F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x25BE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x25AF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25BD DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2362 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2634 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262B SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26A4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269B SWAP2 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26AF DUP4 DUP4 DUP4 PUSH2 0x22BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2704 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x26F8 SWAP2 SWAP1 PUSH2 0x368E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x27D2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x278D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2784 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2819 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2863 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x28C0 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2905 DUP2 PUSH2 0x28D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x290F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2920 DUP2 PUSH2 0x28FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x293B JUMPI PUSH2 0x293A PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2948 DUP5 DUP3 DUP6 ADD PUSH2 0x2912 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2965 DUP2 PUSH2 0x2951 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x297E PUSH0 DUP4 ADD DUP5 PUSH2 0x295C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29AD DUP3 PUSH2 0x2984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29BD DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29D8 DUP2 PUSH2 0x29B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F0 DUP2 PUSH2 0x29DE JUMP JUMPDEST DUP2 EQ PUSH2 0x29FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A0B DUP2 PUSH2 0x29E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A34 DUP6 DUP3 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A45 DUP6 DUP3 DUP7 ADD PUSH2 0x29FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A91 DUP3 PUSH2 0x2A4F JUMP JUMPDEST PUSH2 0x2A9B DUP2 DUP6 PUSH2 0x2A59 JUMP JUMPDEST SWAP4 POP PUSH2 0x2AAB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A69 JUMP JUMPDEST PUSH2 0x2AB4 DUP2 PUSH2 0x2A77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AD7 DUP2 DUP5 PUSH2 0x2A87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AE8 DUP2 PUSH2 0x29DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B01 PUSH0 DUP4 ADD DUP5 PUSH2 0x2ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B1E JUMPI PUSH2 0x2B1D PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B2B DUP7 DUP3 DUP8 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B3C DUP7 DUP3 DUP8 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B4D DUP7 DUP3 DUP8 ADD PUSH2 0x29FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B69 DUP2 PUSH2 0x2B57 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B73 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B84 DUP2 PUSH2 0x2B60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B9F JUMPI PUSH2 0x2B9E PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BAC DUP5 DUP3 DUP6 ADD PUSH2 0x2B76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BBE DUP2 PUSH2 0x2B57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BF3 JUMPI PUSH2 0x2BF2 PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C00 DUP6 DUP3 DUP7 ADD PUSH2 0x2B76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C11 DUP6 DUP3 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C30 DUP2 PUSH2 0x2C1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C49 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C58 DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C71 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8C JUMPI PUSH2 0x2C8B PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C99 DUP5 DUP3 DUP6 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CAC DUP3 PUSH2 0x2984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CBC DUP2 PUSH2 0x2CA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CD5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2CB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CE4 DUP2 PUSH2 0x2951 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CFF DUP2 PUSH2 0x2CDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1A JUMPI PUSH2 0x2D19 PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D27 DUP5 DUP3 DUP6 ADD PUSH2 0x2CF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D46 JUMPI PUSH2 0x2D45 PUSH2 0x28CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D53 DUP6 DUP3 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D64 DUP6 DUP3 DUP7 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DA0 DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB1 DUP4 DUP4 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2DD3 DUP3 PUSH2 0x2D6E JUMP JUMPDEST PUSH2 0x2DDD DUP2 DUP6 PUSH2 0x2D78 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DE8 DUP4 PUSH2 0x2D88 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E18 JUMPI DUP2 MLOAD PUSH2 0x2DFF DUP9 DUP3 PUSH2 0x2DA6 JUMP JUMPDEST SWAP8 POP PUSH2 0x2E0A DUP4 PUSH2 0x2DBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2DEB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E3D DUP2 DUP5 PUSH2 0x2DC9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62757965722069732061207A65726F2061646472657373000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E79 PUSH1 0x17 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E84 DUP3 PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EA6 DUP2 PUSH2 0x2E6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x776569416D6F756E742069732030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE1 PUSH1 0xE DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EEC DUP3 PUSH2 0x2EAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F0E DUP2 PUSH2 0x2ED5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2F4C DUP3 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F57 DUP4 PUSH2 0x29DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2F65 DUP2 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2F7C JUMPI PUSH2 0x2F7B PUSH2 0x2F15 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2FC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2FDA JUMPI PUSH2 0x2FD9 PUSH2 0x2F83 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x303A PUSH1 0x21 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3045 DUP3 PUSH2 0x2FE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3067 DUP2 PUSH2 0x302E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865204F776E65722063616E2063616C6C20746869732066756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30C8 PUSH1 0x25 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x30D3 DUP3 PUSH2 0x306E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30F5 DUP2 PUSH2 0x30BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55736572206973206E6F74204B59436564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3130 PUSH1 0x11 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x313B DUP3 PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x315D DUP2 PUSH2 0x3124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55736572206F776E7320746F6B656E732C2063616E6E6F742072656D6F766520 PUSH0 DUP3 ADD MSTORE PUSH32 0x66726F6D204B5943206C69737400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31BE PUSH1 0x2D DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x31C9 DUP3 PUSH2 0x3164 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31EB DUP2 PUSH2 0x31B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x55736572206E6F7420666F756E6420696E204B5943206C697374000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3253 PUSH1 0x1A DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x325E DUP3 PUSH2 0x321F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3280 DUP2 PUSH2 0x3247 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3291 DUP3 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP PUSH2 0x329C DUP4 PUSH2 0x29DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x32B4 JUMPI PUSH2 0x32B3 PUSH2 0x2F15 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C6964206E6577206F776E657220616464726573732E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x331B PUSH1 0x1A DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3326 DUP3 PUSH2 0x32E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3348 DUP2 PUSH2 0x330F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3383 PUSH1 0xF DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x338E DUP3 PUSH2 0x334F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33B0 DUP2 PUSH2 0x3377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5573657220697320616C7265616479204B594365640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x33EB PUSH1 0x15 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x33F6 DUP3 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3418 DUP2 PUSH2 0x33DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3453 PUSH1 0x1F DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x345E DUP3 PUSH2 0x341F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3480 DUP2 PUSH2 0x3447 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4469766964656E6420506572696F64206973206F6E676F696E672C20616C6C20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7472616E73666572732077696C6C20726573756D652061667465722064697669 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x64656E6420706572696F642E0000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3507 PUSH1 0x4C DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x3512 DUP3 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3534 DUP2 PUSH2 0x34FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206973206E6F74204B5943656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x356F PUSH1 0x13 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x357A DUP3 PUSH2 0x353B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x359C DUP2 PUSH2 0x3563 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E74206973206E6F74204B5943656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35D7 PUSH1 0x16 DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 POP PUSH2 0x35E2 DUP3 PUSH2 0x35A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3604 DUP2 PUSH2 0x35CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x361E PUSH0 DUP4 ADD DUP6 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0x362B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3645 PUSH0 DUP4 ADD DUP6 PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x3652 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2ADF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x366C PUSH0 DUP4 ADD DUP7 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0x3679 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x3686 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2ADF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3698 DUP3 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP PUSH2 0x36A3 DUP4 PUSH2 0x29DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x36BB JUMPI PUSH2 0x36BA PUSH2 0x2F15 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0x2B MSTORE8 TLOAD MULMOD COINBASE 0x4D 0xC1 0xBA 0xC SWAP2 DUP1 SDIV SWAP2 PUSH31 0xB08C19D29319220F7CE4414627587DD4A364736F6C634300081A0033000000 ",
							"sourceMap": "438:6654:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2824:302:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3609:301:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4589:377:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2059:75;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1951:98:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:81:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2239:92:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6725:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2144:85:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2695:119:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3227:277:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6967:123;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6499:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;509:62;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4976:130:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5116:107;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6835:122;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5639:850:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6621:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2509:176;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;577:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5233:396;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2824:302:11:-;547:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2261:21:3::1;:19;:21::i;:::-;2952:1:11::2;2935:19;;:5;:19;;::::0;2927:55:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3009:1;3000:6;:10;2992:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;3048:19;3079:5;;3070:6;:14;;;;:::i;:::-;3048:36;;3094:25;3100:5;3107:11;3094:5;:25::i;:::-;2917:209;2303:20:3::1;:18;:20::i;:::-;2824:302:11::0;;;:::o;1760:89:4:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;3609:301:11:-;3707:4;3723:36;3741:6;3749:9;3723:17;:36::i;:::-;3769:12;3784:45;3803:6;3811:9;3822:6;3784:18;:45::i;:::-;3769:60;;3839:40;3861:6;3869:9;3839:21;:40::i;:::-;3896:7;3889:14;;;3609:301;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4589:377:11:-;4688:4;547:24;2464:16:0;2475:4;2464:10;:16::i;:::-;4735:1:11::1;4712:25;;:11;:25;;::::0;4704:71:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4794:27;4800:11;4813:7;4794:5;:27::i;:::-;4870:1;4844:22;4854:11;4844:9;:22::i;:::-;:27:::0;4840:90:::1;;4914:5;4887:11;:24;4899:11;4887:24;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;4840:90;4955:4;4948:11;;4589:377:::0;;;;;:::o;2059:75::-;2096:7;2122:5;;2115:12;;2059:75;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;1951:98:11:-;2009:5;2033:9;;;;;;;;;;;2026:16;;1951:98;:::o;923:81:6:-;967:7;993:4;986:11;;923:81;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2239:92:11:-;2286:7;2312:12;;;;;;;;;;;2305:19;;2239:92;:::o;6725:100::-;6776:7;6802:9;:16;;;;6795:23;;6725:100;:::o;2985:116:4:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2144:85:11:-;2182:15;2216:6;;;;;;;;;;;2209:13;;2144:85;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1962:93:4:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2695:119:11:-;2433:6;;;;;;;;;;;2419:20;;:10;:20;;;2411:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:3::1;:19;:21::i;:::-;2773:34:11::2;547:24;2797:9;2773:10;:34::i;:::-;;2303:20:3::1;:18;:20::i;:::-;2695:119:11::0;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3227:277:11:-;3305:4;3321:40;3339:10;3351:9;3321:17;:40::i;:::-;3371:12;3386:33;3401:9;3412:6;3386:14;:33::i;:::-;3371:48;;3429:44;3451:10;3463:9;3429:21;:44::i;:::-;3490:7;3483:14;;;3227:277;;;;:::o;6967:123::-;547:24;2464:16:0;2475:4;2464:10;:16::i;:::-;7079:4:11::1;7052:11;:24;7064:11;7052:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;6967:123:::0;;:::o;6499:112::-;6559:4;6582:8;:22;6591:12;6582:22;;;;;;;;;;;;;;;;;;;;;;;;;6575:29;;6499:112;;;:::o;509:62::-;547:24;509:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;4976:130:11:-;547:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2261:21:3::1;:19;:21::i;:::-;5094:5:11::2;5076:15;;:23;;;;;;;;;;;;;;;;;;2303:20:3::1;:18;:20::i;:::-;4976:130:11::0;;:::o;5116:107::-;5178:4;5201:15;;;;;;;;;;;5194:22;;5116:107;:::o;6835:122::-;6902:4;6925:11;:25;6937:12;6925:25;;;;;;;;;;;;;;;;;;;;;;;;;6918:32;;6835:122;;;:::o;3532:140:4:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;5639:850:11:-;612:21;2464:16:0;2475:4;2464:10;:16::i;:::-;2261:21:3::1;:19;:21::i;:::-;5733:8:11::2;:14;5742:4;5733:14;;;;;;;;;;;;;;;;;;;;;;;;;5725:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;5788:11;:17;5800:4;5788:17;;;;;;;;;;;;;;;;;;;;;;;;;5787:18;5779:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5874:10;5930:9;:16;;;;5906:15;:21;5922:4;5906:21;;;;;;;;;;;;;;;;:40;5902:119;;;6006:4;5970:40;;:9;5980:15;:21;5996:4;5980:21;;;;;;;;;;;;;;;;5970:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:40;;;5962:48;;5902:119;6038:5;6030:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:17;6132:1;6113:9;:16;;;;:20;;;;:::i;:::-;6093:40;;6172:9;6147:15;:21;6163:4;6147:21;;;;;;;;;;;;;;;;:34;6143:195;;6232:9;6242;6232:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6197:9;6207:15;:21;6223:4;6207:21;;;;;;;;;;;;;;;;6197:32;;;;;;;;:::i;:::-;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;6306:15;:21;6322:4;6306:21;;;;;;;;;;;;;;;;6266:15;:37;6282:9;6292;6282:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6266:37;;;;;;;;;;;;;;;:61;;;;6143:195;6347:9;:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;6398:5;6381:8;:14;6390:4;6381:14;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;6437:1;6413:15;:21;6429:4;6413:21;;;;;;;;;;;;;;;:25;;;;6477:4;6462:20;;;;;;;;;;;;5715:774;;2303:20:3::1;:18;:20::i;:::-;5639:850:11::0;;:::o;6621:94::-;6664:16;6699:9;6692:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6621:94;:::o;2509:176::-;2433:6;;;;;;;;;;;2419:20;;:10;:20;;;2411:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2609:1:::1;2589:22;;:8;:22;;::::0;2581:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2669:8;2652:6;;:26;;;;;;;;;;;;;;;;;;2509:176:::0;:::o;577:56::-;612:21;577:56;:::o;5233:396::-;612:21;2464:16:0;2475:4;2464:10;:16::i;:::-;2261:21:3::1;:19;:21::i;:::-;5340:1:11::2;5324:18;;:4;:18;;::::0;5316:46:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;5381:8;:14;5390:4;5381:14;;;;;;;;;;;;;;;;;;;;;;;;;5380:15;5372:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;5457:4;5440:8;:14;5449:4;5440:14;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;5471:9;5486:4;5471:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5544:1;5525:9;:16;;;;:20;;;;:::i;:::-;5501:15;:21;5517:4;5501:21;;;;;;;;;;;;;;;:44;;;;5575:5;5555:11;:17;5567:4;5555:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;5617:4;5604:18;;;;;;;;;;;;2303:20:3::1;:18;:20::i;:::-;5233:396:11::0;;:::o;763:146:9:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;7439:208:4:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2629:209:3:-;1716:1;2809:7;:22;;;;2629:209::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8707:128:4:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;3998:319:11:-;4092:15;;;;;;;;;;;4091:16;4083:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;4206:8;:16;4215:6;4206:16;;;;;;;;;;;;;;;;;;;;;;;;;4198:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;4264:8;:19;4273:9;4264:19;;;;;;;;;;;;;;;;;;;;;;;;;4256:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3998:319;;:::o;4757:244:4:-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;4406:173:11:-;4515:4;4490:11;:22;4502:9;4490:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4571:1;4551:17;4561:6;4551:9;:17::i;:::-;:21;4529:11;:19;4541:6;4529:19;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;4406:173;;:::o;7965:206:4:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6732:317::-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;3296:178:4:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;1059:371:6:-;1153:30;1167:4;1173:2;1177:5;1153:13;:30::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;:5::i;:::-;1232:25;;1271:14;1288:13;:11;:13::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;9682:432:4:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:474::-;2449:6;2457;2506:2;2494:9;2485:7;2481:23;2477:32;2474:119;;;2512:79;;:::i;:::-;2474:119;2632:1;2657:53;2702:7;2693:6;2682:9;2678:22;2657:53;:::i;:::-;2647:63;;2603:117;2759:2;2785:53;2830:7;2821:6;2810:9;2806:22;2785:53;:::i;:::-;2775:63;;2730:118;2381:474;;;;;:::o;2861:99::-;2913:6;2947:5;2941:12;2931:22;;2861:99;;;:::o;2966:169::-;3050:11;3084:6;3079:3;3072:19;3124:4;3119:3;3115:14;3100:29;;2966:169;;;;:::o;3141:139::-;3230:6;3225:3;3220;3214:23;3271:1;3262:6;3257:3;3253:16;3246:27;3141:139;;;:::o;3286:102::-;3327:6;3378:2;3374:7;3369:2;3362:5;3358:14;3354:28;3344:38;;3286:102;;;:::o;3394:377::-;3482:3;3510:39;3543:5;3510:39;:::i;:::-;3565:71;3629:6;3624:3;3565:71;:::i;:::-;3558:78;;3645:65;3703:6;3698:3;3691:4;3684:5;3680:16;3645:65;:::i;:::-;3735:29;3757:6;3735:29;:::i;:::-;3730:3;3726:39;3719:46;;3486:285;3394:377;;;;:::o;3777:313::-;3890:4;3928:2;3917:9;3913:18;3905:26;;3977:9;3971:4;3967:20;3963:1;3952:9;3948:17;3941:47;4005:78;4078:4;4069:6;4005:78;:::i;:::-;3997:86;;3777:313;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:474::-;6184:6;6192;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:53;6437:7;6428:6;6417:9;6413:22;6392:53;:::i;:::-;6382:63;;6338:117;6494:2;6520:53;6565:7;6556:6;6545:9;6541:22;6520:53;:::i;:::-;6510:63;;6465:118;6116:474;;;;;:::o;6596:86::-;6631:7;6671:4;6664:5;6660:16;6649:27;;6596:86;;;:::o;6688:112::-;6771:22;6787:5;6771:22;:::i;:::-;6766:3;6759:35;6688:112;;:::o;6806:214::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:67;7010:1;6999:9;6995:17;6986:6;6946:67;:::i;:::-;6806:214;;;;:::o;7026:118::-;7113:24;7131:5;7113:24;:::i;:::-;7108:3;7101:37;7026:118;;:::o;7150:222::-;7243:4;7281:2;7270:9;7266:18;7258:26;;7294:71;7362:1;7351:9;7347:17;7338:6;7294:71;:::i;:::-;7150:222;;;;:::o;7378:329::-;7437:6;7486:2;7474:9;7465:7;7461:23;7457:32;7454:119;;;7492:79;;:::i;:::-;7454:119;7612:1;7637:53;7682:7;7673:6;7662:9;7658:22;7637:53;:::i;:::-;7627:63;;7583:117;7378:329;;;;:::o;7713:104::-;7758:7;7787:24;7805:5;7787:24;:::i;:::-;7776:35;;7713:104;;;:::o;7823:142::-;7926:32;7952:5;7926:32;:::i;:::-;7921:3;7914:45;7823:142;;:::o;7971:254::-;8080:4;8118:2;8107:9;8103:18;8095:26;;8131:87;8215:1;8204:9;8200:17;8191:6;8131:87;:::i;:::-;7971:254;;;;:::o;8231:116::-;8301:21;8316:5;8301:21;:::i;:::-;8294:5;8291:32;8281:60;;8337:1;8334;8327:12;8281:60;8231:116;:::o;8353:133::-;8396:5;8434:6;8421:20;8412:29;;8450:30;8474:5;8450:30;:::i;:::-;8353:133;;;;:::o;8492:323::-;8548:6;8597:2;8585:9;8576:7;8572:23;8568:32;8565:119;;;8603:79;;:::i;:::-;8565:119;8723:1;8748:50;8790:7;8781:6;8770:9;8766:22;8748:50;:::i;:::-;8738:60;;8694:114;8492:323;;;;:::o;8821:474::-;8889:6;8897;8946:2;8934:9;8925:7;8921:23;8917:32;8914:119;;;8952:79;;:::i;:::-;8914:119;9072:1;9097:53;9142:7;9133:6;9122:9;9118:22;9097:53;:::i;:::-;9087:63;;9043:117;9199:2;9225:53;9270:7;9261:6;9250:9;9246:22;9225:53;:::i;:::-;9215:63;;9170:118;8821:474;;;;;:::o;9301:114::-;9368:6;9402:5;9396:12;9386:22;;9301:114;;;:::o;9421:184::-;9520:11;9554:6;9549:3;9542:19;9594:4;9589:3;9585:14;9570:29;;9421:184;;;;:::o;9611:132::-;9678:4;9701:3;9693:11;;9731:4;9726:3;9722:14;9714:22;;9611:132;;;:::o;9749:108::-;9826:24;9844:5;9826:24;:::i;:::-;9821:3;9814:37;9749:108;;:::o;9863:179::-;9932:10;9953:46;9995:3;9987:6;9953:46;:::i;:::-;10031:4;10026:3;10022:14;10008:28;;9863:179;;;;:::o;10048:113::-;10118:4;10150;10145:3;10141:14;10133:22;;10048:113;;;:::o;10197:732::-;10316:3;10345:54;10393:5;10345:54;:::i;:::-;10415:86;10494:6;10489:3;10415:86;:::i;:::-;10408:93;;10525:56;10575:5;10525:56;:::i;:::-;10604:7;10635:1;10620:284;10645:6;10642:1;10639:13;10620:284;;;10721:6;10715:13;10748:63;10807:3;10792:13;10748:63;:::i;:::-;10741:70;;10834:60;10887:6;10834:60;:::i;:::-;10824:70;;10680:224;10667:1;10664;10660:9;10655:14;;10620:284;;;10624:14;10920:3;10913:10;;10321:608;;;10197:732;;;;:::o;10935:373::-;11078:4;11116:2;11105:9;11101:18;11093:26;;11165:9;11159:4;11155:20;11151:1;11140:9;11136:17;11129:47;11193:108;11296:4;11287:6;11193:108;:::i;:::-;11185:116;;10935:373;;;;:::o;11314:173::-;11454:25;11450:1;11442:6;11438:14;11431:49;11314:173;:::o;11493:366::-;11635:3;11656:67;11720:2;11715:3;11656:67;:::i;:::-;11649:74;;11732:93;11821:3;11732:93;:::i;:::-;11850:2;11845:3;11841:12;11834:19;;11493:366;;;:::o;11865:419::-;12031:4;12069:2;12058:9;12054:18;12046:26;;12118:9;12112:4;12108:20;12104:1;12093:9;12089:17;12082:47;12146:131;12272:4;12146:131;:::i;:::-;12138:139;;11865:419;;;:::o;12290:164::-;12430:16;12426:1;12418:6;12414:14;12407:40;12290:164;:::o;12460:366::-;12602:3;12623:67;12687:2;12682:3;12623:67;:::i;:::-;12616:74;;12699:93;12788:3;12699:93;:::i;:::-;12817:2;12812:3;12808:12;12801:19;;12460:366;;;:::o;12832:419::-;12998:4;13036:2;13025:9;13021:18;13013:26;;13085:9;13079:4;13075:20;13071:1;13060:9;13056:17;13049:47;13113:131;13239:4;13113:131;:::i;:::-;13105:139;;12832:419;;;:::o;13257:180::-;13305:77;13302:1;13295:88;13402:4;13399:1;13392:15;13426:4;13423:1;13416:15;13443:410;13483:7;13506:20;13524:1;13506:20;:::i;:::-;13501:25;;13540:20;13558:1;13540:20;:::i;:::-;13535:25;;13595:1;13592;13588:9;13617:30;13635:11;13617:30;:::i;:::-;13606:41;;13796:1;13787:7;13783:15;13780:1;13777:22;13757:1;13750:9;13730:83;13707:139;;13826:18;;:::i;:::-;13707:139;13491:362;13443:410;;;;:::o;13859:180::-;13907:77;13904:1;13897:88;14004:4;14001:1;13994:15;14028:4;14025:1;14018:15;14045:320;14089:6;14126:1;14120:4;14116:12;14106:22;;14173:1;14167:4;14163:12;14194:18;14184:81;;14250:4;14242:6;14238:17;14228:27;;14184:81;14312:2;14304:6;14301:14;14281:18;14278:38;14275:84;;14331:18;;:::i;:::-;14275:84;14096:269;14045:320;;;:::o;14371:220::-;14511:34;14507:1;14499:6;14495:14;14488:58;14580:3;14575:2;14567:6;14563:15;14556:28;14371:220;:::o;14597:366::-;14739:3;14760:67;14824:2;14819:3;14760:67;:::i;:::-;14753:74;;14836:93;14925:3;14836:93;:::i;:::-;14954:2;14949:3;14945:12;14938:19;;14597:366;;;:::o;14969:419::-;15135:4;15173:2;15162:9;15158:18;15150:26;;15222:9;15216:4;15212:20;15208:1;15197:9;15193:17;15186:47;15250:131;15376:4;15250:131;:::i;:::-;15242:139;;14969:419;;;:::o;15394:224::-;15534:34;15530:1;15522:6;15518:14;15511:58;15603:7;15598:2;15590:6;15586:15;15579:32;15394:224;:::o;15624:366::-;15766:3;15787:67;15851:2;15846:3;15787:67;:::i;:::-;15780:74;;15863:93;15952:3;15863:93;:::i;:::-;15981:2;15976:3;15972:12;15965:19;;15624:366;;;:::o;15996:419::-;16162:4;16200:2;16189:9;16185:18;16177:26;;16249:9;16243:4;16239:20;16235:1;16224:9;16220:17;16213:47;16277:131;16403:4;16277:131;:::i;:::-;16269:139;;15996:419;;;:::o;16421:167::-;16561:19;16557:1;16549:6;16545:14;16538:43;16421:167;:::o;16594:366::-;16736:3;16757:67;16821:2;16816:3;16757:67;:::i;:::-;16750:74;;16833:93;16922:3;16833:93;:::i;:::-;16951:2;16946:3;16942:12;16935:19;;16594:366;;;:::o;16966:419::-;17132:4;17170:2;17159:9;17155:18;17147:26;;17219:9;17213:4;17209:20;17205:1;17194:9;17190:17;17183:47;17247:131;17373:4;17247:131;:::i;:::-;17239:139;;16966:419;;;:::o;17391:232::-;17531:34;17527:1;17519:6;17515:14;17508:58;17600:15;17595:2;17587:6;17583:15;17576:40;17391:232;:::o;17629:366::-;17771:3;17792:67;17856:2;17851:3;17792:67;:::i;:::-;17785:74;;17868:93;17957:3;17868:93;:::i;:::-;17986:2;17981:3;17977:12;17970:19;;17629:366;;;:::o;18001:419::-;18167:4;18205:2;18194:9;18190:18;18182:26;;18254:9;18248:4;18244:20;18240:1;18229:9;18225:17;18218:47;18282:131;18408:4;18282:131;:::i;:::-;18274:139;;18001:419;;;:::o;18426:180::-;18474:77;18471:1;18464:88;18571:4;18568:1;18561:15;18595:4;18592:1;18585:15;18612:176;18752:28;18748:1;18740:6;18736:14;18729:52;18612:176;:::o;18794:366::-;18936:3;18957:67;19021:2;19016:3;18957:67;:::i;:::-;18950:74;;19033:93;19122:3;19033:93;:::i;:::-;19151:2;19146:3;19142:12;19135:19;;18794:366;;;:::o;19166:419::-;19332:4;19370:2;19359:9;19355:18;19347:26;;19419:9;19413:4;19409:20;19405:1;19394:9;19390:17;19383:47;19447:131;19573:4;19447:131;:::i;:::-;19439:139;;19166:419;;;:::o;19591:194::-;19631:4;19651:20;19669:1;19651:20;:::i;:::-;19646:25;;19685:20;19703:1;19685:20;:::i;:::-;19680:25;;19729:1;19726;19722:9;19714:17;;19753:1;19747:4;19744:11;19741:37;;;19758:18;;:::i;:::-;19741:37;19591:194;;;;:::o;19791:180::-;19839:77;19836:1;19829:88;19936:4;19933:1;19926:15;19960:4;19957:1;19950:15;19977:176;20117:28;20113:1;20105:6;20101:14;20094:52;19977:176;:::o;20159:366::-;20301:3;20322:67;20386:2;20381:3;20322:67;:::i;:::-;20315:74;;20398:93;20487:3;20398:93;:::i;:::-;20516:2;20511:3;20507:12;20500:19;;20159:366;;;:::o;20531:419::-;20697:4;20735:2;20724:9;20720:18;20712:26;;20784:9;20778:4;20774:20;20770:1;20759:9;20755:17;20748:47;20812:131;20938:4;20812:131;:::i;:::-;20804:139;;20531:419;;;:::o;20956:165::-;21096:17;21092:1;21084:6;21080:14;21073:41;20956:165;:::o;21127:366::-;21269:3;21290:67;21354:2;21349:3;21290:67;:::i;:::-;21283:74;;21366:93;21455:3;21366:93;:::i;:::-;21484:2;21479:3;21475:12;21468:19;;21127:366;;;:::o;21499:419::-;21665:4;21703:2;21692:9;21688:18;21680:26;;21752:9;21746:4;21742:20;21738:1;21727:9;21723:17;21716:47;21780:131;21906:4;21780:131;:::i;:::-;21772:139;;21499:419;;;:::o;21924:171::-;22064:23;22060:1;22052:6;22048:14;22041:47;21924:171;:::o;22101:366::-;22243:3;22264:67;22328:2;22323:3;22264:67;:::i;:::-;22257:74;;22340:93;22429:3;22340:93;:::i;:::-;22458:2;22453:3;22449:12;22442:19;;22101:366;;;:::o;22473:419::-;22639:4;22677:2;22666:9;22662:18;22654:26;;22726:9;22720:4;22716:20;22712:1;22701:9;22697:17;22690:47;22754:131;22880:4;22754:131;:::i;:::-;22746:139;;22473:419;;;:::o;22898:181::-;23038:33;23034:1;23026:6;23022:14;23015:57;22898:181;:::o;23085:366::-;23227:3;23248:67;23312:2;23307:3;23248:67;:::i;:::-;23241:74;;23324:93;23413:3;23324:93;:::i;:::-;23442:2;23437:3;23433:12;23426:19;;23085:366;;;:::o;23457:419::-;23623:4;23661:2;23650:9;23646:18;23638:26;;23710:9;23704:4;23700:20;23696:1;23685:9;23681:17;23674:47;23738:131;23864:4;23738:131;:::i;:::-;23730:139;;23457:419;;;:::o;23882:300::-;24022:34;24018:1;24010:6;24006:14;23999:58;24091:34;24086:2;24078:6;24074:15;24067:59;24160:14;24155:2;24147:6;24143:15;24136:39;23882:300;:::o;24188:366::-;24330:3;24351:67;24415:2;24410:3;24351:67;:::i;:::-;24344:74;;24427:93;24516:3;24427:93;:::i;:::-;24545:2;24540:3;24536:12;24529:19;;24188:366;;;:::o;24560:419::-;24726:4;24764:2;24753:9;24749:18;24741:26;;24813:9;24807:4;24803:20;24799:1;24788:9;24784:17;24777:47;24841:131;24967:4;24841:131;:::i;:::-;24833:139;;24560:419;;;:::o;24985:169::-;25125:21;25121:1;25113:6;25109:14;25102:45;24985:169;:::o;25160:366::-;25302:3;25323:67;25387:2;25382:3;25323:67;:::i;:::-;25316:74;;25399:93;25488:3;25399:93;:::i;:::-;25517:2;25512:3;25508:12;25501:19;;25160:366;;;:::o;25532:419::-;25698:4;25736:2;25725:9;25721:18;25713:26;;25785:9;25779:4;25775:20;25771:1;25760:9;25756:17;25749:47;25813:131;25939:4;25813:131;:::i;:::-;25805:139;;25532:419;;;:::o;25957:172::-;26097:24;26093:1;26085:6;26081:14;26074:48;25957:172;:::o;26135:366::-;26277:3;26298:67;26362:2;26357:3;26298:67;:::i;:::-;26291:74;;26374:93;26463:3;26374:93;:::i;:::-;26492:2;26487:3;26483:12;26476:19;;26135:366;;;:::o;26507:419::-;26673:4;26711:2;26700:9;26696:18;26688:26;;26760:9;26754:4;26750:20;26746:1;26735:9;26731:17;26724:47;26788:131;26914:4;26788:131;:::i;:::-;26780:139;;26507:419;;;:::o;26932:332::-;27053:4;27091:2;27080:9;27076:18;27068:26;;27104:71;27172:1;27161:9;27157:17;27148:6;27104:71;:::i;:::-;27185:72;27253:2;27242:9;27238:18;27229:6;27185:72;:::i;:::-;26932:332;;;;;:::o;27270:::-;27391:4;27429:2;27418:9;27414:18;27406:26;;27442:71;27510:1;27499:9;27495:17;27486:6;27442:71;:::i;:::-;27523:72;27591:2;27580:9;27576:18;27567:6;27523:72;:::i;:::-;27270:332;;;;;:::o;27608:442::-;27757:4;27795:2;27784:9;27780:18;27772:26;;27808:71;27876:1;27865:9;27861:17;27852:6;27808:71;:::i;:::-;27889:72;27957:2;27946:9;27942:18;27933:6;27889:72;:::i;:::-;27971;28039:2;28028:9;28024:18;28015:6;27971:72;:::i;:::-;27608:442;;;;;;:::o;28056:191::-;28096:3;28115:20;28133:1;28115:20;:::i;:::-;28110:25;;28149:20;28167:1;28149:20;:::i;:::-;28144:25;;28192:1;28189;28185:9;28178:16;;28213:3;28210:1;28207:10;28204:36;;;28220:18;;:::i;:::-;28204:36;28056:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2814200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "442",
								"KYC_ROLE()": "435",
								"MINTER_ROLE()": "436",
								"addKYCUser(address)": "infinite",
								"addMinter(address)": "77929",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"burnMyBalance(address,uint256)": "infinite",
								"cap()": "infinite",
								"decimals()": "2563",
								"getBeneficiary()": "2582",
								"getDividendPaymentPeriodState()": "2591",
								"getKYCList()": "infinite",
								"getOwnedTokens(address)": "2959",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3168",
								"isKYCed(address)": "2959",
								"kycUsersListLength()": "2529",
								"name()": "infinite",
								"owner()": "2648",
								"rate()": "2478",
								"removeKYCUser(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"sendTokens(address,uint256)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "27006",
								"updateDividendPeriodStatus(bool)": "56537",
								"updateOwnsToken(address)": "infinite"
							},
							"internal": {
								"_updateTokenOwnership(address,address)": "50962",
								"_validateTransfer(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1186,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1398,
									"end": 1402,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1370,
									"end": 1375,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1377,
									"end": 1384,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 756,
									"end": 760,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 756,
									"end": 765,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 752,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 6,
									"value": "392E1E2700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 788,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 752,
									"end": 817,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 844,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1446,
									"end": 1447,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1422,
									"end": 1448,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1422,
									"end": 1448,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1422,
									"end": 1434,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1422,
									"end": 1448,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1422,
									"end": 1448,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1422,
									"end": 1448,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1480,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1414,
									"end": 1480,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1511,
									"end": 1520,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 1499,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1520,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1538,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1530,
									"end": 1535,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1530,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1530,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1530,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1530,
									"end": 1543,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1580,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 1553,
									"end": 1565,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 1617,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1596,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 1590,
									"end": 1596,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1618,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1660,
									"end": 1702,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1671,
									"end": 1689,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1671,
									"end": 1689,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1691,
									"end": 1701,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1660,
									"end": 1670,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1660,
									"end": 1670,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1660,
									"end": 1670,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1660,
									"end": 1702,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1660,
									"end": 1702,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1660,
									"end": 1702,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1660,
									"end": 1702,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1660,
									"end": 1702,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1660,
									"end": 1702,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1747,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 547,
									"end": 571,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 1736,
									"end": 1746,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1722,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1712,
									"end": 1722,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1712,
									"end": 1722,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1747,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1712,
									"end": 1747,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1747,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1747,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1712,
									"end": 1747,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1747,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1757,
									"end": 1789,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 612,
									"end": 633,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "DB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7"
								},
								{
									"begin": 1778,
									"end": 1788,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1757,
									"end": 1767,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1757,
									"end": 1767,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1757,
									"end": 1767,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1757,
									"end": 1789,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1757,
									"end": 1789,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1757,
									"end": 1789,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1757,
									"end": 1789,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1757,
									"end": 1789,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1757,
									"end": 1789,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1835,
									"end": 1881,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 547,
									"end": 571,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1862,
									"end": 1880,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1880,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1835,
									"end": 1848,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1835,
									"end": 1848,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1835,
									"end": 1848,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1835,
									"end": 1881,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1835,
									"end": 1881,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1835,
									"end": 1881,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1835,
									"end": 1881,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1835,
									"end": 1881,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1891,
									"end": 1934,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 612,
									"end": 633,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "DB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1915,
									"end": 1933,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1891,
									"end": 1904,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1891,
									"end": 1904,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1891,
									"end": 1904,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1891,
									"end": 1934,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1891,
									"end": 1934,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1891,
									"end": 1934,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1891,
									"end": 1934,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1891,
									"end": 1934,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1941,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 5822,
									"end": 5826,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5809,
									"end": 5821,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 5809,
									"end": 5827,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5827,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5843,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5844,
									"end": 5848,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5837,
									"end": 5849,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5859,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5837,
									"end": 5859,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5928,
									"end": 5937,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5909,
									"end": 5926,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5903,
									"end": 5907,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 5771,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3875,
									"end": 3882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3907,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3912,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3810,
									"end": 3930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2605,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2645,
									"end": 2649,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 2638,
									"end": 2643,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2650,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2623,
									"end": 2650,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2623,
									"end": 2650,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 2749,
									"end": 2754,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2733,
									"end": 2755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2726,
									"end": 2731,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2723,
									"end": 2756,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2770,
									"end": 2771,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 2768,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2772,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2872,
									"end": 2878,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2866,
									"end": 2879,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2879,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2879,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 2913,
									"end": 2918,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2888,
									"end": 2919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2925,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2968,
									"end": 2975,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2997,
									"end": 3002,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2986,
									"end": 3002,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2986,
									"end": 3002,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2931,
									"end": 3008,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 3105,
									"end": 3110,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 3087,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3080,
									"end": 3085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3077,
									"end": 3112,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3126,
									"end": 3127,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3116,
									"end": 3128,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3014,
									"end": 3136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3199,
									"end": 3204,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3230,
									"end": 3236,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3224,
									"end": 3237,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3215,
									"end": 3237,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3215,
									"end": 3237,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 3273,
									"end": 3278,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 3246,
									"end": 3279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3328,
									"end": 3335,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3368,
									"end": 3410,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3361,
									"end": 3366,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3357,
									"end": 3411,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3411,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3411,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3291,
									"end": 3417,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3460,
									"end": 3467,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 3507,
									"end": 3512,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3489,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3478,
									"end": 3513,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3478,
									"end": 3513,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3423,
									"end": 3519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 3616,
									"end": 3621,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 3598,
									"end": 3622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3591,
									"end": 3596,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3588,
									"end": 3623,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3637,
									"end": 3638,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3634,
									"end": 3635,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3627,
									"end": 3639,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3525,
									"end": 3647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3715,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3741,
									"end": 3747,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3735,
									"end": 3748,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3726,
									"end": 3748,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3726,
									"end": 3748,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 3784,
									"end": 3789,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 3757,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3653,
									"end": 3796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3935,
									"end": 3941,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3943,
									"end": 3949,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3951,
									"end": 3957,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3959,
									"end": 3965,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3975,
									"end": 3981,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4024,
									"end": 4027,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 4012,
									"end": 4021,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 4003,
									"end": 4010,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 3999,
									"end": 4022,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4028,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4031,
									"end": 4110,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 4031,
									"end": 4110,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 4031,
									"end": 4110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4031,
									"end": 4110,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 4031,
									"end": 4110,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4161,
									"end": 4170,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 4157,
									"end": 4174,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4151,
									"end": 4175,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4202,
									"end": 4220,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4194,
									"end": 4200,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4191,
									"end": 4221,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4224,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 4224,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 4224,
									"end": 4303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4224,
									"end": 4303,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 4224,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4329,
									"end": 4403,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 4395,
									"end": 4402,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4386,
									"end": 4392,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4375,
									"end": 4384,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 4371,
									"end": 4393,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4329,
									"end": 4403,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 4329,
									"end": 4403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4329,
									"end": 4403,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 4329,
									"end": 4403,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4319,
									"end": 4403,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 4319,
									"end": 4403,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4122,
									"end": 4413,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4473,
									"end": 4475,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4462,
									"end": 4471,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 4458,
									"end": 4476,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4452,
									"end": 4477,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4504,
									"end": 4522,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4496,
									"end": 4502,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4493,
									"end": 4523,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4526,
									"end": 4605,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 4526,
									"end": 4605,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 4526,
									"end": 4605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4526,
									"end": 4605,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 4526,
									"end": 4605,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 4705,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 4697,
									"end": 4704,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4688,
									"end": 4694,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4677,
									"end": 4686,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 4673,
									"end": 4695,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 4705,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 4631,
									"end": 4705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 4705,
									"name": "tag",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 4631,
									"end": 4705,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4621,
									"end": 4705,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 4621,
									"end": 4705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4423,
									"end": 4715,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4754,
									"end": 4756,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4780,
									"end": 4842,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 4834,
									"end": 4841,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4825,
									"end": 4831,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4814,
									"end": 4823,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 4810,
									"end": 4832,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4780,
									"end": 4842,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 4780,
									"end": 4842,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4780,
									"end": 4842,
									"name": "tag",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 4780,
									"end": 4842,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4770,
									"end": 4842,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4770,
									"end": 4842,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4725,
									"end": 4852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4891,
									"end": 4893,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 4917,
									"end": 4981,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 4973,
									"end": 4980,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4964,
									"end": 4970,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4953,
									"end": 4962,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 4949,
									"end": 4971,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4917,
									"end": 4981,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 4917,
									"end": 4981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4917,
									"end": 4981,
									"name": "tag",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 4917,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4907,
									"end": 4981,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4907,
									"end": 4981,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4862,
									"end": 4991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5030,
									"end": 5033,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 5113,
									"end": 5120,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 5104,
									"end": 5110,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 5089,
									"end": 5111,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 5057,
									"end": 5121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 5057,
									"end": 5121,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5047,
									"end": 5121,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5047,
									"end": 5121,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5001,
									"end": 5131,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5173,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 5197,
									"end": 5261,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 5253,
									"end": 5260,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 5244,
									"end": 5250,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5233,
									"end": 5242,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5251,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5261,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 5197,
									"end": 5261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5261,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 5197,
									"end": 5261,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5187,
									"end": 5261,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5187,
									"end": 5261,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5141,
									"end": 5271,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 5278,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5336,
									"end": 5342,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5370,
									"end": 5375,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5364,
									"end": 5376,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5354,
									"end": 5376,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5354,
									"end": 5376,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5284,
									"end": 5383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5389,
									"end": 5569,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 5389,
									"end": 5569,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5437,
									"end": 5514,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5434,
									"end": 5435,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5427,
									"end": 5515,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5534,
									"end": 5538,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 5531,
									"end": 5532,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 5524,
									"end": 5539,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5558,
									"end": 5562,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 5555,
									"end": 5556,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5548,
									"end": 5563,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5619,
									"end": 5625,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5656,
									"end": 5657,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 5650,
									"end": 5654,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5646,
									"end": 5658,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 5636,
									"end": 5658,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5636,
									"end": 5658,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5703,
									"end": 5704,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5697,
									"end": 5701,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5693,
									"end": 5705,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5724,
									"end": 5742,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5714,
									"end": 5795,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 5714,
									"end": 5795,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5780,
									"end": 5784,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 5772,
									"end": 5778,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5768,
									"end": 5785,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5758,
									"end": 5785,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5758,
									"end": 5785,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5714,
									"end": 5795,
									"name": "tag",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 5714,
									"end": 5795,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5842,
									"end": 5844,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5834,
									"end": 5840,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5831,
									"end": 5845,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5811,
									"end": 5829,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5808,
									"end": 5846,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 5805,
									"end": 5889,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 5805,
									"end": 5889,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5861,
									"end": 5879,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 5861,
									"end": 5879,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 5861,
									"end": 5879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5861,
									"end": 5879,
									"name": "tag",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 5861,
									"end": 5879,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5805,
									"end": 5889,
									"name": "tag",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 5805,
									"end": 5889,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5626,
									"end": 5895,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5575,
									"end": 5895,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5950,
									"end": 5954,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5973,
									"end": 5976,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5965,
									"end": 5976,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5965,
									"end": 5976,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5996,
									"end": 5999,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5993,
									"end": 5994,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5986,
									"end": 6000,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6027,
									"end": 6028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6017,
									"end": 6035,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 6009,
									"end": 6035,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6009,
									"end": 6035,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5901,
									"end": 6042,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6085,
									"end": 6091,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6132,
									"end": 6134,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6127,
									"end": 6129,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6120,
									"end": 6125,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6130,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6112,
									"end": 6135,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 6102,
									"end": 6135,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6102,
									"end": 6135,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6048,
									"end": 6141,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6191,
									"end": 6199,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6235,
									"end": 6239,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6231,
									"end": 6247,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 6210,
									"end": 6247,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6210,
									"end": 6247,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6147,
									"end": 6254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6329,
									"end": 6335,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6379,
									"end": 6380,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6367,
									"end": 6377,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6363,
									"end": 6381,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6402,
									"end": 6499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 6432,
									"end": 6498,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6421,
									"end": 6430,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6402,
									"end": 6499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 6402,
									"end": 6499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6402,
									"end": 6499,
									"name": "tag",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 6402,
									"end": 6499,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6520,
									"end": 6559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 6550,
									"end": 6558,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6539,
									"end": 6548,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6520,
									"end": 6559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 6520,
									"end": 6559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6520,
									"end": 6559,
									"name": "tag",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 6520,
									"end": 6559,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6508,
									"end": 6559,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 6508,
									"end": 6559,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6592,
									"end": 6596,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6588,
									"end": 6597,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6581,
									"end": 6586,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6577,
									"end": 6598,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6568,
									"end": 6598,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 6568,
									"end": 6598,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6641,
									"end": 6645,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6631,
									"end": 6639,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6627,
									"end": 6646,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6620,
									"end": 6625,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6617,
									"end": 6647,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 6607,
									"end": 6647,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6607,
									"end": 6647,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6336,
									"end": 6653,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6336,
									"end": 6653,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6260,
									"end": 6653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6687,
									"end": 6690,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6701,
									"end": 6713,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6701,
									"end": 6713,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6659,
									"end": 6719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6808,
									"end": 6861,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 6826,
									"end": 6860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 6835,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 6853,
									"end": 6858,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6835,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 6835,
									"end": 6859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6835,
									"end": 6859,
									"name": "tag",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 6835,
									"end": 6859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6826,
									"end": 6860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 6826,
									"end": 6860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6826,
									"end": 6860,
									"name": "tag",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 6826,
									"end": 6860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6808,
									"end": 6861,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 6808,
									"end": 6861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6808,
									"end": 6861,
									"name": "tag",
									"source": 12,
									"value": "166"
								},
								{
									"begin": 6808,
									"end": 6861,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6795,
									"end": 6861,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6795,
									"end": 6861,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 6867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6916,
									"end": 6919,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6937,
									"end": 6942,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6930,
									"end": 6942,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6930,
									"end": 6942,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6873,
									"end": 6948,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7064,
									"end": 7103,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 7095,
									"end": 7102,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7064,
									"end": 7103,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 7064,
									"end": 7103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7064,
									"end": 7103,
									"name": "tag",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 7064,
									"end": 7103,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7125,
									"end": 7216,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 7174,
									"end": 7215,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 7198,
									"end": 7214,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7174,
									"end": 7215,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 7174,
									"end": 7215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7174,
									"end": 7215,
									"name": "tag",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 7174,
									"end": 7215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7166,
									"end": 7172,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7159,
									"end": 7163,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7125,
									"end": 7216,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 7125,
									"end": 7216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7125,
									"end": 7216,
									"name": "tag",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 7125,
									"end": 7216,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7119,
									"end": 7123,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7112,
									"end": 7217,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7030,
									"end": 7223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6954,
									"end": 7223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7229,
									"end": 7302,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 7229,
									"end": 7302,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7274,
									"end": 7277,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7229,
									"end": 7302,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7229,
									"end": 7302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7308,
									"end": 7497,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 7308,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7385,
									"end": 7417,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 7385,
									"end": 7417,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 7385,
									"end": 7417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7385,
									"end": 7417,
									"name": "tag",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 7385,
									"end": 7417,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7426,
									"end": 7491,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 7484,
									"end": 7490,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7476,
									"end": 7482,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7470,
									"end": 7474,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7426,
									"end": 7491,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 7426,
									"end": 7491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7426,
									"end": 7491,
									"name": "tag",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 7426,
									"end": 7491,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7361,
									"end": 7497,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7308,
									"end": 7497,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7308,
									"end": 7497,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7308,
									"end": 7497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7503,
									"end": 7689,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 7503,
									"end": 7689,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "tag",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7580,
									"end": 7583,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7573,
									"end": 7578,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7570,
									"end": 7584,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7634,
									"end": 7673,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 7671,
									"end": 7672,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7669,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7634,
									"end": 7673,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 7634,
									"end": 7673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7634,
									"end": 7673,
									"name": "tag",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 7634,
									"end": 7673,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7607,
									"end": 7608,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7600,
									"end": 7605,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7596,
									"end": 7609,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7587,
									"end": 7609,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7587,
									"end": 7609,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "tag",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7503,
									"end": 7689,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7503,
									"end": 7689,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7503,
									"end": 7689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7796,
									"end": 7798,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7791,
									"end": 7794,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7788,
									"end": 7799,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7830,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "185"
								},
								{
									"begin": 7862,
									"end": 7867,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7830,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 7830,
									"end": 7868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7830,
									"end": 7868,
									"name": "tag",
									"source": 12,
									"value": "185"
								},
								{
									"begin": 7830,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7914,
									"end": 7943,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 7932,
									"end": 7942,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7914,
									"end": 7943,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 7914,
									"end": 7943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7914,
									"end": 7943,
									"name": "tag",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 7914,
									"end": 7943,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7904,
									"end": 7912,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7900,
									"end": 7944,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8097,
									"end": 8099,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8085,
									"end": 8095,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8082,
									"end": 8100,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8118,
									"end": 8126,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8103,
									"end": 8126,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8103,
									"end": 8126,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "tag",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8141,
									"end": 8221,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 8197,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 8215,
									"end": 8218,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8197,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 8197,
									"end": 8219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8197,
									"end": 8219,
									"name": "tag",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 8197,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8187,
									"end": 8195,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8183,
									"end": 8220,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8170,
									"end": 8181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8141,
									"end": 8221,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 8141,
									"end": 8221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8141,
									"end": 8221,
									"name": "tag",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 8141,
									"end": 8221,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7800,
									"end": 8231,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7800,
									"end": 8231,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "tag",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7695,
									"end": 8238,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8298,
									"end": 8306,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8348,
									"end": 8353,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8342,
									"end": 8346,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8338,
									"end": 8354,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 8317,
									"end": 8354,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8317,
									"end": 8354,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8361,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8411,
									"end": 8417,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8444,
									"end": 8495,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 8492,
									"end": 8493,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8488,
									"end": 8494,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8480,
									"end": 8485,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8477,
									"end": 8478,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 8473,
									"end": 8486,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8444,
									"end": 8495,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 8444,
									"end": 8495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8444,
									"end": 8495,
									"name": "tag",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 8444,
									"end": 8495,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8440,
									"end": 8496,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8525,
									"end": 8529,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 8519,
									"end": 8523,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8515,
									"end": 8530,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8505,
									"end": 8530,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8505,
									"end": 8530,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8418,
									"end": 8536,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8367,
									"end": 8536,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8617,
									"end": 8621,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8763,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 8788,
									"end": 8791,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8782,
									"end": 8786,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8763,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 8763,
									"end": 8792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8763,
									"end": 8792,
									"name": "tag",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 8763,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8755,
									"end": 8792,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8755,
									"end": 8792,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8825,
									"end": 8828,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8822,
									"end": 8823,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8818,
									"end": 8829,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8812,
									"end": 8816,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8809,
									"end": 8830,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 8801,
									"end": 8830,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8801,
									"end": 8830,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8841,
									"end": 10236,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 8841,
									"end": 10236,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8958,
									"end": 8995,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 8991,
									"end": 8994,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8958,
									"end": 8995,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 8958,
									"end": 8995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8958,
									"end": 8995,
									"name": "tag",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 8958,
									"end": 8995,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9060,
									"end": 9078,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9052,
									"end": 9058,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9049,
									"end": 9079,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 9082,
									"end": 9100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "tag",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "tag",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9126,
									"end": 9164,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 9158,
									"end": 9162,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9152,
									"end": 9163,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 9126,
									"end": 9164,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 9126,
									"end": 9164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9126,
									"end": 9164,
									"name": "tag",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 9126,
									"end": 9164,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9211,
									"end": 9278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 9271,
									"end": 9277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9263,
									"end": 9269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9257,
									"end": 9261,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9211,
									"end": 9278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 9211,
									"end": 9278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9211,
									"end": 9278,
									"name": "tag",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 9211,
									"end": 9278,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9305,
									"end": 9306,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9329,
									"end": 9333,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9316,
									"end": 9333,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9316,
									"end": 9333,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9361,
									"end": 9363,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 9353,
									"end": 9359,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9350,
									"end": 9364,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 9378,
									"end": 9379,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 10035,
									"end": 10036,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10052,
									"end": 10058,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 10101,
									"end": 10110,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10096,
									"end": 10099,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 10092,
									"end": 10111,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10086,
									"end": 10112,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 10077,
									"end": 10112,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10077,
									"end": 10112,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "tag",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10152,
									"end": 10219,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 10212,
									"end": 10218,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 10205,
									"end": 10210,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10152,
									"end": 10219,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 10152,
									"end": 10219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10152,
									"end": 10219,
									"name": "tag",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 10152,
									"end": 10219,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10146,
									"end": 10150,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 10139,
									"end": 10220,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 10008,
									"end": 10230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "tag",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9425,
									"end": 9429,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 9421,
									"end": 9430,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 9413,
									"end": 9419,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9409,
									"end": 9431,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 9459,
									"end": 9496,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 9491,
									"end": 9495,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9459,
									"end": 9496,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 9459,
									"end": 9496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9459,
									"end": 9496,
									"name": "tag",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 9459,
									"end": 9496,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9518,
									"end": 9519,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "tag",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9546,
									"end": 9553,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9543,
									"end": 9544,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9540,
									"end": 9554,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9625,
									"end": 9634,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9620,
									"end": 9623,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 9616,
									"end": 9635,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9610,
									"end": 9636,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9608,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9595,
									"end": 9637,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 9676,
									"end": 9677,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 9668,
									"end": 9674,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9664,
									"end": 9678,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9654,
									"end": 9678,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9654,
									"end": 9678,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9723,
									"end": 9725,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9712,
									"end": 9721,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9708,
									"end": 9726,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9695,
									"end": 9726,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 9695,
									"end": 9726,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9569,
									"end": 9573,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9566,
									"end": 9567,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9562,
									"end": 9574,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9557,
									"end": 9574,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9557,
									"end": 9574,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "tag",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9768,
									"end": 9774,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9759,
									"end": 9766,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9756,
									"end": 9775,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "209"
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9826,
									"end": 9835,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9821,
									"end": 9824,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 9817,
									"end": 9836,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9811,
									"end": 9837,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9869,
									"end": 9917,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 9911,
									"end": 9915,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 9903,
									"end": 9909,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 9899,
									"end": 9916,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 9888,
									"end": 9897,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9869,
									"end": 9917,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 9869,
									"end": 9917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9869,
									"end": 9917,
									"name": "tag",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 9869,
									"end": 9917,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9861,
									"end": 9867,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9854,
									"end": 9918,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 9932,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "tag",
									"source": 12,
									"value": "209"
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9978,
									"end": 9979,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 9974,
									"end": 9975,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 9966,
									"end": 9972,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 9962,
									"end": 9976,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 9958,
									"end": 9980,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9952,
									"end": 9956,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 9945,
									"end": 9981,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 9380,
									"end": 9991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9380,
									"end": 9991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9380,
									"end": 9991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "tag",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8933,
									"end": 10236,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8933,
									"end": 10236,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8933,
									"end": 10236,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8841,
									"end": 10236,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8841,
									"end": 10236,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8841,
									"end": 10236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10242,
									"end": 10327,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 10242,
									"end": 10327,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10287,
									"end": 10294,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10316,
									"end": 10321,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10305,
									"end": 10321,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10305,
									"end": 10321,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10242,
									"end": 10327,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10242,
									"end": 10327,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10242,
									"end": 10327,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10242,
									"end": 10327,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10333,
									"end": 10491,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 10333,
									"end": 10491,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10391,
									"end": 10400,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10424,
									"end": 10485,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "213"
								},
								{
									"begin": 10442,
									"end": 10484,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 10451,
									"end": 10483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "215"
								},
								{
									"begin": 10477,
									"end": 10482,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10451,
									"end": 10483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 10451,
									"end": 10483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10451,
									"end": 10483,
									"name": "tag",
									"source": 12,
									"value": "215"
								},
								{
									"begin": 10451,
									"end": 10483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10442,
									"end": 10484,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 10442,
									"end": 10484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10442,
									"end": 10484,
									"name": "tag",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 10442,
									"end": 10484,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10424,
									"end": 10485,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 10424,
									"end": 10485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10424,
									"end": 10485,
									"name": "tag",
									"source": 12,
									"value": "213"
								},
								{
									"begin": 10424,
									"end": 10485,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10411,
									"end": 10485,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10411,
									"end": 10485,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10333,
									"end": 10491,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10333,
									"end": 10491,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10333,
									"end": 10491,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10333,
									"end": 10491,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10497,
									"end": 10644,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 10497,
									"end": 10644,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10592,
									"end": 10637,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "217"
								},
								{
									"begin": 10631,
									"end": 10636,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10592,
									"end": 10637,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 10592,
									"end": 10637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10592,
									"end": 10637,
									"name": "tag",
									"source": 12,
									"value": "217"
								},
								{
									"begin": 10592,
									"end": 10637,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10587,
									"end": 10590,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10580,
									"end": 10638,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 10497,
									"end": 10644,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10497,
									"end": 10644,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10497,
									"end": 10644,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10650,
									"end": 10888,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 10650,
									"end": 10888,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10751,
									"end": 10755,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10789,
									"end": 10791,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10778,
									"end": 10787,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10774,
									"end": 10792,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10766,
									"end": 10792,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10766,
									"end": 10792,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10802,
									"end": 10881,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 10878,
									"end": 10879,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10867,
									"end": 10876,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10863,
									"end": 10880,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10854,
									"end": 10860,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10802,
									"end": 10881,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 10802,
									"end": 10881,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10802,
									"end": 10881,
									"name": "tag",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 10802,
									"end": 10881,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10650,
									"end": 10888,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10650,
									"end": 10888,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10650,
									"end": 10888,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10650,
									"end": 10888,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10650,
									"end": 10888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10894,
									"end": 11063,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 10894,
									"end": 11063,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10978,
									"end": 10989,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11012,
									"end": 11018,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11007,
									"end": 11010,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11000,
									"end": 11019,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 11052,
									"end": 11056,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 11047,
									"end": 11050,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11043,
									"end": 11057,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11028,
									"end": 11057,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11028,
									"end": 11057,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10894,
									"end": 11063,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10894,
									"end": 11063,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10894,
									"end": 11063,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10894,
									"end": 11063,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10894,
									"end": 11063,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11069,
									"end": 11246,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 11069,
									"end": 11246,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11209,
									"end": 11238,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C69642062656E656669636961727920616464726573730000000000"
								},
								{
									"begin": 11205,
									"end": 11206,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11197,
									"end": 11203,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11193,
									"end": 11207,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11186,
									"end": 11239,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 11069,
									"end": 11246,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11069,
									"end": 11246,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11252,
									"end": 11618,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 11252,
									"end": 11618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11394,
									"end": 11397,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11415,
									"end": 11482,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "223"
								},
								{
									"begin": 11479,
									"end": 11481,
									"name": "PUSH",
									"source": 12,
									"value": "1B"
								},
								{
									"begin": 11474,
									"end": 11477,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11415,
									"end": 11482,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 11415,
									"end": 11482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11415,
									"end": 11482,
									"name": "tag",
									"source": 12,
									"value": "223"
								},
								{
									"begin": 11415,
									"end": 11482,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11408,
									"end": 11482,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11408,
									"end": 11482,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11491,
									"end": 11584,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 11580,
									"end": 11583,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11491,
									"end": 11584,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 11491,
									"end": 11584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11491,
									"end": 11584,
									"name": "tag",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 11491,
									"end": 11584,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11609,
									"end": 11611,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 11604,
									"end": 11607,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11600,
									"end": 11612,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11593,
									"end": 11612,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11593,
									"end": 11612,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11252,
									"end": 11618,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11252,
									"end": 11618,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11252,
									"end": 11618,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11252,
									"end": 11618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11624,
									"end": 12043,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 11624,
									"end": 12043,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11790,
									"end": 11794,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11828,
									"end": 11830,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 11817,
									"end": 11826,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11813,
									"end": 11831,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11805,
									"end": 11831,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11805,
									"end": 11831,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11877,
									"end": 11886,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11871,
									"end": 11875,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11867,
									"end": 11887,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 11863,
									"end": 11864,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11852,
									"end": 11861,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11848,
									"end": 11865,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11841,
									"end": 11888,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 11905,
									"end": 12036,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 12031,
									"end": 12035,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11905,
									"end": 12036,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 11905,
									"end": 12036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11905,
									"end": 12036,
									"name": "tag",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 11905,
									"end": 12036,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11897,
									"end": 12036,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11897,
									"end": 12036,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11624,
									"end": 12043,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11624,
									"end": 12043,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11624,
									"end": 12043,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11624,
									"end": 12043,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1182"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 7092,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f62b535c09414dc1ba0c918005917eb08c19d29319220f7ce4414627587dd4a364736f6c634300081a0033",
									".code": [
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "D5DD4C02"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "ED831FA4"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "ED831FA4"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "F2F2A8EF"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "F9C8DEC3"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "FB4900FC"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "D5DD4C02"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "D8326A18"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "D9D61655"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "A9EB3F99"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "B4C7F1ED"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "983B2D56"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "2C4E722E"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "565A2E2C"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "629044D2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "2C4E722E"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "355274EA"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "263719C1"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "5AB421D"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 438,
											"end": 7092,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2824,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2824,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3609,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 3609,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 3609,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 4589,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 4589,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 4589,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 2059,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2059,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1951,
											"end": 2049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1951,
											"end": 2049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2239,
											"end": 2331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2239,
											"end": 2331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 6725,
											"end": 6825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 6725,
											"end": 6825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2695,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2695,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3227,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3227,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 3227,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 6967,
											"end": 7090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 6967,
											"end": 7090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 6499,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 6499,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 6499,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 509,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 509,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 4976,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 4976,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 5116,
											"end": 5223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5116,
											"end": 5223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 6835,
											"end": 6957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 6835,
											"end": 6957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 6835,
											"end": 6957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 5639,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5639,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 6621,
											"end": 6715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 6621,
											"end": 6715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2509,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2509,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 577,
											"end": 633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 577,
											"end": 633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 5233,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 5233,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 2953,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2954,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2935,
											"end": 2954,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2935,
											"end": 2940,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2935,
											"end": 2954,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2935,
											"end": 2954,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2935,
											"end": 2954,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 2927,
											"end": 2982,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2927,
											"end": 2982,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3009,
											"end": 3010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3006,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3000,
											"end": 3010,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 2992,
											"end": 3029,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2992,
											"end": 3029,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3067,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3079,
											"end": 3084,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3076,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3070,
											"end": 3084,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3084,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 3070,
											"end": 3084,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3084,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3070,
											"end": 3084,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3094,
											"end": 3119,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 3100,
											"end": 3105,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3118,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3094,
											"end": 3099,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3094,
											"end": 3119,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3094,
											"end": 3119,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 3094,
											"end": 3119,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2917,
											"end": 3126,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 3723,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 3759,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 3723,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3769,
											"end": 3781,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3811,
											"end": 3820,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3822,
											"end": 3828,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 3784,
											"end": 3829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3829,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 3784,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3769,
											"end": 3829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3769,
											"end": 3829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 3839,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3879,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 3839,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3903,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4712,
											"end": 4737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4712,
											"end": 4723,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4712,
											"end": 4737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4712,
											"end": 4737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4712,
											"end": 4737,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 4704,
											"end": 4775,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 4704,
											"end": 4775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4794,
											"end": 4821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 4800,
											"end": 4811,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4820,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4794,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 4794,
											"end": 4821,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4794,
											"end": 4821,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 4794,
											"end": 4821,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4870,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 4854,
											"end": 4865,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 4853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 4844,
											"end": 4866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 4866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 4844,
											"end": 4866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 4871,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 4840,
											"end": 4930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4914,
											"end": 4919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4899,
											"end": 4910,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4919,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 4840,
											"end": 4930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4955,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4948,
											"end": 4959,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4948,
											"end": 4959,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2096,
											"end": 2103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2115,
											"end": 2127,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2115,
											"end": 2127,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2009,
											"end": 2014,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2042,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2042,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 997,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1182"
										},
										{
											"begin": 986,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 986,
											"end": 997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2286,
											"end": 2293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2305,
											"end": 2324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2305,
											"end": 2324,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6802,
											"end": 6818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6818,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6818,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6795,
											"end": 6818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6795,
											"end": 6818,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2197,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 2229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2411,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2807,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 547,
											"end": 571,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2797,
											"end": 2806,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2783,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2773,
											"end": 2807,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2807,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2773,
											"end": 2807,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2807,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 2814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3309,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3339,
											"end": 3349,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3321,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 3321,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3321,
											"end": 3361,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3321,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3371,
											"end": 3383,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3412,
											"end": 3418,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3386,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 3386,
											"end": 3419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3386,
											"end": 3419,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3386,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3371,
											"end": 3419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3371,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 3451,
											"end": 3461,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3472,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 3429,
											"end": 3473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3473,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 3429,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3490,
											"end": 3497,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7052,
											"end": 7063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7075,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6559,
											"end": 6563,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6590,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6603,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6582,
											"end": 6604,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6575,
											"end": 6604,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6575,
											"end": 6604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6499,
											"end": 6611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 509,
											"end": 571,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 509,
											"end": 571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5099,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5091,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 5076,
											"end": 5091,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5099,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5201,
											"end": 5216,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5216,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5216,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6902,
											"end": 6906,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6936,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6937,
											"end": 6949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6925,
											"end": 6950,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6918,
											"end": 6950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6918,
											"end": 6950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "DB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5746,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5733,
											"end": 5747,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 5725,
											"end": 5769,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 5725,
											"end": 5769,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5804,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5788,
											"end": 5805,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5805,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 5779,
											"end": 5855,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 5779,
											"end": 5855,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5884,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 5939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 5930,
											"end": 5946,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5930,
											"end": 5946,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5930,
											"end": 5946,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5930,
											"end": 5946,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5921,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5926,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5927,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5906,
											"end": 5946,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 6021,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 6021,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 5902,
											"end": 6021,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6006,
											"end": 6010,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5970,
											"end": 6010,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 5979,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 5980,
											"end": 5995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6000,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 5970,
											"end": 6002,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5970,
											"end": 6002,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5970,
											"end": 6010,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 6010,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5962,
											"end": 6010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5962,
											"end": 6010,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5902,
											"end": 6021,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 5902,
											"end": 6021,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6043,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 6030,
											"end": 6074,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6030,
											"end": 6074,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6093,
											"end": 6110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6132,
											"end": 6133,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6113,
											"end": 6122,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6113,
											"end": 6129,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6129,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6129,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6129,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6133,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 6113,
											"end": 6133,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6133,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6133,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 6113,
											"end": 6133,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6133,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 6113,
											"end": 6133,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6093,
											"end": 6133,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6093,
											"end": 6133,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6172,
											"end": 6181,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6167,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6168,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6181,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6338,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 6143,
											"end": 6338,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6241,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6242,
											"end": 6251,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 6232,
											"end": 6252,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6232,
											"end": 6252,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6206,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6207,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6227,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6228,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 6197,
											"end": 6229,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6252,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6327,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6281,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6291,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6292,
											"end": 6301,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 6282,
											"end": 6302,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6282,
											"end": 6302,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6303,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6327,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6327,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6327,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6327,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6338,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 6143,
											"end": 6338,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6356,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6347,
											"end": 6362,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6362,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6398,
											"end": 6403,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6394,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6381,
											"end": 6403,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6437,
											"end": 6438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6433,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6434,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6438,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6438,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6438,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6438,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6477,
											"end": 6481,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8CE60EC723C7FCC3C3F6B1FFAA7B814B03DF348C312BB6E41929417162565664"
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6482,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 5715,
											"end": 6489,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5715,
											"end": 6489,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 6489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6664,
											"end": 6680,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6699,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6621,
											"end": 6715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2411,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 2411,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2611,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2581,
											"end": 2642,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 2581,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2677,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2652,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2678,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "DB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7"
										},
										{
											"begin": 577,
											"end": 633,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 577,
											"end": 633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "DB11624602202C396FA347735A55E345A3AEB3E60F8885E1A71F1BF8D5886DB7"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5341,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5342,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5324,
											"end": 5342,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5328,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5342,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5324,
											"end": 5342,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 5316,
											"end": 5362,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 5316,
											"end": 5362,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5390,
											"end": 5394,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5381,
											"end": 5395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5380,
											"end": 5395,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 5372,
											"end": 5421,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 5372,
											"end": 5421,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5457,
											"end": 5461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5440,
											"end": 5448,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5453,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5461,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5480,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 5486,
											"end": 5490,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5544,
											"end": 5545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5525,
											"end": 5534,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 5525,
											"end": 5541,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5541,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5541,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5541,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5545,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 5525,
											"end": 5545,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5545,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5545,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 5525,
											"end": 5545,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5545,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 5525,
											"end": 5545,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D"
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5521,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5522,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5545,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5545,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5545,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5575,
											"end": 5580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5571,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5555,
											"end": 5580,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5617,
											"end": 5621,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E82ACF77C2686315E6AEAA43CCEC710936B819CB5D01A31FADB2BF2A928C9342"
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5604,
											"end": 5622,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4317,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 3998,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4107,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 4083,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4083,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4214,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4206,
											"end": 4222,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 4198,
											"end": 4246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 4198,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4272,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4264,
											"end": 4283,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 4256,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 4256,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3998,
											"end": 4317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3998,
											"end": 4317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3998,
											"end": 4317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4579,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 4406,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4490,
											"end": 4501,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4511,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4512,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4490,
											"end": 4519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4571,
											"end": 4572,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 4561,
											"end": 4567,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 4551,
											"end": 4568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4572,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4540,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4529,
											"end": 4572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4579,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4579,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6830,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 6951,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6951,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 1167,
											"end": 1171,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1175,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 1153,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1198,
											"end": 1202,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1232,
											"end": 1249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1252,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1288,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1301,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 6,
											"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 1364,
											"end": 1399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2025,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 2512,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2682,
											"end": 2691,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2678,
											"end": 2700,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 2657,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2603,
											"end": 2720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 2785,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2953,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2931,
											"end": 2953,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2931,
											"end": 2953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3050,
											"end": 3061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 3128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3129,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3100,
											"end": 3129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3100,
											"end": 3129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3225,
											"end": 3228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 3271,
											"end": 3272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3268,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3257,
											"end": 3260,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3253,
											"end": 3269,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3246,
											"end": 3273,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3374,
											"end": 3381,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3369,
											"end": 3371,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3362,
											"end": 3367,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3372,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3354,
											"end": 3382,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3482,
											"end": 3485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 3543,
											"end": 3548,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 3510,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3627,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 3565,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3636,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 3565,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3558,
											"end": 3636,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3558,
											"end": 3636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3645,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 3701,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 3695,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3680,
											"end": 3696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3645,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3645,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3645,
											"end": 3710,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 3645,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 3757,
											"end": 3763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3735,
											"end": 3764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 3764,
											"name": "tag",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 3735,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3730,
											"end": 3733,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3726,
											"end": 3765,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3765,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 3894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3930,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3905,
											"end": 3931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3905,
											"end": 3931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3971,
											"end": 3975,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 3964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3948,
											"end": 3965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3941,
											"end": 3988,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 4078,
											"end": 4082,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4075,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 4005,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4083,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 4005,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4083,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3777,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 6247,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "tag",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 6392,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "tag",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 6520,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6465,
											"end": 6583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6676,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 6771,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "tag",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6759,
											"end": 6794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6995,
											"end": 7012,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 6946,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "tag",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7144,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 7026,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 7131,
											"end": 7136,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 7113,
											"end": 7137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7137,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 7113,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7108,
											"end": 7111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7372,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 7150,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7243,
											"end": 7247,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7281,
											"end": 7283,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7270,
											"end": 7279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7284,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7284,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 7362,
											"end": 7363,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7360,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7347,
											"end": 7364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7338,
											"end": 7344,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 7294,
											"end": 7365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7365,
											"name": "tag",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 7294,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7372,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7372,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7707,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 7378,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7465,
											"end": 7472,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7461,
											"end": 7484,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7489,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 7492,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "tag",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "tag",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 7637,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "tag",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7707,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7707,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 7817,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 7713,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7758,
											"end": 7765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 7805,
											"end": 7810,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7787,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 7787,
											"end": 7811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7787,
											"end": 7811,
											"name": "tag",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 7787,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7776,
											"end": 7811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7776,
											"end": 7811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 7817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 7817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 7817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 7817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7823,
											"end": 7965,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 7823,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7926,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 7952,
											"end": 7957,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7926,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 7926,
											"end": 7958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7926,
											"end": 7958,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 7926,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7921,
											"end": 7924,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7914,
											"end": 7959,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7823,
											"end": 7965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7823,
											"end": 7965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7823,
											"end": 7965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8225,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 7971,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8120,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8107,
											"end": 8116,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8121,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8131,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8213,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8200,
											"end": 8217,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8197,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8131,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 8131,
											"end": 8218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8131,
											"end": 8218,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 8131,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8225,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8225,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8347,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 8231,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8301,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 8316,
											"end": 8321,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8301,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 8301,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8301,
											"end": 8322,
											"name": "tag",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 8301,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8299,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8291,
											"end": 8323,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8281,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 8281,
											"end": 8341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8334,
											"end": 8335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8327,
											"end": 8339,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8281,
											"end": 8341,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 8281,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8486,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 8353,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8396,
											"end": 8401,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8440,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8421,
											"end": 8441,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8412,
											"end": 8441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8412,
											"end": 8441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 8474,
											"end": 8479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 8450,
											"end": 8480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8480,
											"name": "tag",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 8450,
											"end": 8480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8486,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8492,
											"end": 8815,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 8492,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8548,
											"end": 8554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8599,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8585,
											"end": 8594,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8576,
											"end": 8583,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8572,
											"end": 8595,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8568,
											"end": 8600,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8603,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 8603,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 8603,
											"end": 8682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8603,
											"end": 8682,
											"name": "tag",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 8603,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 8565,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8723,
											"end": 8724,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 8790,
											"end": 8797,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8781,
											"end": 8787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8770,
											"end": 8779,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 8788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 8748,
											"end": 8798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8738,
											"end": 8798,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8738,
											"end": 8798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8694,
											"end": 8808,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8492,
											"end": 8815,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8492,
											"end": 8815,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8492,
											"end": 8815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8492,
											"end": 8815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8492,
											"end": 8815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 9295,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 8821,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8897,
											"end": 8903,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8946,
											"end": 8948,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8934,
											"end": 8943,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 8932,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8921,
											"end": 8944,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8917,
											"end": 8949,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9033,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 8914,
											"end": 9033,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 8952,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 8952,
											"end": 9031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9031,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 8952,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9033,
											"name": "tag",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 8914,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9072,
											"end": 9073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 9142,
											"end": 9149,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9133,
											"end": 9139,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9131,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 9097,
											"end": 9150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9097,
											"end": 9150,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 9097,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9087,
											"end": 9150,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9087,
											"end": 9150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9043,
											"end": 9160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9199,
											"end": 9201,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9225,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 9270,
											"end": 9277,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9261,
											"end": 9267,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9250,
											"end": 9259,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9246,
											"end": 9268,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9225,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 9225,
											"end": 9278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9225,
											"end": 9278,
											"name": "tag",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 9225,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9278,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9170,
											"end": 9288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 9295,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 9295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 9295,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 9295,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 9295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 9295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9301,
											"end": 9415,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 9301,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9374,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9408,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9408,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9301,
											"end": 9415,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9301,
											"end": 9415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9301,
											"end": 9415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9301,
											"end": 9415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9605,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 9421,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9520,
											"end": 9531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9554,
											"end": 9560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9549,
											"end": 9552,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9542,
											"end": 9561,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9594,
											"end": 9598,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9592,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9585,
											"end": 9599,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9570,
											"end": 9599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9570,
											"end": 9599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9605,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9611,
											"end": 9743,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 9611,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9693,
											"end": 9704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9693,
											"end": 9704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9731,
											"end": 9735,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9729,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9722,
											"end": 9736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9611,
											"end": 9743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9611,
											"end": 9743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9611,
											"end": 9743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9611,
											"end": 9743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9749,
											"end": 9857,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 9749,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9826,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 9844,
											"end": 9849,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9826,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 9826,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9826,
											"end": 9850,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 9826,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9821,
											"end": 9824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9814,
											"end": 9851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9749,
											"end": 9857,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9749,
											"end": 9857,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9749,
											"end": 9857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 10042,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 9863,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9932,
											"end": 9942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9953,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 9995,
											"end": 9998,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9987,
											"end": 9993,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9953,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 9953,
											"end": 9999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9953,
											"end": 9999,
											"name": "tag",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 9953,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10031,
											"end": 10035,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10026,
											"end": 10029,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10022,
											"end": 10036,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10008,
											"end": 10036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10008,
											"end": 10036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 10042,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 10042,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 10042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 10042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 10042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10048,
											"end": 10161,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10048,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10154,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10148,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10141,
											"end": 10155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10133,
											"end": 10155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10133,
											"end": 10155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10048,
											"end": 10161,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10048,
											"end": 10161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10048,
											"end": 10161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10048,
											"end": 10161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 10929,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 10197,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10316,
											"end": 10319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10345,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 10393,
											"end": 10398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10345,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 10345,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10345,
											"end": 10399,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 10345,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10415,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 10494,
											"end": 10500,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10492,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10415,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 10415,
											"end": 10501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10415,
											"end": 10501,
											"name": "tag",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 10415,
											"end": 10501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10408,
											"end": 10501,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10408,
											"end": 10501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10525,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 10575,
											"end": 10580,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10525,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 10525,
											"end": 10581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10525,
											"end": 10581,
											"name": "tag",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 10525,
											"end": 10581,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 10611,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10635,
											"end": 10636,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10620,
											"end": 10904,
											"name": "tag",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 10620,
											"end": 10904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10645,
											"end": 10651,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10642,
											"end": 10643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10639,
											"end": 10652,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10904,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 10620,
											"end": 10904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 10728,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 10807,
											"end": 10810,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10792,
											"end": 10805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 10748,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10811,
											"name": "tag",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 10748,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10741,
											"end": 10811,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 10741,
											"end": 10811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10834,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 10887,
											"end": 10893,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10834,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10834,
											"end": 10894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10834,
											"end": 10894,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 10834,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10824,
											"end": 10894,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10824,
											"end": 10894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10680,
											"end": 10904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10667,
											"end": 10668,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10664,
											"end": 10665,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10660,
											"end": 10669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10655,
											"end": 10669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10655,
											"end": 10669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 10620,
											"end": 10904,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10904,
											"name": "tag",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 10620,
											"end": 10904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10624,
											"end": 10638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10920,
											"end": 10923,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10923,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10321,
											"end": 10929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10321,
											"end": 10929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10321,
											"end": 10929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 10929,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 10929,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 10929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 10929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 10929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10935,
											"end": 11308,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 10935,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11078,
											"end": 11082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11116,
											"end": 11118,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11105,
											"end": 11114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11093,
											"end": 11119,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11093,
											"end": 11119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11165,
											"end": 11174,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11159,
											"end": 11163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11155,
											"end": 11175,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11152,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11149,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11136,
											"end": 11153,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11193,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 11296,
											"end": 11300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11293,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11193,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 11193,
											"end": 11301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11193,
											"end": 11301,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 11193,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11185,
											"end": 11301,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11185,
											"end": 11301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10935,
											"end": 11308,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10935,
											"end": 11308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10935,
											"end": 11308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10935,
											"end": 11308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10935,
											"end": 11308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11314,
											"end": 11487,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 11314,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11454,
											"end": 11479,
											"name": "PUSH",
											"source": 12,
											"value": "62757965722069732061207A65726F2061646472657373000000000000000000"
										},
										{
											"begin": 11450,
											"end": 11451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11442,
											"end": 11448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11438,
											"end": 11452,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11431,
											"end": 11480,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11314,
											"end": 11487,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11314,
											"end": 11487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11859,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 11493,
											"end": 11859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11635,
											"end": 11638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11656,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 11720,
											"end": 11722,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 11715,
											"end": 11718,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11656,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 11656,
											"end": 11723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11656,
											"end": 11723,
											"name": "tag",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 11656,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11649,
											"end": 11723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11649,
											"end": 11723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 11821,
											"end": 11824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 11732,
											"end": 11825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11825,
											"name": "tag",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 11732,
											"end": 11825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11850,
											"end": 11852,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11845,
											"end": 11848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11841,
											"end": 11853,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11834,
											"end": 11853,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11834,
											"end": 11853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11859,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11859,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11865,
											"end": 12284,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 11865,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12031,
											"end": 12035,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12069,
											"end": 12071,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12058,
											"end": 12067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12054,
											"end": 12072,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12046,
											"end": 12072,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12046,
											"end": 12072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12127,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12116,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12108,
											"end": 12128,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12104,
											"end": 12105,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12089,
											"end": 12106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12082,
											"end": 12129,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 12272,
											"end": 12276,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 12146,
											"end": 12277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12277,
											"name": "tag",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 12146,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12277,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11865,
											"end": 12284,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11865,
											"end": 12284,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11865,
											"end": 12284,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11865,
											"end": 12284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12290,
											"end": 12454,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 12290,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12430,
											"end": 12446,
											"name": "PUSH",
											"source": 12,
											"value": "776569416D6F756E742069732030000000000000000000000000000000000000"
										},
										{
											"begin": 12426,
											"end": 12427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12418,
											"end": 12424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12407,
											"end": 12447,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12290,
											"end": 12454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12290,
											"end": 12454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12460,
											"end": 12826,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 12460,
											"end": 12826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12602,
											"end": 12605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12623,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 12687,
											"end": 12689,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 12682,
											"end": 12685,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12623,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 12623,
											"end": 12690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12623,
											"end": 12690,
											"name": "tag",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 12623,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12616,
											"end": 12690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12616,
											"end": 12690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 12788,
											"end": 12791,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 12699,
											"end": 12792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12792,
											"name": "tag",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 12699,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12817,
											"end": 12819,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12812,
											"end": 12815,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12808,
											"end": 12820,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12460,
											"end": 12826,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12460,
											"end": 12826,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12460,
											"end": 12826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12460,
											"end": 12826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13251,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 12832,
											"end": 13251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12998,
											"end": 13002,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13038,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13025,
											"end": 13034,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13013,
											"end": 13039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13013,
											"end": 13039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13085,
											"end": 13094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13079,
											"end": 13083,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13095,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13071,
											"end": 13072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13060,
											"end": 13069,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13056,
											"end": 13073,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13049,
											"end": 13096,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13113,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 13239,
											"end": 13243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13113,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 13113,
											"end": 13244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13113,
											"end": 13244,
											"name": "tag",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 13113,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13244,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13251,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 13251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13257,
											"end": 13437,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 13257,
											"end": 13437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13305,
											"end": 13382,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13302,
											"end": 13303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13295,
											"end": 13383,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13402,
											"end": 13406,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 13399,
											"end": 13400,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13392,
											"end": 13407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13426,
											"end": 13430,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13423,
											"end": 13424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13416,
											"end": 13431,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 13853,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 13443,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13483,
											"end": 13490,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 13524,
											"end": 13525,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 13506,
											"end": 13526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "tag",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13501,
											"end": 13526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13501,
											"end": 13526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 13558,
											"end": 13559,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 13540,
											"end": 13560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13560,
											"name": "tag",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 13540,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13595,
											"end": 13596,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13592,
											"end": 13593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13588,
											"end": 13597,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 13617,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 13635,
											"end": 13646,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13617,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 13617,
											"end": 13647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13617,
											"end": 13647,
											"name": "tag",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 13617,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13606,
											"end": 13647,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13606,
											"end": 13647,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13796,
											"end": 13797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13787,
											"end": 13794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13783,
											"end": 13798,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13780,
											"end": 13781,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13777,
											"end": 13799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13757,
											"end": 13758,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13750,
											"end": 13759,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13730,
											"end": 13813,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 13707,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 13707,
											"end": 13846,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13826,
											"end": 13844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 13826,
											"end": 13844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 13826,
											"end": 13844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13826,
											"end": 13844,
											"name": "tag",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 13826,
											"end": 13844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13707,
											"end": 13846,
											"name": "tag",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 13707,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13491,
											"end": 13853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 13853,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 13853,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 13853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 13853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 13853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13859,
											"end": 14039,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 13859,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13907,
											"end": 13984,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13904,
											"end": 13905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13897,
											"end": 13985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14004,
											"end": 14008,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 14001,
											"end": 14002,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13994,
											"end": 14009,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14032,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14025,
											"end": 14026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14018,
											"end": 14033,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14365,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 14045,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14089,
											"end": 14095,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14126,
											"end": 14127,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 14120,
											"end": 14124,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14128,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 14106,
											"end": 14128,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14106,
											"end": 14128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14173,
											"end": 14174,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14167,
											"end": 14171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14163,
											"end": 14175,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14184,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "703"
										},
										{
											"begin": 14184,
											"end": 14265,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14250,
											"end": 14254,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 14242,
											"end": 14248,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14255,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14228,
											"end": 14255,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14228,
											"end": 14255,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14184,
											"end": 14265,
											"name": "tag",
											"source": 12,
											"value": "703"
										},
										{
											"begin": 14184,
											"end": 14265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14312,
											"end": 14314,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14304,
											"end": 14310,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14301,
											"end": 14315,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14278,
											"end": 14316,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14275,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 14275,
											"end": 14359,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14331,
											"end": 14349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "tag",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14275,
											"end": 14359,
											"name": "tag",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 14275,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14365,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14365,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14365,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14365,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14045,
											"end": 14365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14371,
											"end": 14591,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 14371,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14511,
											"end": 14545,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 14507,
											"end": 14508,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14499,
											"end": 14505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14495,
											"end": 14509,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14488,
											"end": 14546,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14580,
											"end": 14583,
											"name": "PUSH",
											"source": 12,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14575,
											"end": 14577,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14567,
											"end": 14573,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14556,
											"end": 14584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14371,
											"end": 14591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14371,
											"end": 14591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14739,
											"end": 14742,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "708"
										},
										{
											"begin": 14824,
											"end": 14826,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 14819,
											"end": 14822,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 14760,
											"end": 14827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "tag",
											"source": 12,
											"value": "708"
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14827,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14836,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 14925,
											"end": 14928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14836,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 14836,
											"end": 14929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14836,
											"end": 14929,
											"name": "tag",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 14836,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14954,
											"end": 14956,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14949,
											"end": 14952,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14945,
											"end": 14957,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14938,
											"end": 14957,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14938,
											"end": 14957,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14597,
											"end": 14963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15135,
											"end": 15139,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15173,
											"end": 15175,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15162,
											"end": 15171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15158,
											"end": 15176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15150,
											"end": 15176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15150,
											"end": 15176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15222,
											"end": 15231,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 15220,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15212,
											"end": 15232,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15208,
											"end": 15209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15206,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15193,
											"end": 15210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15186,
											"end": 15233,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15250,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "711"
										},
										{
											"begin": 15376,
											"end": 15380,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15250,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 15250,
											"end": 15381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15250,
											"end": 15381,
											"name": "tag",
											"source": 12,
											"value": "711"
										},
										{
											"begin": 15250,
											"end": 15381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15242,
											"end": 15381,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15242,
											"end": 15381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15618,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 15394,
											"end": 15618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15534,
											"end": 15568,
											"name": "PUSH",
											"source": 12,
											"value": "4F6E6C7920746865204F776E65722063616E2063616C6C20746869732066756E"
										},
										{
											"begin": 15530,
											"end": 15531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15522,
											"end": 15528,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15511,
											"end": 15569,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15603,
											"end": 15610,
											"name": "PUSH",
											"source": 12,
											"value": "6374696F6E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15598,
											"end": 15600,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15590,
											"end": 15596,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15586,
											"end": 15601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15579,
											"end": 15611,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15990,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 15624,
											"end": 15990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15766,
											"end": 15769,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15787,
											"end": 15854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "714"
										},
										{
											"begin": 15851,
											"end": 15853,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 15846,
											"end": 15849,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15787,
											"end": 15854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 15787,
											"end": 15854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15787,
											"end": 15854,
											"name": "tag",
											"source": 12,
											"value": "714"
										},
										{
											"begin": 15787,
											"end": 15854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15780,
											"end": 15854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15780,
											"end": 15854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15863,
											"end": 15956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "715"
										},
										{
											"begin": 15952,
											"end": 15955,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15863,
											"end": 15956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 15863,
											"end": 15956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15863,
											"end": 15956,
											"name": "tag",
											"source": 12,
											"value": "715"
										},
										{
											"begin": 15863,
											"end": 15956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15981,
											"end": 15983,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15976,
											"end": 15979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15972,
											"end": 15984,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15965,
											"end": 15984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15965,
											"end": 15984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15996,
											"end": 16415,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 15996,
											"end": 16415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16162,
											"end": 16166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16200,
											"end": 16202,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16189,
											"end": 16198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16185,
											"end": 16203,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16177,
											"end": 16203,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16177,
											"end": 16203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16249,
											"end": 16258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16243,
											"end": 16247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16239,
											"end": 16259,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16235,
											"end": 16236,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16224,
											"end": 16233,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16220,
											"end": 16237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16213,
											"end": 16260,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16277,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "717"
										},
										{
											"begin": 16403,
											"end": 16407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16277,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 16277,
											"end": 16408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16277,
											"end": 16408,
											"name": "tag",
											"source": 12,
											"value": "717"
										},
										{
											"begin": 16277,
											"end": 16408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16269,
											"end": 16408,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16269,
											"end": 16408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15996,
											"end": 16415,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15996,
											"end": 16415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15996,
											"end": 16415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15996,
											"end": 16415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16588,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16421,
											"end": 16588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16561,
											"end": 16580,
											"name": "PUSH",
											"source": 12,
											"value": "55736572206973206E6F74204B59436564000000000000000000000000000000"
										},
										{
											"begin": 16557,
											"end": 16558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16549,
											"end": 16555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16545,
											"end": 16559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16538,
											"end": 16581,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16960,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 16594,
											"end": 16960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16736,
											"end": 16739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16757,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "720"
										},
										{
											"begin": 16821,
											"end": 16823,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 16816,
											"end": 16819,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16757,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 16757,
											"end": 16824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16757,
											"end": 16824,
											"name": "tag",
											"source": 12,
											"value": "720"
										},
										{
											"begin": 16757,
											"end": 16824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16750,
											"end": 16824,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16750,
											"end": 16824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16833,
											"end": 16926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "721"
										},
										{
											"begin": 16922,
											"end": 16925,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16833,
											"end": 16926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16833,
											"end": 16926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16833,
											"end": 16926,
											"name": "tag",
											"source": 12,
											"value": "721"
										},
										{
											"begin": 16833,
											"end": 16926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16951,
											"end": 16953,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16946,
											"end": 16949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16942,
											"end": 16954,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16935,
											"end": 16954,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16935,
											"end": 16954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16960,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16960,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16966,
											"end": 17385,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 16966,
											"end": 17385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17132,
											"end": 17136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17170,
											"end": 17172,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17159,
											"end": 17168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17155,
											"end": 17173,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17147,
											"end": 17173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17147,
											"end": 17173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17219,
											"end": 17228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17213,
											"end": 17217,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17209,
											"end": 17229,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17205,
											"end": 17206,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17194,
											"end": 17203,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17190,
											"end": 17207,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17183,
											"end": 17230,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17247,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "723"
										},
										{
											"begin": 17373,
											"end": 17377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17247,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 17247,
											"end": 17378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17247,
											"end": 17378,
											"name": "tag",
											"source": 12,
											"value": "723"
										},
										{
											"begin": 17247,
											"end": 17378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17239,
											"end": 17378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17239,
											"end": 17378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16966,
											"end": 17385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16966,
											"end": 17385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16966,
											"end": 17385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16966,
											"end": 17385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17623,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 17391,
											"end": 17623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17531,
											"end": 17565,
											"name": "PUSH",
											"source": 12,
											"value": "55736572206F776E7320746F6B656E732C2063616E6E6F742072656D6F766520"
										},
										{
											"begin": 17527,
											"end": 17528,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17519,
											"end": 17525,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17515,
											"end": 17529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17508,
											"end": 17566,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17600,
											"end": 17615,
											"name": "PUSH",
											"source": 12,
											"value": "66726F6D204B5943206C69737400000000000000000000000000000000000000"
										},
										{
											"begin": 17595,
											"end": 17597,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17587,
											"end": 17593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17583,
											"end": 17598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17576,
											"end": 17616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17629,
											"end": 17995,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 17629,
											"end": 17995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17771,
											"end": 17774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17792,
											"end": 17859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 17856,
											"end": 17858,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 17851,
											"end": 17854,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17792,
											"end": 17859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 17792,
											"end": 17859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17792,
											"end": 17859,
											"name": "tag",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 17792,
											"end": 17859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17785,
											"end": 17859,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17785,
											"end": 17859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17868,
											"end": 17961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "727"
										},
										{
											"begin": 17957,
											"end": 17960,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17868,
											"end": 17961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 17868,
											"end": 17961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17868,
											"end": 17961,
											"name": "tag",
											"source": 12,
											"value": "727"
										},
										{
											"begin": 17868,
											"end": 17961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17986,
											"end": 17988,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17981,
											"end": 17984,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17977,
											"end": 17989,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17970,
											"end": 17989,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17970,
											"end": 17989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17629,
											"end": 17995,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17629,
											"end": 17995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17629,
											"end": 17995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17629,
											"end": 17995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18001,
											"end": 18420,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 18001,
											"end": 18420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18167,
											"end": 18171,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18205,
											"end": 18207,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18194,
											"end": 18203,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18190,
											"end": 18208,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18208,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18254,
											"end": 18263,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18248,
											"end": 18252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18244,
											"end": 18264,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18240,
											"end": 18241,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18229,
											"end": 18238,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18225,
											"end": 18242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18218,
											"end": 18265,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18282,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 18408,
											"end": 18412,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18282,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 18282,
											"end": 18413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18282,
											"end": 18413,
											"name": "tag",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 18282,
											"end": 18413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18274,
											"end": 18413,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18274,
											"end": 18413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18001,
											"end": 18420,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18001,
											"end": 18420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18001,
											"end": 18420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18001,
											"end": 18420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18426,
											"end": 18606,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 18426,
											"end": 18606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18474,
											"end": 18551,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18471,
											"end": 18472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18464,
											"end": 18552,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18571,
											"end": 18575,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 18568,
											"end": 18569,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18561,
											"end": 18576,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18595,
											"end": 18599,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18592,
											"end": 18593,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18585,
											"end": 18600,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18612,
											"end": 18788,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 18612,
											"end": 18788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18752,
											"end": 18780,
											"name": "PUSH",
											"source": 12,
											"value": "55736572206E6F7420666F756E6420696E204B5943206C697374000000000000"
										},
										{
											"begin": 18748,
											"end": 18749,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18740,
											"end": 18746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18736,
											"end": 18750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18729,
											"end": 18781,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18612,
											"end": 18788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18612,
											"end": 18788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19160,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 18794,
											"end": 19160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18936,
											"end": 18939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18957,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "733"
										},
										{
											"begin": 19021,
											"end": 19023,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 19016,
											"end": 19019,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18957,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 18957,
											"end": 19024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18957,
											"end": 19024,
											"name": "tag",
											"source": 12,
											"value": "733"
										},
										{
											"begin": 18957,
											"end": 19024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18950,
											"end": 19024,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18950,
											"end": 19024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19033,
											"end": 19126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "734"
										},
										{
											"begin": 19122,
											"end": 19125,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19033,
											"end": 19126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 19033,
											"end": 19126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19033,
											"end": 19126,
											"name": "tag",
											"source": 12,
											"value": "734"
										},
										{
											"begin": 19033,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19151,
											"end": 19153,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19146,
											"end": 19149,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19142,
											"end": 19154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19135,
											"end": 19154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19135,
											"end": 19154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19160,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19160,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19166,
											"end": 19585,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 19166,
											"end": 19585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19332,
											"end": 19336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19370,
											"end": 19372,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19359,
											"end": 19368,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19355,
											"end": 19373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19347,
											"end": 19373,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19347,
											"end": 19373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19428,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19413,
											"end": 19417,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19409,
											"end": 19429,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19405,
											"end": 19406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19394,
											"end": 19403,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19390,
											"end": 19407,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19383,
											"end": 19430,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "736"
										},
										{
											"begin": 19573,
											"end": 19577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 19447,
											"end": 19578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19447,
											"end": 19578,
											"name": "tag",
											"source": 12,
											"value": "736"
										},
										{
											"begin": 19447,
											"end": 19578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19439,
											"end": 19578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19439,
											"end": 19578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19166,
											"end": 19585,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19166,
											"end": 19585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19166,
											"end": 19585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19166,
											"end": 19585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19591,
											"end": 19785,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 19591,
											"end": 19785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19631,
											"end": 19635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19651,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 19669,
											"end": 19670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19651,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 19651,
											"end": 19671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19651,
											"end": 19671,
											"name": "tag",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 19651,
											"end": 19671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 19671,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 19671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19685,
											"end": 19705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "739"
										},
										{
											"begin": 19703,
											"end": 19704,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19685,
											"end": 19705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 19685,
											"end": 19705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19685,
											"end": 19705,
											"name": "tag",
											"source": 12,
											"value": "739"
										},
										{
											"begin": 19685,
											"end": 19705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19680,
											"end": 19705,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19680,
											"end": 19705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19729,
											"end": 19730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19726,
											"end": 19727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19722,
											"end": 19731,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19714,
											"end": 19731,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19714,
											"end": 19731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19753,
											"end": 19754,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19747,
											"end": 19751,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19744,
											"end": 19755,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19741,
											"end": 19778,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19741,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "740"
										},
										{
											"begin": 19741,
											"end": 19778,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19758,
											"end": 19776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 19758,
											"end": 19776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 19758,
											"end": 19776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19758,
											"end": 19776,
											"name": "tag",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 19758,
											"end": 19776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19741,
											"end": 19778,
											"name": "tag",
											"source": 12,
											"value": "740"
										},
										{
											"begin": 19741,
											"end": 19778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19591,
											"end": 19785,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19591,
											"end": 19785,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19591,
											"end": 19785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19591,
											"end": 19785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19591,
											"end": 19785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19791,
											"end": 19971,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 19791,
											"end": 19971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 19916,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19836,
											"end": 19837,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19829,
											"end": 19917,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19936,
											"end": 19940,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 19933,
											"end": 19934,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19926,
											"end": 19941,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19960,
											"end": 19964,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19957,
											"end": 19958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19950,
											"end": 19965,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19977,
											"end": 20153,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 19977,
											"end": 20153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20117,
											"end": 20145,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C6964206E6577206F776E657220616464726573732E000000000000"
										},
										{
											"begin": 20113,
											"end": 20114,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20105,
											"end": 20111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20101,
											"end": 20115,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20094,
											"end": 20146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19977,
											"end": 20153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19977,
											"end": 20153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20159,
											"end": 20525,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 20159,
											"end": 20525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20301,
											"end": 20304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20322,
											"end": 20389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "745"
										},
										{
											"begin": 20386,
											"end": 20388,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 20381,
											"end": 20384,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20322,
											"end": 20389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 20322,
											"end": 20389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20322,
											"end": 20389,
											"name": "tag",
											"source": 12,
											"value": "745"
										},
										{
											"begin": 20322,
											"end": 20389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20315,
											"end": 20389,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20315,
											"end": 20389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20398,
											"end": 20491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "746"
										},
										{
											"begin": 20487,
											"end": 20490,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20398,
											"end": 20491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 20398,
											"end": 20491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20398,
											"end": 20491,
											"name": "tag",
											"source": 12,
											"value": "746"
										},
										{
											"begin": 20398,
											"end": 20491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20516,
											"end": 20518,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20511,
											"end": 20514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20507,
											"end": 20519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20500,
											"end": 20519,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20500,
											"end": 20519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20159,
											"end": 20525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20159,
											"end": 20525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20159,
											"end": 20525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20159,
											"end": 20525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20531,
											"end": 20950,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 20531,
											"end": 20950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20697,
											"end": 20701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20735,
											"end": 20737,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20724,
											"end": 20733,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20720,
											"end": 20738,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20712,
											"end": 20738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20712,
											"end": 20738,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20784,
											"end": 20793,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20778,
											"end": 20782,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20770,
											"end": 20771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20759,
											"end": 20768,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20755,
											"end": 20772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20748,
											"end": 20795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20812,
											"end": 20943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 20938,
											"end": 20942,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20812,
											"end": 20943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 20812,
											"end": 20943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20812,
											"end": 20943,
											"name": "tag",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 20812,
											"end": 20943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20804,
											"end": 20943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20804,
											"end": 20943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20531,
											"end": 20950,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20531,
											"end": 20950,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20531,
											"end": 20950,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20531,
											"end": 20950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20956,
											"end": 21121,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 20956,
											"end": 21121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21096,
											"end": 21113,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 21092,
											"end": 21093,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21084,
											"end": 21090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21080,
											"end": 21094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21073,
											"end": 21114,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20956,
											"end": 21121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20956,
											"end": 21121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21127,
											"end": 21493,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 21127,
											"end": 21493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21269,
											"end": 21272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21290,
											"end": 21357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "751"
										},
										{
											"begin": 21354,
											"end": 21356,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 21349,
											"end": 21352,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21290,
											"end": 21357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 21290,
											"end": 21357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21290,
											"end": 21357,
											"name": "tag",
											"source": 12,
											"value": "751"
										},
										{
											"begin": 21290,
											"end": 21357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21283,
											"end": 21357,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21283,
											"end": 21357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21366,
											"end": 21459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "752"
										},
										{
											"begin": 21455,
											"end": 21458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21366,
											"end": 21459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 21366,
											"end": 21459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21366,
											"end": 21459,
											"name": "tag",
											"source": 12,
											"value": "752"
										},
										{
											"begin": 21366,
											"end": 21459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21484,
											"end": 21486,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21479,
											"end": 21482,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21475,
											"end": 21487,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21468,
											"end": 21487,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21468,
											"end": 21487,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21127,
											"end": 21493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21127,
											"end": 21493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21127,
											"end": 21493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21127,
											"end": 21493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21499,
											"end": 21918,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 21499,
											"end": 21918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21665,
											"end": 21669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21703,
											"end": 21705,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21692,
											"end": 21701,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21688,
											"end": 21706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21680,
											"end": 21706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21680,
											"end": 21706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21752,
											"end": 21761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21746,
											"end": 21750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21742,
											"end": 21762,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21738,
											"end": 21739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21727,
											"end": 21736,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21723,
											"end": 21740,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21716,
											"end": 21763,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21780,
											"end": 21911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "754"
										},
										{
											"begin": 21906,
											"end": 21910,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21780,
											"end": 21911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 21780,
											"end": 21911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21780,
											"end": 21911,
											"name": "tag",
											"source": 12,
											"value": "754"
										},
										{
											"begin": 21780,
											"end": 21911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21772,
											"end": 21911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21772,
											"end": 21911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21499,
											"end": 21918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21499,
											"end": 21918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21499,
											"end": 21918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21499,
											"end": 21918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21924,
											"end": 22095,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 21924,
											"end": 22095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22064,
											"end": 22087,
											"name": "PUSH",
											"source": 12,
											"value": "5573657220697320616C7265616479204B594365640000000000000000000000"
										},
										{
											"begin": 22060,
											"end": 22061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22052,
											"end": 22058,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22048,
											"end": 22062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22041,
											"end": 22088,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21924,
											"end": 22095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21924,
											"end": 22095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22101,
											"end": 22467,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 22101,
											"end": 22467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22243,
											"end": 22246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22264,
											"end": 22331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "757"
										},
										{
											"begin": 22328,
											"end": 22330,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 22323,
											"end": 22326,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22264,
											"end": 22331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 22264,
											"end": 22331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22264,
											"end": 22331,
											"name": "tag",
											"source": 12,
											"value": "757"
										},
										{
											"begin": 22264,
											"end": 22331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22257,
											"end": 22331,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22257,
											"end": 22331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22340,
											"end": 22433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "758"
										},
										{
											"begin": 22429,
											"end": 22432,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22340,
											"end": 22433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 22340,
											"end": 22433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22340,
											"end": 22433,
											"name": "tag",
											"source": 12,
											"value": "758"
										},
										{
											"begin": 22340,
											"end": 22433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22458,
											"end": 22460,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22453,
											"end": 22456,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22449,
											"end": 22461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22442,
											"end": 22461,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22442,
											"end": 22461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22101,
											"end": 22467,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22101,
											"end": 22467,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22101,
											"end": 22467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22101,
											"end": 22467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22473,
											"end": 22892,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 22473,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22639,
											"end": 22643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22677,
											"end": 22679,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22666,
											"end": 22675,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22662,
											"end": 22680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22654,
											"end": 22680,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22654,
											"end": 22680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22726,
											"end": 22735,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22720,
											"end": 22724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22716,
											"end": 22736,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22712,
											"end": 22713,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22701,
											"end": 22710,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22697,
											"end": 22714,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22690,
											"end": 22737,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22754,
											"end": 22885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "760"
										},
										{
											"begin": 22880,
											"end": 22884,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22754,
											"end": 22885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 22754,
											"end": 22885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22754,
											"end": 22885,
											"name": "tag",
											"source": 12,
											"value": "760"
										},
										{
											"begin": 22754,
											"end": 22885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22746,
											"end": 22885,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22746,
											"end": 22885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22473,
											"end": 22892,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22473,
											"end": 22892,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22473,
											"end": 22892,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22473,
											"end": 22892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22898,
											"end": 23079,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 22898,
											"end": 23079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23038,
											"end": 23071,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 23034,
											"end": 23035,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23026,
											"end": 23032,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23022,
											"end": 23036,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23015,
											"end": 23072,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22898,
											"end": 23079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22898,
											"end": 23079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23085,
											"end": 23451,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 23085,
											"end": 23451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23227,
											"end": 23230,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23248,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "763"
										},
										{
											"begin": 23312,
											"end": 23314,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 23307,
											"end": 23310,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23248,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 23248,
											"end": 23315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23248,
											"end": 23315,
											"name": "tag",
											"source": 12,
											"value": "763"
										},
										{
											"begin": 23248,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23241,
											"end": 23315,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23241,
											"end": 23315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23324,
											"end": 23417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "764"
										},
										{
											"begin": 23413,
											"end": 23416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23324,
											"end": 23417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 23324,
											"end": 23417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23324,
											"end": 23417,
											"name": "tag",
											"source": 12,
											"value": "764"
										},
										{
											"begin": 23324,
											"end": 23417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23442,
											"end": 23444,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23437,
											"end": 23440,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23433,
											"end": 23445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23426,
											"end": 23445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23426,
											"end": 23445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23085,
											"end": 23451,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23085,
											"end": 23451,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23085,
											"end": 23451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23085,
											"end": 23451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23457,
											"end": 23876,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 23457,
											"end": 23876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23623,
											"end": 23627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23661,
											"end": 23663,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23650,
											"end": 23659,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23646,
											"end": 23664,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23638,
											"end": 23664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23638,
											"end": 23664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23710,
											"end": 23719,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23704,
											"end": 23708,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23700,
											"end": 23720,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23696,
											"end": 23697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23685,
											"end": 23694,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23681,
											"end": 23698,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23674,
											"end": 23721,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23738,
											"end": 23869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "766"
										},
										{
											"begin": 23864,
											"end": 23868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23738,
											"end": 23869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 23738,
											"end": 23869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23738,
											"end": 23869,
											"name": "tag",
											"source": 12,
											"value": "766"
										},
										{
											"begin": 23738,
											"end": 23869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23730,
											"end": 23869,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23730,
											"end": 23869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23457,
											"end": 23876,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23457,
											"end": 23876,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23457,
											"end": 23876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23457,
											"end": 23876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23882,
											"end": 24182,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 23882,
											"end": 24182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24022,
											"end": 24056,
											"name": "PUSH",
											"source": 12,
											"value": "4469766964656E6420506572696F64206973206F6E676F696E672C20616C6C20"
										},
										{
											"begin": 24018,
											"end": 24019,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24010,
											"end": 24016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24006,
											"end": 24020,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23999,
											"end": 24057,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24091,
											"end": 24125,
											"name": "PUSH",
											"source": 12,
											"value": "7472616E73666572732077696C6C20726573756D652061667465722064697669"
										},
										{
											"begin": 24086,
											"end": 24088,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24078,
											"end": 24084,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24074,
											"end": 24089,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24067,
											"end": 24126,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24160,
											"end": 24174,
											"name": "PUSH",
											"source": 12,
											"value": "64656E6420706572696F642E0000000000000000000000000000000000000000"
										},
										{
											"begin": 24155,
											"end": 24157,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24147,
											"end": 24153,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24143,
											"end": 24158,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24136,
											"end": 24175,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23882,
											"end": 24182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23882,
											"end": 24182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24554,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 24188,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24330,
											"end": 24333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24351,
											"end": 24418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "769"
										},
										{
											"begin": 24415,
											"end": 24417,
											"name": "PUSH",
											"source": 12,
											"value": "4C"
										},
										{
											"begin": 24410,
											"end": 24413,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24351,
											"end": 24418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 24351,
											"end": 24418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24351,
											"end": 24418,
											"name": "tag",
											"source": 12,
											"value": "769"
										},
										{
											"begin": 24351,
											"end": 24418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24344,
											"end": 24418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24344,
											"end": 24418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24427,
											"end": 24520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "770"
										},
										{
											"begin": 24516,
											"end": 24519,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24427,
											"end": 24520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 24427,
											"end": 24520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24427,
											"end": 24520,
											"name": "tag",
											"source": 12,
											"value": "770"
										},
										{
											"begin": 24427,
											"end": 24520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24545,
											"end": 24547,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 24540,
											"end": 24543,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24536,
											"end": 24548,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24529,
											"end": 24548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24529,
											"end": 24548,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24560,
											"end": 24979,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 24560,
											"end": 24979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24726,
											"end": 24730,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24764,
											"end": 24766,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24753,
											"end": 24762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24749,
											"end": 24767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 24767,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 24767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24813,
											"end": 24822,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24807,
											"end": 24811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24799,
											"end": 24800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24788,
											"end": 24797,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24784,
											"end": 24801,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24777,
											"end": 24824,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24841,
											"end": 24972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "772"
										},
										{
											"begin": 24967,
											"end": 24971,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24841,
											"end": 24972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 24841,
											"end": 24972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24841,
											"end": 24972,
											"name": "tag",
											"source": 12,
											"value": "772"
										},
										{
											"begin": 24841,
											"end": 24972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24833,
											"end": 24972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24833,
											"end": 24972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24560,
											"end": 24979,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24560,
											"end": 24979,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24560,
											"end": 24979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24560,
											"end": 24979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24985,
											"end": 25154,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 24985,
											"end": 25154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25125,
											"end": 25146,
											"name": "PUSH",
											"source": 12,
											"value": "53656E646572206973206E6F74204B5943656400000000000000000000000000"
										},
										{
											"begin": 25121,
											"end": 25122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25113,
											"end": 25119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25109,
											"end": 25123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25102,
											"end": 25147,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24985,
											"end": 25154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24985,
											"end": 25154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25160,
											"end": 25526,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 25160,
											"end": 25526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25302,
											"end": 25305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25323,
											"end": 25390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "775"
										},
										{
											"begin": 25387,
											"end": 25389,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 25382,
											"end": 25385,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25323,
											"end": 25390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 25323,
											"end": 25390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25323,
											"end": 25390,
											"name": "tag",
											"source": 12,
											"value": "775"
										},
										{
											"begin": 25323,
											"end": 25390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25316,
											"end": 25390,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25316,
											"end": 25390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25399,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "776"
										},
										{
											"begin": 25488,
											"end": 25491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25399,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 25399,
											"end": 25492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25399,
											"end": 25492,
											"name": "tag",
											"source": 12,
											"value": "776"
										},
										{
											"begin": 25399,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25517,
											"end": 25519,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25512,
											"end": 25515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25508,
											"end": 25520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25501,
											"end": 25520,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25501,
											"end": 25520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25160,
											"end": 25526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25160,
											"end": 25526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25160,
											"end": 25526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25160,
											"end": 25526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25532,
											"end": 25951,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 25532,
											"end": 25951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25698,
											"end": 25702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25736,
											"end": 25738,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25725,
											"end": 25734,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25721,
											"end": 25739,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25713,
											"end": 25739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25713,
											"end": 25739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25785,
											"end": 25794,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25779,
											"end": 25783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25775,
											"end": 25795,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25771,
											"end": 25772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25760,
											"end": 25769,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25756,
											"end": 25773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25749,
											"end": 25796,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25813,
											"end": 25944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "778"
										},
										{
											"begin": 25939,
											"end": 25943,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25813,
											"end": 25944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 25813,
											"end": 25944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25813,
											"end": 25944,
											"name": "tag",
											"source": 12,
											"value": "778"
										},
										{
											"begin": 25813,
											"end": 25944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25805,
											"end": 25944,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25805,
											"end": 25944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25532,
											"end": 25951,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25532,
											"end": 25951,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25532,
											"end": 25951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25532,
											"end": 25951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25957,
											"end": 26129,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 25957,
											"end": 26129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26097,
											"end": 26121,
											"name": "PUSH",
											"source": 12,
											"value": "526563697069656E74206973206E6F74204B5943656400000000000000000000"
										},
										{
											"begin": 26093,
											"end": 26094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26085,
											"end": 26091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26081,
											"end": 26095,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26074,
											"end": 26122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25957,
											"end": 26129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25957,
											"end": 26129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26135,
											"end": 26501,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 26135,
											"end": 26501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26277,
											"end": 26280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26298,
											"end": 26365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "781"
										},
										{
											"begin": 26362,
											"end": 26364,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 26357,
											"end": 26360,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26298,
											"end": 26365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 26298,
											"end": 26365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26298,
											"end": 26365,
											"name": "tag",
											"source": 12,
											"value": "781"
										},
										{
											"begin": 26298,
											"end": 26365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26291,
											"end": 26365,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26291,
											"end": 26365,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26374,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "782"
										},
										{
											"begin": 26463,
											"end": 26466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26374,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 26374,
											"end": 26467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26374,
											"end": 26467,
											"name": "tag",
											"source": 12,
											"value": "782"
										},
										{
											"begin": 26374,
											"end": 26467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26492,
											"end": 26494,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26487,
											"end": 26490,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26483,
											"end": 26495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26476,
											"end": 26495,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26476,
											"end": 26495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26135,
											"end": 26501,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26135,
											"end": 26501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26135,
											"end": 26501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26135,
											"end": 26501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26507,
											"end": 26926,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 26507,
											"end": 26926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26673,
											"end": 26677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26711,
											"end": 26713,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26700,
											"end": 26709,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26696,
											"end": 26714,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26688,
											"end": 26714,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26688,
											"end": 26714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26760,
											"end": 26769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26754,
											"end": 26758,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26750,
											"end": 26770,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 26746,
											"end": 26747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26735,
											"end": 26744,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26731,
											"end": 26748,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26724,
											"end": 26771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26788,
											"end": 26919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "784"
										},
										{
											"begin": 26914,
											"end": 26918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26788,
											"end": 26919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 26788,
											"end": 26919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26788,
											"end": 26919,
											"name": "tag",
											"source": 12,
											"value": "784"
										},
										{
											"begin": 26788,
											"end": 26919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26780,
											"end": 26919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26780,
											"end": 26919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26507,
											"end": 26926,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26507,
											"end": 26926,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26507,
											"end": 26926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26507,
											"end": 26926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26932,
											"end": 27264,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 26932,
											"end": 27264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27053,
											"end": 27057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27091,
											"end": 27093,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 27080,
											"end": 27089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27076,
											"end": 27094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27068,
											"end": 27094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27068,
											"end": 27094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27104,
											"end": 27175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "786"
										},
										{
											"begin": 27172,
											"end": 27173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27161,
											"end": 27170,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27157,
											"end": 27174,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27148,
											"end": 27154,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 27104,
											"end": 27175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 27104,
											"end": 27175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27104,
											"end": 27175,
											"name": "tag",
											"source": 12,
											"value": "786"
										},
										{
											"begin": 27104,
											"end": 27175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27185,
											"end": 27257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "787"
										},
										{
											"begin": 27253,
											"end": 27255,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27242,
											"end": 27251,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27238,
											"end": 27256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27229,
											"end": 27235,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27185,
											"end": 27257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 27185,
											"end": 27257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27185,
											"end": 27257,
											"name": "tag",
											"source": 12,
											"value": "787"
										},
										{
											"begin": 27185,
											"end": 27257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26932,
											"end": 27264,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 26932,
											"end": 27264,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26932,
											"end": 27264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26932,
											"end": 27264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26932,
											"end": 27264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26932,
											"end": 27264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27270,
											"end": 27602,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 27270,
											"end": 27602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27391,
											"end": 27395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27429,
											"end": 27431,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 27418,
											"end": 27427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27414,
											"end": 27432,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27406,
											"end": 27432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27406,
											"end": 27432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27442,
											"end": 27513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "789"
										},
										{
											"begin": 27510,
											"end": 27511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27499,
											"end": 27508,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27495,
											"end": 27512,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27486,
											"end": 27492,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 27442,
											"end": 27513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 27442,
											"end": 27513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27442,
											"end": 27513,
											"name": "tag",
											"source": 12,
											"value": "789"
										},
										{
											"begin": 27442,
											"end": 27513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27523,
											"end": 27595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "790"
										},
										{
											"begin": 27591,
											"end": 27593,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27580,
											"end": 27589,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27576,
											"end": 27594,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27567,
											"end": 27573,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27523,
											"end": 27595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 27523,
											"end": 27595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27523,
											"end": 27595,
											"name": "tag",
											"source": 12,
											"value": "790"
										},
										{
											"begin": 27523,
											"end": 27595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27270,
											"end": 27602,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 27270,
											"end": 27602,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27270,
											"end": 27602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27270,
											"end": 27602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27270,
											"end": 27602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27270,
											"end": 27602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 28050,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 27608,
											"end": 28050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27757,
											"end": 27761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27795,
											"end": 27797,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 27784,
											"end": 27793,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27780,
											"end": 27798,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27772,
											"end": 27798,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27772,
											"end": 27798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27808,
											"end": 27879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "792"
										},
										{
											"begin": 27876,
											"end": 27877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27865,
											"end": 27874,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27861,
											"end": 27878,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27852,
											"end": 27858,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 27808,
											"end": 27879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 27808,
											"end": 27879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27808,
											"end": 27879,
											"name": "tag",
											"source": 12,
											"value": "792"
										},
										{
											"begin": 27808,
											"end": 27879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27889,
											"end": 27961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "793"
										},
										{
											"begin": 27957,
											"end": 27959,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27946,
											"end": 27955,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27942,
											"end": 27960,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27933,
											"end": 27939,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 27889,
											"end": 27961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 27889,
											"end": 27961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27889,
											"end": 27961,
											"name": "tag",
											"source": 12,
											"value": "793"
										},
										{
											"begin": 27889,
											"end": 27961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27971,
											"end": 28043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "794"
										},
										{
											"begin": 28039,
											"end": 28041,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28028,
											"end": 28037,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28024,
											"end": 28042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28015,
											"end": 28021,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27971,
											"end": 28043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 27971,
											"end": 28043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27971,
											"end": 28043,
											"name": "tag",
											"source": 12,
											"value": "794"
										},
										{
											"begin": 27971,
											"end": 28043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 28050,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 28050,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 28050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 28050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 28050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 28050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 28050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28056,
											"end": 28247,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 28056,
											"end": 28247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28096,
											"end": 28099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28115,
											"end": 28135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "796"
										},
										{
											"begin": 28133,
											"end": 28134,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28115,
											"end": 28135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 28115,
											"end": 28135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28115,
											"end": 28135,
											"name": "tag",
											"source": 12,
											"value": "796"
										},
										{
											"begin": 28115,
											"end": 28135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28110,
											"end": 28135,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28110,
											"end": 28135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28149,
											"end": 28169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "797"
										},
										{
											"begin": 28167,
											"end": 28168,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28149,
											"end": 28169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 28149,
											"end": 28169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28149,
											"end": 28169,
											"name": "tag",
											"source": 12,
											"value": "797"
										},
										{
											"begin": 28149,
											"end": 28169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28144,
											"end": 28169,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28144,
											"end": 28169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28192,
											"end": 28193,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28189,
											"end": 28190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28185,
											"end": 28194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28178,
											"end": 28194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28178,
											"end": 28194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28213,
											"end": 28216,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 28210,
											"end": 28211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28207,
											"end": 28217,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 28204,
											"end": 28240,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 28204,
											"end": 28240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "798"
										},
										{
											"begin": 28204,
											"end": 28240,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 28220,
											"end": 28238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "799"
										},
										{
											"begin": 28220,
											"end": 28238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 28220,
											"end": 28238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28220,
											"end": 28238,
											"name": "tag",
											"source": 12,
											"value": "799"
										},
										{
											"begin": 28220,
											"end": 28238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28204,
											"end": 28240,
											"name": "tag",
											"source": 12,
											"value": "798"
										},
										{
											"begin": 28204,
											"end": 28240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28056,
											"end": 28247,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28056,
											"end": 28247,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28056,
											"end": 28247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28056,
											"end": 28247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28056,
											"end": 28247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/tokenContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"KYC_ROLE()": "f9c8dec3",
							"MINTER_ROLE()": "d5391393",
							"addKYCUser(address)": "fb4900fc",
							"addMinter(address)": "983b2d56",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnMyBalance(address,uint256)": "263719c1",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"getBeneficiary()": "565a2e2c",
							"getDividendPaymentPeriodState()": "d8326a18",
							"getKYCList()": "f2f2a8ef",
							"getOwnedTokens(address)": "d9d61655",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isKYCed(address)": "b4c7f1ed",
							"kycUsersListLength()": "629044d2",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"rate()": "2c4e722e",
							"removeKYCUser(address)": "ed831fa4",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"sendTokens(address,uint256)": "05ab421d",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateDividendPeriodStatus(bool)": "d5dd4c02",
							"updateOwnsToken(address)": "a9eb3f99"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cap_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"KYCUserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"KYCUserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KYC_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addKYCUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnMyBalance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBeneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDividendPaymentPeriodState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getKYCList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeHolder\",\"type\":\"address\"}],\"name\":\"getOwnedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeHolder\",\"type\":\"address\"}],\"name\":\"isKYCed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kycUsersListLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeKYCUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"updateDividendPeriodStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakeHolder\",\"type\":\"address\"}],\"name\":\"updateOwnsToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"ERC20 token with KYC functionality, dividend period, and role-based access control\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Override transfer function with KYC and dividend period checks\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Override transferFrom function with KYC and dividend period checks\"}},\"title\":\"KYC Token Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokenContract.sol\":\"KYCToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084698c9feace630ff29919baad9df0721944eb2ecaf942ef807935bbbe41b5a\",\"dweb:/ipfs/Qmet4EQYqPLSKo7UPBNGaVw5NPATNkiLsqSCnCgg5kAPg4\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/tokenContract.sol\":{\"keccak256\":\"0x77bb40fd60121052fcadfe2f6afefc029c1797c439170d030e653e77a44b2a1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dc52f98af6f0028c81f9a396a3c44b8db610c3d33c3ba8c851cad3b39cbb5db\",\"dweb:/ipfs/QmZTxTEZ8pTr66LYS7KRjL87av6fpZurDuQtd3DW25mJkT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 603,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 609,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 611,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 613,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 615,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 526,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1389,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "7",
								"type": "t_uint8"
							},
							{
								"astId": 1391,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_rate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1393,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_owner",
								"offset": 0,
								"slot": "9",
								"type": "t_address_payable"
							},
							{
								"astId": 1395,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_beneficiary",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1397,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_dividendPeriod",
								"offset": 20,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 1400,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_kycUsers",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1404,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_isKYCed",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1408,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_kycUserIndices",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1412,
								"contract": "contracts/tokenContract.sol:KYCToken",
								"label": "_ownsTokens",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/tokenContract.sol:KYCToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/tokenContract.sol:KYCToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1328
						],
						"ERC165": [
							1352
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1329,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1328,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1353,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1352,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1352,
								1364,
								378,
								1328
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1351
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1351,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6816:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7006:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7020:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6826:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6854:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6868:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6881:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6868:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6868:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6868:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6868:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6936:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6951:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6924:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6919:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6978:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6761:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6753:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:6:0"
									},
									"scope": 295,
									"src": "6732:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5098:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6944:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							580
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 580,
							"linearizedBaseContracts": [
								580
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 521,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 519,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 524,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 530,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 580,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 541,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 545,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 550,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 580,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 580,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 575,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 573,
												"id": 577,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 580,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 581,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1328
						],
						"ERC20": [
							1095
						],
						"IERC20": [
							1173
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1298
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1174,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1299,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 585,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1298,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1329,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 587,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1328,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 516,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 589,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 592,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "1133:7:4"
									},
									"id": 593,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 594,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "1142:6:4"
									},
									"id": 595,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 596,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1298,
										"src": "1150:14:4"
									},
									"id": 597,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 598,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:4"
									},
									"id": 599,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 591,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1095,
							"linearizedBaseContracts": [
								1095,
								420,
								1298,
								1173,
								1328
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 603,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 602,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 600,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 601,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 609,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 608,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 604,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 607,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 605,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 606,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 611,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 610,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 613,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 612,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 615,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 614,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "1638:57:4",
										"statements": [
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 623,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1648:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 624,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1656:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:4"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 627,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "1671:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 628,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "1681:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:4"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 632,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1594:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1615:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:4"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:4"
									},
									"scope": 1095,
									"src": "1582:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1285
									],
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "1820:29:4",
										"statements": [
											{
												"expression": {
													"id": 638,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 613,
													"src": "1837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 637,
												"id": 639,
												"nodeType": "Return",
												"src": "1830:12:4"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:4"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1805:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:4"
									},
									"scope": 1095,
									"src": "1760:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1291
									],
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "2024:31:4",
										"statements": [
											{
												"expression": {
													"id": 647,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 615,
													"src": "2041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 646,
												"id": 648,
												"nodeType": "Return",
												"src": "2034:14:4"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2009:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:4"
									},
									"scope": 1095,
									"src": "1962:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "2744:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 655,
												"id": 657,
												"nodeType": "Return",
												"src": "2754:9:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2737:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 653,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:4"
									},
									"scope": 1095,
									"src": "2688:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "2891:36:4",
										"statements": [
											{
												"expression": {
													"id": 665,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 611,
													"src": "2908:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 664,
												"id": 666,
												"nodeType": "Return",
												"src": "2901:19:4"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2882:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:4"
									},
									"scope": 1095,
									"src": "2830:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1130
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "3059:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 676,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3076:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 678,
													"indexExpression": {
														"id": 677,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3086:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 675,
												"id": 679,
												"nodeType": "Return",
												"src": "3069:25:4"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3004:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3050:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:4"
									},
									"scope": 1095,
									"src": "2985:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1140
									],
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3371:103:4",
										"statements": [
											{
												"assignments": [
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3381:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 691,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 693,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "3397:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "3429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3436:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "3419:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 690,
												"id": 703,
												"nodeType": "Return",
												"src": "3456:11:4"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3314:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3326:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3365:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:4"
									},
									"scope": 1095,
									"src": "3296:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1150
									],
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "3621:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 715,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "3638:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 716,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3650:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 719,
													"indexExpression": {
														"id": 718,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3657:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 720,
												"nodeType": "Return",
												"src": "3631:34:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3551:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3566:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:4"
									},
									"scope": 1095,
									"src": "3532:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1160
									],
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "4058:107:4",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "4068:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 732,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 734,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "4084:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4115:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4122:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4131:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 986,
														"src": "4106:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 731,
												"id": 744,
												"nodeType": "Return",
												"src": "4147:11:4"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3996:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4013:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4052:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:4"
									},
									"scope": 1095,
									"src": "3979:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1172
									],
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "4850:151:4",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "4860:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 758,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 760,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "4878:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4916:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4931:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 763,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "4900:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4957:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4963:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4967:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 769,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "4947:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 757,
												"id": 776,
												"nodeType": "Return",
												"src": "4983:11:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4779:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4793:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4805:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:4"
									},
									"scope": 1095,
									"src": "4757:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "5443:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "5457:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "5453:86:4",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "5477:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 795,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 794,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5498:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 800,
															"nodeType": "RevertStatement",
															"src": "5491:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "5552:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 804,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "5548:86:4",
												"trueBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "5570:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 810,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 809,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5591:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 815,
															"nodeType": "RevertStatement",
															"src": "5584:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5651:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5657:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5661:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "5643:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:4"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5393:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5407:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5419:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:4"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:4"
									},
									"scope": 1095,
									"src": "5374:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "6064:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 835,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "6078:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 836,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "6252:362:4",
													"statements": [
														{
															"assignments": [
																847
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 847,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 872,
																	"src": "6266:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 846,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 851,
															"initialValue": {
																"baseExpression": {
																	"id": 848,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "6288:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 850,
																"indexExpression": {
																	"id": 849,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "6298:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "6321:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 853,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6335:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 862,
															"nodeType": "IfStatement",
															"src": "6317:115:4",
															"trueBody": {
																"id": 861,
																"nodeType": "Block",
																"src": "6342:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 856,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 828,
																					"src": "6392:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 857,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "6398:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 858,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 832,
																					"src": "6411:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 855,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6367:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 860,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:4"
																	}
																]
															}
														},
														{
															"id": 871,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 863,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6552:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 865,
																			"indexExpression": {
																				"id": 864,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "6562:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 866,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "6570:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 867,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "6584:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 870,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:4"
																}
															]
														}
													]
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "6074:540:4",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "6098:148:4",
													"statements": [
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 841,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "6214:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 842,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6230:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 874,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6628:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 875,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "6843:206:4",
													"statements": [
														{
															"id": 892,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 886,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "7002:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 888,
																			"indexExpression": {
																				"id": 887,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "7012:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 889,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "7019:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 891,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:4"
																}
															]
														}
													]
												},
												"id": 894,
												"nodeType": "IfStatement",
												"src": "6624:425:4",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "6646:191:4",
													"statements": [
														{
															"id": 884,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 880,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "6791:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 881,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "6807:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 896,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "7073:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "7079:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "7083:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "7064:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "EmitStatement",
												"src": "7059:30:4"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6006:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6020:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:4"
									},
									"scope": 1095,
									"src": "5989:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "7495:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "7509:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 911,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "7505:91:4",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "7532:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 917,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 916,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7553:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "7546:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "7625:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "7634:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "7605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:4"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7454:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7471:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:4"
									},
									"scope": 1095,
									"src": "7439:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "8021:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "8035:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 944,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 957,
												"nodeType": "IfStatement",
												"src": "8031:89:4",
												"trueBody": {
													"id": 956,
													"nodeType": "Block",
													"src": "8058:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 950,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 949,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8079:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 955,
															"nodeType": "RevertStatement",
															"src": "8072:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 960,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "8158:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 958,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "8129:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:4"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "7980:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "7997:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:4"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:4"
									},
									"scope": 1095,
									"src": "7965:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "8781:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "8800:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "8807:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "8816:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 978,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 1046,
														"src": "8791:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:4"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8725:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8740:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8757:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:4"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:4"
									},
									"scope": 1095,
									"src": "8707:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "9780:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "9794:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 999,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "9790:89:4",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "9815:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1005,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1004,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9836:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "9829:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1013,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "9892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1014,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "9888:90:4",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "9915:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1020,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1019,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9936:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1025,
															"nodeType": "RevertStatement",
															"src": "9929:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1028,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "9987:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1031,
															"indexExpression": {
																"id": 1029,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "9999:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1032,
														"indexExpression": {
															"id": 1030,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "10006:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1033,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "10017:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:4"
											},
											{
												"condition": {
													"id": 1036,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 995,
													"src": "10036:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1044,
												"nodeType": "IfStatement",
												"src": "10032:76:4",
												"trueBody": {
													"id": 1043,
													"nodeType": "Block",
													"src": "10047:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1038,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "10075:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1039,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "10082:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1040,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "10091:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1037,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "10066:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1042,
															"nodeType": "EmitStatement",
															"src": "10061:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9700:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9715:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9732:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9747:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:4"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:4"
									},
									"scope": 1095,
									"src": "9682:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "10485:387:4",
										"statements": [
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1093,
														"src": "10495:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"arguments": [
														{
															"id": 1059,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "10532:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "10539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1058,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "10522:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "10561:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1065,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1064,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "10557:309:4",
												"trueBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "10599:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1070,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "10617:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1071,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "10636:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1080,
															"nodeType": "IfStatement",
															"src": "10613:130:4",
															"trueBody": {
																"id": 1079,
																"nodeType": "Block",
																"src": "10643:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1074,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1051,
																					"src": "10695:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1075,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "10704:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1076,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "10722:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1073,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10668:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1078,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:4"
																	}
																]
															}
														},
														{
															"id": 1090,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1082,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "10793:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1083,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "10800:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1084,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "10809:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1085,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "10828:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1081,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				986,
																				1046
																			],
																			"referencedDeclaration": 1046,
																			"src": "10784:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1089,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:4",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10421:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10436:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10453:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:4"
									},
									"scope": 1095,
									"src": "10396:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1096,
							"src": "1106:9768:4",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "105:10770:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1173
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1173,
							"linearizedBaseContracts": [
								1173
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1107,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1116,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1173,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1173,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1173,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1173,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1173,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1173,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1174,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
					"exportedSymbols": {
						"ERC20": [
							1095
						],
						"ERC20Capped": [
							1272
						]
					},
					"id": 1273,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1273,
							"sourceUnit": 1096,
							"src": "148:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1176,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1095,
										"src": "156:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1179,
										"name": "ERC20",
										"nameLocations": [
											"296:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1095,
										"src": "296:5:6"
									},
									"id": 1180,
									"nodeType": "InheritanceSpecifier",
									"src": "296:5:6"
								}
							],
							"canonicalName": "ERC20Capped",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "185:77:6",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens."
							},
							"fullyImplemented": true,
							"id": 1272,
							"linearizedBaseContracts": [
								1272,
								1095,
								420,
								1298,
								1173,
								1328
							],
							"name": "ERC20Capped",
							"nameLocation": "281:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1182,
									"mutability": "immutable",
									"name": "_cap",
									"nameLocation": "334:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1272,
									"src": "308:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "308:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "345:59:6",
										"text": " @dev Total supply cap has been exceeded."
									},
									"errorSelector": "9e79f854",
									"id": 1189,
									"name": "ERC20ExceededCap",
									"nameLocation": "415:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "increasedSupply",
												"nameLocation": "440:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "432:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "465:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "457:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:38:6"
									},
									"src": "409:61:6"
								},
								{
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "476:60:6",
										"text": " @dev The supplied cap is not a valid cap."
									},
									"errorSelector": "392e1e27",
									"id": 1194,
									"name": "ERC20InvalidCap",
									"nameLocation": "547:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "571:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "563:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:13:6"
									},
									"src": "541:35:6"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "742:102:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "756:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "764:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "756:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"nodeType": "IfStatement",
												"src": "752:65:6",
												"trueBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "767:50:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1203,
																	"name": "ERC20InvalidCap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "788:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "788:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1206,
															"nodeType": "RevertStatement",
															"src": "781:25:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1209,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "826:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1210,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "833:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "826:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "826:11:6"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "582:129:6",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 1214,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "736:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:14:6"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:0:6"
									},
									"scope": 1272,
									"src": "716:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "976:28:6",
										"statements": [
											{
												"expression": {
													"id": 1220,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1182,
													"src": "993:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1219,
												"id": 1221,
												"nodeType": "Return",
												"src": "986:11:6"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "850:68:6",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "932:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:6"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "967:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:9:6"
									},
									"scope": 1272,
									"src": "923:81:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "1143:287:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1237,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "1167:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "1173:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1239,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "1177:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1234,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1153:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Capped_$1272_$",
																"typeString": "type(contract super ERC20Capped)"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1159:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 902,
														"src": "1153:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "1153:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1242,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "1198:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1206:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1243,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1206:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1206:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1198:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "1194:230:6",
												"trueBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "1218:206:6",
													"statements": [
														{
															"assignments": [
																1249
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1249,
																	"mutability": "mutable",
																	"name": "maxSupply",
																	"nameLocation": "1240:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1268,
																	"src": "1232:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1248,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1232:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1252,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1250,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "1252:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:5:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1232:25:6"
														},
														{
															"assignments": [
																1254
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1254,
																	"mutability": "mutable",
																	"name": "supply",
																	"nameLocation": "1279:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1268,
																	"src": "1271:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1253,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1271:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1257,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1255,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "1288:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1288:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1271:30:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1258,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "1319:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1259,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "1328:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1319:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1267,
															"nodeType": "IfStatement",
															"src": "1315:99:6",
															"trueBody": {
																"id": 1266,
																"nodeType": "Block",
																"src": "1339:75:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1262,
																					"name": "supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1254,
																					"src": "1381:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1263,
																					"name": "maxSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1249,
																					"src": "1389:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1261,
																				"name": "ERC20ExceededCap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "1364:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1364:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1265,
																		"nodeType": "RevertStatement",
																		"src": "1357:42:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "1010:44:6",
										"text": " @dev See {ERC20-_update}."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1068:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1232,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1134:8:6"
									},
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1084:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1076:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1098:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1090:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1110:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1102:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:41:6"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:6"
									},
									"scope": 1272,
									"src": "1059:371:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1273,
							"src": "263:1169:6",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419,
								1189,
								1194
							],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "122:1311:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1173
						],
						"IERC20Metadata": [
							1298
						]
					},
					"id": 1299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1274,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1299,
							"sourceUnit": 1174,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1275,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1278,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "306:6:7"
									},
									"id": 1279,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1277,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1298,
							"linearizedBaseContracts": [
								1298,
								1173
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 1298,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1288,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1298,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1294,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 1298,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1299,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1328
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1300,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1301,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1306,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1305,
												"id": 1308,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1328,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1315,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1317,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1328,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1323,
												"id": 1325,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1328,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1329,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1352
						],
						"IERC165": [
							1364
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1365,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1331,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1364,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1334,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1364,
										"src": "688:7:9"
									},
									"id": 1335,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1333,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								1364
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1363
									],
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1345,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1364_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1364_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1344,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1364",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1342,
												"id": 1349,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1352,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1353,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1364
						]
					},
					"id": 1365,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1355,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1364,
							"linearizedBaseContracts": [
								1364
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1364,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1365,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/tokenContract.sol": {
				"ast": {
					"absolutePath": "contracts/tokenContract.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1328
						],
						"ERC165": [
							1352
						],
						"ERC20": [
							1095
						],
						"ERC20Capped": [
							1272
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1173
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1298
						],
						"KYCToken": [
							2046
						],
						"ReentrancyGuard": [
							580
						]
					},
					"id": 2047,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1366,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 1096,
							"src": "58:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"id": 1368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 1273,
							"src": "114:72:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 296,
							"src": "187:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 581,
							"src": "246:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1372,
										"name": "ERC20Capped",
										"nameLocations": [
											"459:11:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1272,
										"src": "459:11:11"
									},
									"id": 1373,
									"nodeType": "InheritanceSpecifier",
									"src": "459:11:11"
								},
								{
									"baseName": {
										"id": 1374,
										"name": "AccessControl",
										"nameLocations": [
											"472:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "472:13:11"
									},
									"id": 1375,
									"nodeType": "InheritanceSpecifier",
									"src": "472:13:11"
								},
								{
									"baseName": {
										"id": 1376,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"487:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 580,
										"src": "487:15:11"
									},
									"id": 1377,
									"nodeType": "InheritanceSpecifier",
									"src": "487:15:11"
								}
							],
							"canonicalName": "KYCToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1371,
								"nodeType": "StructuredDocumentation",
								"src": "310:127:11",
								"text": " @title KYC Token Contract\n @dev ERC20 token with KYC functionality, dividend period, and role-based access control"
							},
							"fullyImplemented": true,
							"id": 2046,
							"linearizedBaseContracts": [
								2046,
								580,
								295,
								1352,
								1364,
								378,
								1272,
								1095,
								420,
								1298,
								1173,
								1328
							],
							"name": "KYCToken",
							"nameLocation": "447:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1382,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "533:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "509:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1378,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "509:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1380,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "557:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1379,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "547:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1381,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "547:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f9c8dec3",
									"id": 1387,
									"mutability": "constant",
									"name": "KYC_ROLE",
									"nameLocation": "601:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "577:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1383,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "577:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4b59435f524f4c45",
												"id": 1385,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "622:10:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_db11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db7",
													"typeString": "literal_string \"KYC_ROLE\""
												},
												"value": "KYC_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_db11624602202c396fa347735a55e345a3aeb3e60f8885e1a71f1bf8d5886db7",
													"typeString": "literal_string \"KYC_ROLE\""
												}
											],
											"id": 1384,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "612:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "612:21:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1389,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "654:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "640:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1388,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "640:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1391,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "685:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "669:21:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1390,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "669:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1393,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "720:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "696:30:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1392,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "696:15:11",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1395,
									"mutability": "mutable",
									"name": "_beneficiary",
									"nameLocation": "748:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "732:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1394,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "732:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1397,
									"mutability": "mutable",
									"name": "_dividendPeriod",
									"nameLocation": "784:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "771:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1396,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "771:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1400,
									"mutability": "mutable",
									"name": "_kycUsers",
									"nameLocation": "848:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "830:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1398,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "830:7:11",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1399,
										"nodeType": "ArrayTypeName",
										"src": "830:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1404,
									"mutability": "mutable",
									"name": "_isKYCed",
									"nameLocation": "896:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "863:41:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1403,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1401,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "871:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "863:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1402,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "882:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1408,
									"mutability": "mutable",
									"name": "_kycUserIndices",
									"nameLocation": "946:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "910:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1407,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1405,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "918:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "910:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1406,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "929:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1412,
									"mutability": "mutable",
									"name": "_ownsTokens",
									"nameLocation": "1037:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "1004:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1411,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1409,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1012:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1004:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1410,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1023:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "e82acf77c2686315e6aeaa43ccec710936b819cb5d01a31fadb2bf2a928c9342",
									"id": 1416,
									"name": "KYCUserAdded",
									"nameLocation": "1079:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"indexed": true,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1108:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "1092:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:29:11"
									},
									"src": "1073:48:11"
								},
								{
									"anonymous": false,
									"eventSelector": "8ce60ec723c7fcc3c3f6b1ffaa7b814b03df348c312bb6e41929417162565664",
									"id": 1420,
									"name": "KYCUserRemoved",
									"nameLocation": "1132:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"indexed": true,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1163:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "1147:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:29:11"
									},
									"src": "1126:50:11"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "1404:537:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1443,
																"name": "beneficiary_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "1422:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1446:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1438:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1444,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1438:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1438:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642062656e65666963696172792061646472657373",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1450:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
																"typeString": "literal_string \"Invalid beneficiary address\""
															},
															"value": "Invalid beneficiary address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0378e31dbdb23f0416cbeaf013dfcb80bb7b06312f3b6e028f4bc0920c08ec89",
																"typeString": "literal_string \"Invalid beneficiary address\""
															}
														],
														"id": 1442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "1414:66:11"
											},
											{
												"expression": {
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1452,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "1499:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1453,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "1511:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1499:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "1499:21:11"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1456,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "1530:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1457,
														"name": "rate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "1538:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1530:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "1530:13:11"
											},
											{
												"expression": {
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1460,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "1553:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1461,
														"name": "beneficiary_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "1568:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "1553:27:11"
											},
											{
												"expression": {
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1464,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "1590:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1467,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1607:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1611:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1607:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1599:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1599:8:11",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1599:19:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1590:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "1590:28:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1473,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1671:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1474,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1691:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1695:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1691:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1472,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1660:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "1660:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1479,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "1723:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1480,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1736:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1740:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1736:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1478,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1712:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1712:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "1712:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1485,
															"name": "KYC_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "1768:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1486,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1778:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1782:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1778:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1484,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1757:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1757:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "1757:32:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1491,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "1849:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1492,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1862:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1490,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1835:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1835:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "1835:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1496,
															"name": "KYC_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "1905:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1497,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1915:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1495,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1891:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1891:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "1891:43:11"
											}
										]
									},
									"id": 1501,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1435,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1422,
													"src": "1370:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1436,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1424,
													"src": "1377:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1437,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1434,
												"name": "ERC20",
												"nameLocations": [
													"1364:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1095,
												"src": "1364:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1364:21:11"
										},
										{
											"arguments": [
												{
													"id": 1439,
													"name": "cap_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1428,
													"src": "1398:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1440,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1438,
												"name": "ERC20Capped",
												"nameLocations": [
													"1386:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1272,
												"src": "1386:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1386:17:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1221:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1207:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1207:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1250:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1236:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1236:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "1273:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1267:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1425,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1267:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "1300:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1292:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "rate_",
												"nameLocation": "1322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "beneficiary_",
												"nameLocation": "1345:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1337:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:166:11"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:11"
									},
									"scope": 2046,
									"src": "1186:755:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										659
									],
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "2016:33:11",
										"statements": [
											{
												"expression": {
													"id": 1507,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1389,
													"src": "2033:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1506,
												"id": 1508,
												"nodeType": "Return",
												"src": "2026:16:11"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1960:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1991:8:11"
									},
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:11"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "2009:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1504,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2009:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:7:11"
									},
									"scope": 2046,
									"src": "1951:98:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "2105:29:11",
										"statements": [
											{
												"expression": {
													"id": 1515,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1391,
													"src": "2122:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1516,
												"nodeType": "Return",
												"src": "2115:12:11"
											}
										]
									},
									"functionSelector": "2c4e722e",
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "2068:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:2:11"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2096:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:9:11"
									},
									"scope": 2046,
									"src": "2059:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "2199:30:11",
										"statements": [
											{
												"expression": {
													"id": 1523,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1393,
													"src": "2216:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1524,
												"nodeType": "Return",
												"src": "2209:13:11"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2153:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:2:11"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2182:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:17:11"
									},
									"scope": 2046,
									"src": "2144:85:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "2295:36:11",
										"statements": [
											{
												"expression": {
													"id": 1531,
													"name": "_beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1395,
													"src": "2312:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1530,
												"id": 1532,
												"nodeType": "Return",
												"src": "2305:19:11"
											}
										]
									},
									"functionSelector": "565a2e2c",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeneficiary",
									"nameLocation": "2248:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2262:2:11"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2286:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:9:11"
									},
									"scope": 2046,
									"src": "2239:92:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "2368:2:11",
										"statements": []
									},
									"id": 1538,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2348:2:11"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2368:0:11"
									},
									"scope": 2046,
									"src": "2341:29:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "2401:98:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1541,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2419:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2423:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2419:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1543,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "2433:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2419:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865204f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2441:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11",
																"typeString": "literal_string \"Only the Owner can call this function\""
															},
															"value": "Only the Owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a997915d54fe93e0b41b2f684ecec67c07d43f3bc874de3497b06a31ab7ce11",
																"typeString": "literal_string \"Only the Owner can call this function\""
															}
														],
														"id": 1540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "2411:70:11"
											},
											{
												"id": 1548,
												"nodeType": "PlaceholderStatement",
												"src": "2491:1:11"
											}
										]
									},
									"id": 1550,
									"name": "onlyOwner",
									"nameLocation": "2389:9:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2398:2:11"
									},
									"src": "2380:119:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "2571:114:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1558,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "2589:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2609:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2601:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1559,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2601:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2601:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2589:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e6577206f776e657220616464726573732e",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2613:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200",
																"typeString": "literal_string \"Invalid new owner address.\""
															},
															"value": "Invalid new owner address."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a72ba9cedbd9b944eee5a27da401fc523ac77b58c47ace5ba2b3971e677f200",
																"typeString": "literal_string \"Invalid new owner address.\""
															}
														],
														"id": 1557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2581:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "2581:61:11"
											},
											{
												"expression": {
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1567,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "2652:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1570,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "2669:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2661:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1568,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2661:8:11",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2661:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2652:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "2652:26:11"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1555,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1554,
												"name": "onlyOwner",
												"nameLocations": [
													"2561:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1550,
												"src": "2561:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2561:9:11"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2518:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2544:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2536:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2535:18:11"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2571:0:11"
									},
									"scope": 2046,
									"src": "2509:176:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "2763:51:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1585,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "2784:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1586,
															"name": "newMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "2797:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1584,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2773:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2773:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "2773:34:11"
											}
										]
									},
									"functionSelector": "983b2d56",
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1579,
												"name": "onlyOwner",
												"nameLocations": [
													"2740:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1550,
												"src": "2740:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2740:9:11"
										},
										{
											"id": 1582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1581,
												"name": "nonReentrant",
												"nameLocations": [
													"2750:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "2750:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2750:12:11"
										}
									],
									"name": "addMinter",
									"nameLocation": "2704:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "newMinter",
												"nameLocation": "2722:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2714:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:19:11"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2763:0:11"
									},
									"scope": 2046,
									"src": "2695:119:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "2917:209:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1603,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "2935:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2952:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2944:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1604,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2944:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2944:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2935:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "62757965722069732061207a65726f2061646472657373",
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2956:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf",
																"typeString": "literal_string \"buyer is a zero address\""
															},
															"value": "buyer is a zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06cae4f5d64245c5086ec14e6c008153852c20f548de0c07197b58d070834faf",
																"typeString": "literal_string \"buyer is a zero address\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2927:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2927:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "2927:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1613,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "3000:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3009:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3000:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "776569416d6f756e742069732030",
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3012:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027",
																"typeString": "literal_string \"weiAmount is 0\""
															},
															"value": "weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc601d549279b4411581c06e5ad34bbf33d6f078b0040fa8e9b800eda8545027",
																"typeString": "literal_string \"weiAmount is 0\""
															}
														],
														"id": 1612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2992:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2992:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "2992:37:11"
											},
											{
												"assignments": [
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "3056:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1630,
														"src": "3048:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3048:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1621,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "3070:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1622,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "3079:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3070:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3048:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1626,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "3100:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1627,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "3107:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1625,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3094:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3094:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "3094:25:11"
											}
										]
									},
									"functionSelector": "05ab421d",
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1597,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1382,
													"src": "2891:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1598,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1596,
												"name": "onlyRole",
												"nameLocations": [
													"2882:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2882:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2882:21:11"
										},
										{
											"id": 1600,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1599,
												"name": "nonReentrant",
												"nameLocations": [
													"2904:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "2904:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2904:12:11"
										}
									],
									"name": "sendTokens",
									"nameLocation": "2833:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "2852:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "2844:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2867:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "2859:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2859:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:31:11"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2917:0:11"
									},
									"scope": 2046,
									"src": "2824:302:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										705
									],
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "3311:193:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3339:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3343:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3339:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1645,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "3351:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1642,
														"name": "_validateTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "3321:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) view"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3321:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "3321:40:11"
											},
											{
												"assignments": [
													1649
												],
												"declarations": [
													{
														"constant": false,
														"id": 1649,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3376:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1664,
														"src": "3371:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1648,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3371:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1655,
												"initialValue": {
													"arguments": [
														{
															"id": 1652,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "3401:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1653,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "3412:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1650,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3386:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_KYCToken_$2046_$",
																"typeString": "type(contract super KYCToken)"
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3392:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "3386:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3386:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3371:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1657,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3451:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3455:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3451:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1659,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "3463:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1656,
														"name": "_updateTokenOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "3429:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "3429:44:11"
											},
											{
												"expression": {
													"id": 1662,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1649,
													"src": "3490:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1663,
												"nodeType": "Return",
												"src": "3483:14:11"
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "3136:86:11",
										"text": " @dev Override transfer function with KYC and dividend period checks"
									},
									"functionSelector": "a9059cbb",
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3236:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1638,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:11"
									},
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3253:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "3245:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3245:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3272:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "3264:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3264:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3244:35:11"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "3305:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3305:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:6:11"
									},
									"scope": 2046,
									"src": "3227:277:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										778
									],
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "3713:197:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1679,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "3741:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1680,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "3749:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1678,
														"name": "_validateTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "3723:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) view"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3723:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "3723:36:11"
											},
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3774:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1699,
														"src": "3769:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1683,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3769:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1691,
												"initialValue": {
													"arguments": [
														{
															"id": 1687,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "3803:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1688,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "3811:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1689,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "3822:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1685,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3784:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_KYCToken_$2046_$",
																"typeString": "type(contract super KYCToken)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3790:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "3784:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3784:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3769:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1693,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "3861:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1694,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "3869:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1692,
														"name": "_updateTokenOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "3839:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3839:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "3839:40:11"
											},
											{
												"expression": {
													"id": 1697,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1684,
													"src": "3896:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1677,
												"id": 1698,
												"nodeType": "Return",
												"src": "3889:14:11"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "3514:90:11",
										"text": " @dev Override transferFrom function with KYC and dividend period checks"
									},
									"functionSelector": "23b872dd",
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3618:12:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1674,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3689:8:11"
									},
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3639:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "3631:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3655:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "3647:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3674:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "3666:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3666:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:51:11"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "3707:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3707:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3706:6:11"
									},
									"scope": 2046,
									"src": "3609:301:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "4073:244:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4091:16:11",
															"subExpression": {
																"id": 1709,
																"name": "_dividendPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1397,
																"src": "4092:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469766964656e6420506572696f64206973206f6e676f696e672c20616c6c207472616e73666572732077696c6c20726573756d65206166746572206469766964656e6420706572696f642e",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4109:78:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb",
																"typeString": "literal_string \"Dividend Period is ongoing, all transfers will resume after dividend period.\""
															},
															"value": "Dividend Period is ongoing, all transfers will resume after dividend period."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a7dc92bc60dadc8ac15ef5a638cabc3519939a6e4e50185bde102b464cd15fb",
																"typeString": "literal_string \"Dividend Period is ongoing, all transfers will resume after dividend period.\""
															}
														],
														"id": 1708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4083:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:105:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "4083:105:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1715,
																"name": "_isKYCed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "4206:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1717,
															"indexExpression": {
																"id": 1716,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "4215:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4206:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206973206e6f74204b59436564",
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4224:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e",
																"typeString": "literal_string \"Sender is not KYCed\""
															},
															"value": "Sender is not KYCed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4240c2ae8e6ee170615d0cf8c222725429f73c6d87ba624f8ed52a0a7f30ef5e",
																"typeString": "literal_string \"Sender is not KYCed\""
															}
														],
														"id": 1714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4198:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4198:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "4198:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1722,
																"name": "_isKYCed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "4264:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1724,
															"indexExpression": {
																"id": 1723,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "4273:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4264:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e74206973206e6f74204b59436564",
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4285:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387",
																"typeString": "literal_string \"Recipient is not KYCed\""
															},
															"value": "Recipient is not KYCed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11bf78a29fe78b06c0c32bc3e38996c4fa8875128bf66c912a57452e4ccd9387",
																"typeString": "literal_string \"Recipient is not KYCed\""
															}
														],
														"id": 1721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4256:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4256:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "4256:54:11"
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "3920:73:11",
										"text": " @dev Internal function to validate transfer conditions"
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateTransfer",
									"nameLocation": "4007:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4033:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "4025:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4025:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4049:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "4041:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4041:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4024:35:11"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4073:0:11"
									},
									"scope": 2046,
									"src": "3998:319:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "4480:99:11",
										"statements": [
											{
												"expression": {
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1737,
															"name": "_ownsTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "4490:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1739,
														"indexExpression": {
															"id": 1738,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "4502:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4490:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4515:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4490:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "4490:29:11"
											},
											{
												"expression": {
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1743,
															"name": "_ownsTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "4529:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1745,
														"indexExpression": {
															"id": 1744,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "4541:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4529:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1747,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1732,
																	"src": "4561:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1746,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "4551:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4551:17:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4571:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4529:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "4529:43:11"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "4327:74:11",
										"text": " @dev Internal function to update token ownership status"
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateTokenOwnership",
									"nameLocation": "4415:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4445:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "4437:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4461:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "4453:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:35:11"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4480:0:11"
									},
									"scope": 2046,
									"src": "4406:173:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "4694:272:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1767,
																"name": "_tokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "4712:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4735:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4727:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1768,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4727:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4727:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4712:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4704:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:71:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "4704:71:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1777,
															"name": "_tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "4800:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1778,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "4813:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1776,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "4794:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4794:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "4794:27:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1782,
																"name": "_tokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "4854:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1781,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "4844:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4844:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4870:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4844:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"nodeType": "IfStatement",
												"src": "4840:90:11",
												"trueBody": {
													"id": 1792,
													"nodeType": "Block",
													"src": "4873:57:11",
													"statements": [
														{
															"expression": {
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1786,
																		"name": "_ownsTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "4887:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1788,
																	"indexExpression": {
																		"id": 1787,
																		"name": "_tokenOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1756,
																		"src": "4899:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4887:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4914:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4887:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1791,
															"nodeType": "ExpressionStatement",
															"src": "4887:32:11"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4955:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1765,
												"id": 1795,
												"nodeType": "Return",
												"src": "4948:11:11"
											}
										]
									},
									"functionSelector": "263719c1",
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1761,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1382,
													"src": "4666:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1762,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1760,
												"name": "onlyRole",
												"nameLocations": [
													"4657:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4657:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4657:21:11"
										}
									],
									"name": "burnMyBalance",
									"nameLocation": "4598:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "_tokenOwner",
												"nameLocation": "4620:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4612:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4641:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4633:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4633:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:38:11"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "4688:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4688:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4687:6:11"
									},
									"scope": 2046,
									"src": "4589:377:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "5066:40:11",
										"statements": [
											{
												"expression": {
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1807,
														"name": "_dividendPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "5076:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1808,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "5094:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5076:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "5076:23:11"
											}
										]
									},
									"functionSelector": "d5dd4c02",
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1802,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1382,
													"src": "5040:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1803,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1801,
												"name": "onlyRole",
												"nameLocations": [
													"5031:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5031:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5031:21:11"
										},
										{
											"id": 1805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1804,
												"name": "nonReentrant",
												"nameLocations": [
													"5053:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "5053:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5053:12:11"
										}
									],
									"name": "updateDividendPeriodStatus",
									"nameLocation": "4985:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "5017:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "5012:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5012:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:12:11"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5066:0:11"
									},
									"scope": 2046,
									"src": "4976:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "5184:39:11",
										"statements": [
											{
												"expression": {
													"id": 1817,
													"name": "_dividendPeriod",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1397,
													"src": "5201:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1816,
												"id": 1818,
												"nodeType": "Return",
												"src": "5194:22:11"
											}
										]
									},
									"functionSelector": "d8326a18",
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDividendPaymentPeriodState",
									"nameLocation": "5125:29:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5154:2:11"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "5178:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5178:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5177:6:11"
									},
									"scope": 2046,
									"src": "5116:107:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "5306:323:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1831,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "5324:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5340:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5332:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1832,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5332:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5332:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5324:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5344:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5316:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5316:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1839,
												"nodeType": "ExpressionStatement",
												"src": "5316:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5380:15:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1841,
																	"name": "_isKYCed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5381:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1843,
																"indexExpression": {
																	"id": 1842,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1822,
																	"src": "5390:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5381:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220697320616c7265616479204b59436564",
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5397:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e",
																"typeString": "literal_string \"User is already KYCed\""
															},
															"value": "User is already KYCed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94fb025cac865534426668c7db0f22c160cb145d774424258afa891622f37c1e",
																"typeString": "literal_string \"User is already KYCed\""
															}
														],
														"id": 1840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5372:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5372:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "5372:49:11"
											},
											{
												"expression": {
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1848,
															"name": "_isKYCed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "5440:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1850,
														"indexExpression": {
															"id": 1849,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "5449:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5440:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5457:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5440:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "5440:21:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1857,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "5486:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1854,
															"name": "_kycUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "5471:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5481:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5471:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5471:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "5471:20:11"
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1860,
															"name": "_kycUserIndices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "5501:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1862,
														"indexExpression": {
															"id": 1861,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "5517:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5501:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1863,
																"name": "_kycUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "5525:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5535:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5525:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5544:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5525:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5501:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "5501:44:11"
											},
											{
												"expression": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1869,
															"name": "_ownsTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "5555:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1871,
														"indexExpression": {
															"id": 1870,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "5567:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5555:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5575:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5555:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "5555:25:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1876,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "5617:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1875,
														"name": "KYCUserAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "5604:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5604:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "EmitStatement",
												"src": "5599:23:11"
											}
										]
									},
									"functionSelector": "fb4900fc",
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1825,
													"name": "KYC_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1387,
													"src": "5283:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1826,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1824,
												"name": "onlyRole",
												"nameLocations": [
													"5274:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5274:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5274:18:11"
										},
										{
											"id": 1828,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1827,
												"name": "nonReentrant",
												"nameLocations": [
													"5293:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "5293:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5293:12:11"
										}
									],
									"name": "addKYCUser",
									"nameLocation": "5242:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5261:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "5253:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:14:11"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5306:0:11"
									},
									"scope": 2046,
									"src": "5233:396:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "5715:774:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1891,
																"name": "_isKYCed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "5733:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1893,
															"indexExpression": {
																"id": 1892,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "5742:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5733:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206973206e6f74204b59436564",
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5749:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3",
																"typeString": "literal_string \"User is not KYCed\""
															},
															"value": "User is not KYCed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_412c98b671ec6b8031f3bf54b087e5a2acdf397fdaeb09985de621ed0d31c9f3",
																"typeString": "literal_string \"User is not KYCed\""
															}
														],
														"id": 1890,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5725:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5725:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "5725:44:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5787:18:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1898,
																	"name": "_ownsTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "5788:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1900,
																"indexExpression": {
																	"id": 1899,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "5800:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5788:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206f776e7320746f6b656e732c2063616e6e6f742072656d6f76652066726f6d204b5943206c697374",
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5807:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7",
																"typeString": "literal_string \"User owns tokens, cannot remove from KYC list\""
															},
															"value": "User owns tokens, cannot remove from KYC list"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_223690b7a07a0e91daf32468f9c3e741945b22843b8169045fad8953289ca9e7",
																"typeString": "literal_string \"User owns tokens, cannot remove from KYC list\""
															}
														],
														"id": 1897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5779:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5779:76:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "5779:76:11"
											},
											{
												"assignments": [
													1906
												],
												"declarations": [
													{
														"constant": false,
														"id": 1906,
														"mutability": "mutable",
														"name": "found",
														"nameLocation": "5879:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "5874:10:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1905,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5874:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1908,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5887:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5874:18:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1909,
															"name": "_kycUserIndices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "5906:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1911,
														"indexExpression": {
															"id": 1910,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "5922:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5906:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1912,
															"name": "_kycUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "5930:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5940:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5930:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5906:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1926,
												"nodeType": "IfStatement",
												"src": "5902:119:11",
												"trueBody": {
													"id": 1925,
													"nodeType": "Block",
													"src": "5948:73:11",
													"statements": [
														{
															"expression": {
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1915,
																	"name": "found",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1906,
																	"src": "5962:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1916,
																			"name": "_kycUsers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "5970:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1920,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1917,
																				"name": "_kycUserIndices",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1408,
																				"src": "5980:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1919,
																			"indexExpression": {
																				"id": 1918,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1882,
																				"src": "5996:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5980:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5970:32:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1921,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "6006:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "5970:40:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5962:48:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1924,
															"nodeType": "ExpressionStatement",
															"src": "5962:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1928,
															"name": "found",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "6038:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f7420666f756e6420696e204b5943206c697374",
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6045:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52",
																"typeString": "literal_string \"User not found in KYC list\""
															},
															"value": "User not found in KYC list"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_577922cdbc44d4fccf81a7537773c954653a66b546919095dfe0d1f089ff0f52",
																"typeString": "literal_string \"User not found in KYC list\""
															}
														],
														"id": 1927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6030:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6030:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1931,
												"nodeType": "ExpressionStatement",
												"src": "6030:44:11"
											},
											{
												"assignments": [
													1933
												],
												"declarations": [
													{
														"constant": false,
														"id": 1933,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "6101:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "6093:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1932,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6093:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1938,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1934,
															"name": "_kycUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "6113:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6123:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6113:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6132:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6113:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6093:40:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1939,
															"name": "_kycUserIndices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "6147:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1941,
														"indexExpression": {
															"id": 1940,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "6163:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6147:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1942,
														"name": "lastIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "6172:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6147:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1965,
												"nodeType": "IfStatement",
												"src": "6143:195:11",
												"trueBody": {
													"id": 1964,
													"nodeType": "Block",
													"src": "6183:155:11",
													"statements": [
														{
															"expression": {
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1944,
																		"name": "_kycUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "6197:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1948,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1945,
																			"name": "_kycUserIndices",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "6207:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1947,
																		"indexExpression": {
																			"id": 1946,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1882,
																			"src": "6223:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6207:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6197:32:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1949,
																		"name": "_kycUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "6232:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1951,
																	"indexExpression": {
																		"id": 1950,
																		"name": "lastIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "6242:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6232:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6197:55:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1953,
															"nodeType": "ExpressionStatement",
															"src": "6197:55:11"
														},
														{
															"expression": {
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1954,
																		"name": "_kycUserIndices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "6266:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1958,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1955,
																			"name": "_kycUsers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "6282:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1957,
																		"indexExpression": {
																			"id": 1956,
																			"name": "lastIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1933,
																			"src": "6292:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6282:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6266:37:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1959,
																		"name": "_kycUserIndices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "6306:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1961,
																	"indexExpression": {
																		"id": 1960,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "6322:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6306:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6266:61:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1963,
															"nodeType": "ExpressionStatement",
															"src": "6266:61:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1966,
															"name": "_kycUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "6347:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6357:3:11",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6347:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6347:15:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "6347:15:11"
											},
											{
												"expression": {
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1971,
															"name": "_isKYCed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "6381:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1973,
														"indexExpression": {
															"id": 1972,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "6390:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6381:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6398:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6381:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "6381:22:11"
											},
											{
												"expression": {
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1977,
															"name": "_kycUserIndices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "6413:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1979,
														"indexExpression": {
															"id": 1978,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "6429:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6413:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6437:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6413:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "6413:25:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1984,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "6477:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1983,
														"name": "KYCUserRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "6462:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6462:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1986,
												"nodeType": "EmitStatement",
												"src": "6457:25:11"
											}
										]
									},
									"functionSelector": "ed831fa4",
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1885,
													"name": "KYC_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1387,
													"src": "5692:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1886,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1884,
												"name": "onlyRole",
												"nameLocations": [
													"5683:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5683:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5683:18:11"
										},
										{
											"id": 1888,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1887,
												"name": "nonReentrant",
												"nameLocations": [
													"5702:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "5702:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5702:12:11"
										}
									],
									"name": "removeKYCUser",
									"nameLocation": "5648:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5670:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "5662:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5662:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5661:14:11"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5715:0:11"
									},
									"scope": 2046,
									"src": "5639:850:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "6565:46:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1995,
														"name": "_isKYCed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "6582:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1997,
													"indexExpression": {
														"id": 1996,
														"name": "_stakeHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "6591:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6582:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1994,
												"id": 1998,
												"nodeType": "Return",
												"src": "6575:29:11"
											}
										]
									},
									"functionSelector": "b4c7f1ed",
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isKYCed",
									"nameLocation": "6508:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "_stakeHolder",
												"nameLocation": "6524:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "6516:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6516:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6515:22:11"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "6559:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1992,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6559:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6558:6:11"
									},
									"scope": 2046,
									"src": "6499:112:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "6682:33:11",
										"statements": [
											{
												"expression": {
													"id": 2006,
													"name": "_kycUsers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1400,
													"src": "6699:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2005,
												"id": 2007,
												"nodeType": "Return",
												"src": "6692:16:11"
											}
										]
									},
									"functionSelector": "f2f2a8ef",
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKYCList",
									"nameLocation": "6630:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6640:2:11"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "6664:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2002,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6664:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2003,
													"nodeType": "ArrayTypeName",
													"src": "6664:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6663:18:11"
									},
									"scope": 2046,
									"src": "6621:94:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "6785:40:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2014,
														"name": "_kycUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "6802:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6812:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6802:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2013,
												"id": 2016,
												"nodeType": "Return",
												"src": "6795:23:11"
											}
										]
									},
									"functionSelector": "629044d2",
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "kycUsersListLength",
									"nameLocation": "6734:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6752:2:11"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "6776:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:11"
									},
									"scope": 2046,
									"src": "6725:100:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "6908:49:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2025,
														"name": "_ownsTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "6925:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2027,
													"indexExpression": {
														"id": 2026,
														"name": "_stakeHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "6937:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6925:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2024,
												"id": 2028,
												"nodeType": "Return",
												"src": "6918:32:11"
											}
										]
									},
									"functionSelector": "d9d61655",
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnedTokens",
									"nameLocation": "6844:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "_stakeHolder",
												"nameLocation": "6867:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "6859:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6859:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6858:22:11"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "6902:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6902:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6901:6:11"
									},
									"scope": 2046,
									"src": "6835:122:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "7042:48:11",
										"statements": [
											{
												"expression": {
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2038,
															"name": "_ownsTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "7052:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2040,
														"indexExpression": {
															"id": 2039,
															"name": "stakeHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "7064:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7052:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7079:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7052:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2043,
												"nodeType": "ExpressionStatement",
												"src": "7052:31:11"
											}
										]
									},
									"functionSelector": "a9eb3f99",
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2035,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1382,
													"src": "7029:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2036,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2034,
												"name": "onlyRole",
												"nameLocations": [
													"7020:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "7020:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7020:21:11"
										}
									],
									"name": "updateOwnsToken",
									"nameLocation": "6976:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "stakeHolder",
												"nameLocation": "7000:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "6992:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6992:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6991:21:11"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7042:0:11"
									},
									"scope": 2046,
									"src": "6967:123:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2047,
							"src": "438:6654:11",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419,
								1189,
								1194
							],
							"usedEvents": [
								317,
								326,
								335,
								1107,
								1116,
								1416,
								1420
							]
						}
					],
					"src": "32:7060:11"
				},
				"id": 11
			}
		}
	}
}